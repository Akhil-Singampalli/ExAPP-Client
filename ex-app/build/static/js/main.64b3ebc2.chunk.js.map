{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","Components/models/User.js","Components/Login.js","Components/Register.js","utils/ImagesData.js","utils/home/1.jpg","utils/home/2.jpg","utils/home/3.jpg","utils/home/4.jpg","utils/home/5.jpg","Components/GDrive.js","Components/Drive.js","Components/Home.js","Components/SMSnootificationManager.js","utils/MenuData.js","Components/Calendar.js","Components/Appointment.js","Components/models/FieldDetails.js","Components/AdminPatientPageEdit.js","Components/PatientDetails.js","Components/DocUpdatePatData.js","Components/ContactUs.js","utils/services/hair.jpg","utils/services/face.jpg","utils/services/skin.jpg","utils/services/body.jpg","utils/services/laser.jpg","Components/Services.js","utils/services/surgeries.jpg","Components/ViewAppointments.js","Components/CreateEvent.js","Components/AdminAddDoctor.js","Components/AdminAddPatsBulk.js","Components/AdminPatientDetailsEdit.js","Components/Navbar.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","User","Login","props","loginSubmit","user","contactNumber","state","formvalue","password","LoginForm","axios","post","response","setState","register","login","successMessage","data","name","sessionStorage","setItem","userName","userId","emailId","console","log","getItem","catch","error","errorMessage","message","cancel","handleSubmit","event","preventDefault","handleChange","value","target","validate","fieldName","validationerrorMessage","formerrorMessage","formvalid","match","buttonActive","this","to","className","style","marginTop","id","required","type","min","max","onChange","placeholder","contactErrorMessage","passwordErrorMessage","severity","text","onClick","Component","Register","submitRegister","userData","patientName","fname","lname","email","firstname","document","getElementById","lastname","confirmPassword","usersData","handeChange","length","disabled","images","url","Upload","clientId","developerKey","DISCOVERY_DOCS","Drive","parentFolder","parentCallback","useDrivePicker","openPicker","authRes","useState","setUrl","authButtonRef","useRef","signoutButtonRef","listFilesButtonRef","initClient","window","gapi","client","init","apiKey","discoveryDocs","scope","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","current","onclick","handleSignoutClick","listFileClick","err","display","useEffect","load","upload","docs","a","doc","drive","files","fileId","fields","res","JSON","parse","body","webViewLink","openUrl","urls","map","signOut","access_token","headers","Authorization","fetch","list","result","i","file","kind","webContentLink","Button","viewId","MimeTypes","supportDrives","multiselect","customScopes","showUploadView","showUploadFolders","width","height","paddingBlock","size","Home","sms","fileObj","smsData","mobileNo","accessToken","showBullets","showNavs","MenuData","title","path","icon","cName","MenuDataAdmin","MenuDataDoc","Calendar","slotsAvailability","newDate","moment","add","date","getEvents","handleNewSlots","availableTimeslots","docMail","format","that","request","startOf","toISOString","endOf","count","events","items","sortedEvents","sort","b","start","dateTime","setSlots","isBusy","isEmpty","isLoading","freeDay","slots","okSlots","reason","busyhours","e","eventItem","push","end","Set","t","j","t1","split","k","t2","diff","Date","setDate","getDate","setHours","parseInt","CreateEvent","time","getTime","setTime","onTrigger","tick","setStatus","now","isBetween","timeCallback","checkDayAvailability","day","patMail","pat","stateDoc","dayAvailability","startTime","endTime","doctorMail","newValue","borderRadius","primaryColor","eventDurationInMinutes","onStartTimeSelect","startTimeEventEmit","nextProps","prevState","undefined","Appointment","getDetails","doctorsData","urlP","params","patientId","patient","SubmitAppointment","aptDate","toString","aptTime","aptData","aptPatient","aptDoctor","aptDoctorId","aptStatus","doctor","key","doctorId","handleCallback","calendar","patientMail","aptPatientId","role","onSubmit","selected","defaultValue","doctorName","Type","PatientDetails","callbackImages","newList","item","updatedItem","fieldValue","concat","callbackPrescriptions","callbackBills","writePermission","hide","readPermission","submitDetails","put","patData","index","fieldId","togglePrescriptions","togglePrescription","toggleImages","toggleBills","ImageGallery","gallery","src","pageValue","PatName","showFieldEdit","backgroundColor","textAlign","alignItems","Color","fontWeight","marginLeft","class","action","method","source","padding","for","fieldType","pres_data_id","viewer","minHeight","color","Collapse","in","float","href","img_data_id","bills_data_id","justifyContent","DocUpdatePatData","patDataCopy","handleSearch","word","filtered","filter","entry","Object","values","some","val","toLocaleLowerCase","includes","marginRight","ButtonToolbar","Details","frameborder","border","allowfullscreen","tabindex","loading","referrerpolicy","hairServiceImage","alt","faceServiceImage","skinServiceImage","ViewAppointments","UpdateAppointment","aptId","showAptEdit","location","reload","handleShowAptEdit","handleCloseAptEdit","handleAptUpdate","handleAptCancel","handleAddApointment","Id","urlApt","addEvent","signIn","insert","execute","open","htmlLink","CreateGoogleEvent","handleSort","alertshow","alert","background","Modal","dialogClassName","show","onHide","Header","closeButton","Title","Body","Fragment","mail","AdminAddDoctor","AdminAddPatsBulk","handleSave","row","newData","rows","findIndex","splice","fileHandler","checkFile","ExcelRenderer","resp","newRows","slice","phone","cols","FormData","append","warn","handleDelete","handleAdd","columns","dataIndex","editable","render","record","onConfirm","theme","fontSize","components","EditableFormRow","cell","EditableCell","col","onCell","span","marginBottom","rel","download","beforeUpload","onRemove","multiple","rowClassName","dataSource","AdminPatientDetailsEdit","handleShowAddField","handleCloseAddField","field","submitTemplate","handleAddField","FieldName","FieldType","FieldValue","patdata","position","NavBar","dialog_visible","logout","clear","logged_out","confirm_logout","toggleSidebar","sideNav","logged_userId","logged_userName","exact","component","ContactUs","Services","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.64b3ebc2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export class User{\r\n    userId;\r\n    name;\r\n    emailId;\r\n    contactNumber;\r\n    password;\r\n}","import {User} from \"./models/User\";\r\nimport React, {Component} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../index.css\";\r\nimport \"../App.css\";\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            successMessage: \"\",\r\n            register: false,\r\n            login: false,\r\n            cancel:false,\r\n           \r\n            formvalue: {\r\n                contactNumber: \"\",\r\n                password: \"\"\r\n            },\r\n            formerrorMessage: {\r\n                contactNumber: \"\",\r\n                password: \"\"\r\n            },\r\n            formvalid: {\r\n                contactNumber: false,\r\n                password: false,\r\n                buttonActive: false\r\n            },\r\n            successMessage:\"\",\r\n            errorMessage:\"\"\r\n        };\r\n    }\r\n    \r\n\r\n    loginSubmit = () => {\r\n        const user = new User();\r\n        user.contactNumber = this.state.formvalue.contactNumber;\r\n        user.password = this.state.formvalue.password;\r\n        \r\n        let LoginForm = {\r\n            contactNumber : this.state.formvalue.contactNumber,\r\n            password : this.state.formvalue.password\r\n        }\r\n        axios.post('https://82.180.162.253:7000/exult/loginAPI/login',LoginForm)\r\n        .then(response => { this.setState({\r\n \r\n            register: false,\r\n            login: true,\r\n            successMessage: \"Welcome\"+response.data.name\r\n            \r\n        })\r\n        sessionStorage.setItem(\"userName\",response.data.userName);\r\n        sessionStorage.setItem(\"userId\",response.data.userId);\r\n        sessionStorage.setItem(\"contactNumber\",response.data.contactNumber);\r\n        sessionStorage.setItem(\"emailId\",response.data.emailId);\r\n        // window.location.reload();\r\n        console.log(sessionStorage.getItem(\"userId\"))\r\n        console.log(response.data.userId)\r\n       \r\n    }).catch(error=>{\r\n            if(error.response) {\r\n                this.setState({ errorMessage : error.response.data.message ,successMessage : \"\" , login: false});\r\n                console.log(sessionStorage.getItem(\"userName\"))\r\n            }else {\r\n                this.setState({ errorMessage : \"Server is down\", successMessage : \"\"});\r\n            }\r\n        });\r\n\r\n       \r\n        };\r\n\r\n    cancel=()=>{\r\n        this.setState({cancel:true})\r\n    }\r\n\r\n    register= () =>{\r\n        this.setState({register:true})\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.loginSubmit();\r\n      }\r\n\r\n    handleChange = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n        this.setState({ formvalue: { ...formvalue, [name]: value } });\r\n        this.validate(event);\r\n      }\r\n    \r\n    validate = event => {\r\n        var fieldName = event.target.name;\r\n        var value = event.target.value;\r\n        var validationerrorMessage = this.state.formerrorMessage;\r\n        var formvalid = this.state.formvalid;\r\n        \r\n        switch (fieldName) {\r\n            case \"contactNumber\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.contactNumber = \"Enter the field\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else if (!value.match(/^[6-9][0-9]{9}$/)) {\r\n                    validationerrorMessage.contactNumber = \"Please enter valid Indian Number\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.contactNumber = \"\";\r\n                    formvalid.contactNumber = true;\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.register == true) return <Redirect to={\"/Register\"} />;\r\n        else if (this.state.login == true || this.state.cancel == true) return <Redirect to={\"/\"} />;\r\n        return (\r\n            <div>\r\n                <div className=\"App-header\" >\r\n                    <section className='card container-fluid' style={{ marginTop: \"70px\" }}>\r\n                        <form className=\"form-control card-body\" >\r\n                        <div className=\"text-center card-header\">\r\n                                    <h2><b>LOGIN</b></h2>\r\n                                </div>\r\n                            <div className=\"card-group\">\r\n                                <span className=\"form-control-sm\">\r\n                                    <input\r\n                                        id=\"contactNumber\"\r\n                                        required\r\n                                        type=\"tel\"\r\n                                        min=\"6000000000\"\r\n                                        max=\"9999999999\"\r\n                                        name=\"contactNumber\"\r\n                                        onChange={this.handleChange}\r\n                                        className=\"form-group\"\r\n                                        placeholder=\"Contact Number\"\r\n                                        value={this.state.formvalue.contactNumber}\r\n                                    />\r\n                                   \r\n                                </span>\r\n                                {this.state.contactErrorMessage ? (\r\n                                    <span className=\"text-center alert-warning\">{this.state.contactErrorMessage}</span>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"card-group\">\r\n                                <span className=\"form-control-sm\">\r\n                                    <input\r\n                                        id=\"password\"\r\n                                        value={this.state.formvalue.password}\r\n                                        required\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        className=\"\"\r\n                                        placeholder=\"Password\"\r\n                                        onChange={this.handleChange}\r\n                                       \r\n                                    />              \r\n                                </span>\r\n                                {this.state.passwordErrorMessage ? (\r\n                                    <span\r\n                                        severity=\"error\"\r\n                                        className=\"alert-warning\"\r\n                                        text={this.state.passwordErrorMessage}\r\n                                    />\r\n                                ) : null}\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"form-control-sm\">\r\n                                <div className=\"col\" >\r\n                                    <div className=\"form-inline row\">\r\n                                        <button\r\n                                            type=\"submit\" \r\n                                            name=\"login\"\r\n                                            className=\" btn  btn-success\"\r\n                                            onClick={this.handleSubmit}\r\n                                        >\r\n                                          <b>Login</b>\r\n                                        </button>\r\n                                        <br></br>\r\n                                        \r\n                                        <button\r\n                                            type=\"submit\" value=\"cancel\"\r\n                                            className=\" btn btn-secondary\"\r\n                                            onClick={this.cancel}\r\n                                        >\r\n                                           <b>Cancel</b> \r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <br></br>\r\n                                <button\r\n                                    type=\"submit\" name=\"register\"\r\n                                    className=\"btn btn-primary \"\r\n                                    onClick={this.register}\r\n                                >\r\n                                    <b>Register</b>\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                        <span className=\"text-center alert-success\"><b>{this.state.successMessage}</b></span>\r\n                        <span className=\"text-center alert-danger\"><b>{this.state.errorMessage}</b></span>\r\n                    </section>\r\n                    <section className=\"col\"></section>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Login;","import { toBeVisible } from \"@testing-library/jest-dom/dist/matchers\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { User } from \"./models/User\";\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            formvalue: {\r\n                usersData: [],\r\n                fname: \"\",\r\n                lname: \"\",\r\n                contactNumber: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                confirmPassword: \"\"\r\n            },\r\n            formerrorMessage: {\r\n                name: \"\",\r\n                email: \"\",\r\n                contactNumber: \"\",\r\n                password: \"\"\r\n            },\r\n            formvalid: {\r\n                name: false,\r\n                email: false,\r\n                contactNumber: false,\r\n                password: false,\r\n                buttonActive: false\r\n            },\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false,\r\n            register : false\r\n        };\r\n    }\r\n\r\n\r\n    submitRegister = () => {\r\n\r\n        let userData = {\r\n            patientName: this.state.formvalue.fname + ' ' + this.state.formvalue.lname,\r\n            emailId: this.state.formvalue.email,\r\n            contactNumber: this.state.formvalue.contactNumber,\r\n            password: this.state.formvalue.password\r\n        }\r\n\r\n        var firstname = document.getElementById(\"firstname\").value;\r\n        var lastname = document.getElementById(\"lastname\")\r\n        var emailId = document.getElementById(\"email\").value;\r\n        var contactNumber = document.getElementById(\"contactNumber\").value;\r\n        var password = document.getElementById(\"password\").value;\r\n\r\n        var user = new User();\r\n\r\n        user.name = firstname + ' ' + lastname ;\r\n        user.contactNumber = contactNumber;\r\n        user.emailId = emailId;\r\n        user.password = password;\r\n\r\n        this.setState({ errorMessage: \"\", successMessage: \"\" });\r\n\r\n        console.log(this.state.formvalue.password);\r\n        console.log(this.state.formvalue.confirmPassword);\r\n        if (this.state.formvalue.password === this.state.formvalue.confirmPassword) {\r\n\r\n            axios.post(\"https://exapp-server.herokuapp.com/exult/patientAPI/patientRegister\", userData)\r\n                .then(response => this.setState({\r\n\r\n                    usersData: response.data,\r\n                    successMessage: \"Registration Successfull !!\",\r\n                    errorMessage: \"\",\r\n                    buttonActive: false,\r\n                    login: true\r\n                })).catch(error => {\r\n                    if (error.response) {\r\n                        this.setState({ errorMessage: error.response.data.message, buttonActive: false, successMessage: \"\" });\r\n                    } else {\r\n                        this.setState({ errorMessage: \"Server is down\", buttonActive: false, successMessage: \"\" });\r\n                    }\r\n                });\r\n        } else {\r\n            this.setState({ errorMessage: \"Password didn't match\",buttonActive: false, })\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.submitRegister();\r\n\r\n    }\r\n\r\n    handeChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n        this.setState({ formvalue: { ...formvalue, [name]: value } });\r\n        this.validate(event);\r\n       \r\n    }\r\n\r\n    validate = event => {\r\n        var fieldName = event.target.name;\r\n        var value = event.target.value;\r\n        var validationerrorMessage = this.state.formerrorMessage;\r\n        var formvalid = this.state.formvalid;\r\n        switch (fieldName) {\r\n            case \"fname\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.name = \"Enter the field\";\r\n                    formvalid.name = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z]+$/)) {\r\n                    validationerrorMessage.name = \"Please enter your name in valid format\";\r\n                    formvalid.name = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.name = \"\";\r\n                    formvalid.name = true;\r\n                }\r\n                break;\r\n\r\n            case \"lname\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.name = \"Enter the field\";\r\n                    formvalid.name = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z]+$/)) {\r\n                    validationerrorMessage.name = \"Please enter your name in valid format\";\r\n                    formvalid.name = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.name = \"\";\r\n                    formvalid.name = true;\r\n                }\r\n                break;\r\n\r\n            case \"email\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.email = \"Enter the field\";\r\n                    formvalid.email = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z0-9]+[@][A-Za-z0-9]+[.][c][o][m]$/)) {\r\n                    validationerrorMessage.email = \"Please enter valid email\";\r\n                    formvalid.email = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.email = \"\";\r\n                    formvalid.email = true;\r\n                }\r\n                break;\r\n\r\n            case \"contactNumber\":\r\n\r\n                if (value === \"\") {\r\n                    validationerrorMessage.contactNumber = \"Enter the field\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else if (!value.match(/^[6-9][0-9]{9}$/)) {\r\n                    validationerrorMessage.contactNumber = \"Please enter valid Indian Number\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.contactNumber = \"\";\r\n                    formvalid.contactNumber = true;\r\n                }\r\n                break;\r\n            case \"password\":\r\n\r\n                if (value === \"\") {\r\n                    validationerrorMessage.password = \"Enter the field\";\r\n                    formvalid.password = false;\r\n                }\r\n                else if (!value.match(/^[A-Z]+$/) && !value.match(/^.[a-z].$/) && !value.match(/^.[0-9].$/) && value.length < 8) {\r\n\r\n                    // var regexCap = new RegExp(/^.[A-Z].$/);\r\n                    // var regexLow = new RegExp(/^.[a-z].$/);\r\n                    // var regexNum = new RegExp(/^.[0-9].$/);\r\n\r\n                    // if(!value.match(/^.[A-Z].$/)){\r\n                    //     validationerrorMessage.password = \"Password Should contain 1 upper case letter\";\r\n                    //     formvalid.password = false;\r\n                    // }else if(!value.match(regexLow)){\r\n                    //     validationerrorMessage.password = \"Password Should contain 1 lower case letter\";\r\n                    //     formvalid.password = false;\r\n                    // }else if(!value.match(regexNum)){\r\n                    //     validationerrorMessage.password = \"Password Should contain atleast 1 number\";\r\n                    //     formvalid.password = false;\r\n                    // }else if(value.length<8){\r\n                    //     validationerrorMessage.password = \"Password Should contain atleast 8 characters\";\r\n                    //     formvalid.password = false;\r\n                    // }\r\n                    validationerrorMessage.password = `*Password Should contain atleast 1 upper case, 1 lower case,1 number and minimum 8 characters`;\r\n                    formvalid.password = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.password = \"\";\r\n                    formvalid.password = true;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        console.log(formvalid)\r\n        formvalid.buttonActive = formvalid.name && formvalid.email && formvalid.contactNumber && formvalid.password ;\r\n        this.setState({ formerrorMessage: validationerrorMessage, formvalid: formvalid, successMessage: \"\" });\r\n    }\r\n\r\n    render() {\r\n        // if(this.state.register)  return <Redirect to={\"/login\"} />\r\n        return (\r\n            <div className=\"App-header\"  >\r\n                \r\n                <div >\r\n                    <br></br>\r\n                    <div className='card container-fluid' style={{ marginTop: \"70px\" }}>\r\n                        <form className=\"form-control\">\r\n                        \r\n                                    <h1 className=\"text-center card-header\"><h3><b>Patient Registration</b></h3></h1>\r\n                                \r\n                            <div className=\"card-body\">\r\n                                \r\n                                <div className=\"form-group form-col\">\r\n\r\n                                    <input id=\"firstname\" className=\" input-name\" onChange={this.handeChange} placeholder=\"First Name\" name=\"fname\" value={this.state.formvalue.fname}>\r\n                                    </input>\r\n                                    <input id=\"lastname\" className=\"input-name\" onChange={this.handeChange} name=\"lname\" placeholder=\"Last Name\" value={this.state.formvalue.lname}>\r\n                                    </input>\r\n\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    {this.state.formerrorMessage.name ? (\r\n                                        <span className=\"text alert-warning\">{this.state.formerrorMessage.name}</span>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"\">\r\n\r\n                                      <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"contactNumber\" type=\"tel\" onChange={this.handeChange} placeholder=\"Enter your contact number\" name=\"contactNumber\" value={this.state.formvalue.contactNumber}>\r\n                                        </input>\r\n                                    </div>\r\n                                    {this.state.formerrorMessage.contactNumber ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.contactNumber}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"email\" type=\"email\" onChange={this.handeChange} placeholder=\"Email\" name=\"email\" value={this.state.formvalue.email}>\r\n                                        </input>\r\n                                    </div>\r\n\r\n                                    {this.state.formerrorMessage.email ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.email}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"password\" type=\"password\" onChange={this.handeChange} placeholder=\"Password\" name=\"password\" value={this.state.formvalue.password}>\r\n                                        </input>\r\n                                    </div>\r\n\r\n                                    {this.state.formerrorMessage.password ? (\r\n                                        <span className=\"text-center alert-warning-small\">{this.state.formerrorMessage.password}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"confirmPassword\" type=\"password\" onChange={this.handeChange} placeholder=\"Confirm Password\" name=\"confirmPassword\" value={this.state.formvalue.confirmPassword}>\r\n                                        </input>\r\n                                    </div>\r\n                                        {console.log(this.state.formvalid.buttonActive)}\r\n                                    <button\r\n                                        type=\r\n                                        \"submit\"\r\n                                        className=\"btn btn-success\"\r\n                                        onClick={this.handleSubmit}\r\n                                        disabled={!this.state.formvalid.buttonActive}>\r\n                                        <b>Register</b>\r\n                                    </button>\r\n                                </div>\r\n                                <span type=\"text\" className=\"alert-info\" >{this.state.errorMessage}</span>\r\n                                <span type=\"text\" className=\"alert-success\" >{this.state.successMessage}</span>\r\n                            </div>\r\n                            <div className=\"text text-center small\">\r\n                                Already have an account?<Link className=\"text-center\" to=\"/Login\">\r\n                                    <b>Sign in</b>\r\n                                </Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Register;","import image1 from './home/1.jpg'\r\nimport image2 from './home/2.jpg'\r\nimport image3 from './home/3.jpg'\r\nimport image4 from './home/4.jpg'\r\nimport image5 from './home/5.jpg'\r\n\r\nexport const MyCollection = [\r\n    {\r\n      label: \"First Picture\",\r\n      imgPath:\r\n  \"https://media.geeksforgeeks.org/wp-content/uploads/20210208000010/1.png\",\r\n    },\r\n    {\r\n      label: \"Second Picture\",\r\n      imgPath:\r\n  \"https://media.geeksforgeeks.org/wp-content/uploads/20210208000009/2.png\",\r\n    },\r\n    {\r\n      label: \"Third Picture\",\r\n      imgPath:\r\n  \"https://media.geeksforgeeks.org/wp-content/uploads/20210208000008/3.png\",\r\n    },\r\n  ];\r\n\r\n export const images = [\r\n    { url: image1 },\r\n    { url: image2 },\r\n    { url: image3 },\r\n    { url: image4 },\r\n    { url: image5 },\r\n    { url: \"\"\r\n  },\r\n    { url: \"./images/image_7.jpg\" },\r\n  ];","export default __webpack_public_path__ + \"static/media/1.7202ad83.jpg\";","export default __webpack_public_path__ + \"static/media/2.89b0491b.jpg\";","export default __webpack_public_path__ + \"static/media/3.f841c949.jpg\";","export default __webpack_public_path__ + \"static/media/4.2b1e9d92.jpg\";","export default __webpack_public_path__ + \"static/media/5.572c6d8d.jpg\";","import { gapi } from \"gapi-script\";\r\nimport { useEffect } from \"react\";\r\nimport useDrivePicker from \"react-google-drive-picker\";\r\nimport * as FcIcons from \"react-icons/fc\"\r\n\r\nconst clientId =\r\n    \"229521899518-v2nb1anhnuj8n1rkqsi0qrpjojkl3l7r.apps.googleusercontent.com\";\r\nconst developerKey = \"AIzaSyDrVkS-ZRFRmTsJvLQTNpshIfEGyr2XhhI\";\r\nvar DISCOVERY_DOCS = [\r\n    \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"\r\n];\r\nvar SCOPES = \"https://www.googleapis.com/auth/drive.folder\";\r\n\r\nfunction Upload(parentFolder) {\r\n    const [openPicker, data, authResponse] = useDrivePicker();\r\n    // const customViewsArray = [new goog.picker.DocsView()]; // custom view\r\n    const handleOpenPicker = () => {\r\n        openPicker({\r\n            clientId: clientId,\r\n            developerKey: developerKey,\r\n            viewId: \"DOCS\",\r\n            setSelectFolderEnabled:false,\r\n            // token:\"##youraccesstoken##\", // pass oauth token in case you already have one\r\n            showUploadView: true,\r\n            showUploadFolders: true,\r\n            supportDrives: true,\r\n            setParentFolder:parentFolder,\r\n            multiselect: true,\r\n            // customViews: [\"FOLDERS\",\"DOCS_IMAGES\"], // custom view\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // do anything with the selected/uploaded files\r\n        if (data) {\r\n            data.docs.map((i) => console.log(i));\r\n        }\r\n    }, [data]);\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"btn\" onClick={() => handleOpenPicker()} style={{color:\"#000\"}}><FcIcons.FcGoogle/><b> Upload</b></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Upload;","import { useEffect, useRef, useState } from \"react\";\r\n\r\nimport useDrivePicker from \"react-google-drive-picker\";\r\nimport axios from \"axios\";\r\nimport * as FcIcons from \"react-icons/fc\";\r\nimport { Button, Collapse } from 'react-bootstrap'\r\n\r\nconst clientId =\r\n  \"229521899518-v2nb1anhnuj8n1rkqsi0qrpjojkl3l7r.apps.googleusercontent.com\";\r\nconst developerKey = \"AIzaSyDrVkS-ZRFRmTsJvLQTNpshIfEGyr2XhhI\";\r\nvar DISCOVERY_DOCS = [\r\n  \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"\r\n];\r\nvar SCOPES = \"https://www.googleapis.com/auth/drive.file\";\r\n\r\n\r\n\r\nexport default function Drive({ parentFolder,parentCallback }) {\r\n  const [openPicker, data, authRes] = useDrivePicker();\r\n  // const [loaded, error] = useInjectScript();\r\n  const [url, setUrl] = useState(\"\");\r\n  const authButtonRef = useRef();\r\n  const signoutButtonRef = useRef();\r\n  const listFilesButtonRef = useRef();\r\n  const openLinkButtonRef = useRef();\r\n\r\n  const initClient = () => {\r\n    console.log(\"init client\");\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: developerKey,\r\n        clientId: clientId,\r\n        discoveryDocs: DISCOVERY_DOCS,\r\n        scope: SCOPES\r\n      })\r\n      .then(\r\n        () => {\r\n          window.gapi.auth2\r\n            .getAuthInstance()\r\n            .isSignedIn.listen(updateSigninStatus);\r\n\r\n          // Handle the initial sign-in state.\r\n          updateSigninStatus(\r\n            window.gapi.auth2.getAuthInstance().isSignedIn.get()\r\n          );\r\n          // authButtonRef.current.onclick = handleAuthClick;\r\n          signoutButtonRef.current.onclick = handleSignoutClick;\r\n          listFilesButtonRef.current.onclick = listFileClick;\r\n          console.log(\"client inited\");\r\n        },\r\n        (err) => {\r\n          console.log(\"client error\", err);\r\n        }\r\n      );\r\n  };\r\n\r\n  function updateSigninStatus(isSignedIn) {\r\n    if (isSignedIn) {\r\n      authButtonRef.current.style.display = \"none\";\r\n      signoutButtonRef.current.style.display = \"block\";\r\n      listFilesButtonRef.current.style.display = \"block\";\r\n      // listFiles();\r\n    } else {\r\n      authButtonRef.current.style.display = \"block\";\r\n      signoutButtonRef.current.style.display = \"none\";\r\n      listFilesButtonRef.current.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (authRes) {\r\n      if (window.gapi) {\r\n        console.log(window.gapi);\r\n        window.gapi.load(\"client\", initClient);\r\n      }\r\n    }\r\n  }, [authRes]);\r\n  // console.log(\"api picker\", window.gapi.client);\r\n  const open = () => {\r\n    console.log(parentFolder)\r\n    openPicker({\r\n      clientId,\r\n      developerKey,\r\n      viewId: \"FOLDERS\",\r\n      MimeTypes: \"video/mp4 ,image/jpeg\",\r\n      supportDrives: true,\r\n      multiselect: true,\r\n      customScopes: [\"https://www.googleapis.com/auth/drive.file\"],\r\n      showUploadView: true,\r\n      showUploadFolders: true,\r\n      supportDrives: true,\r\n      multiselect: true,\r\n      setParentFolder:parentFolder\r\n    });\r\n  };\r\n\r\n  const upload = async (docs) => {\r\n    //Do we only upload one file even if the user selected more than 1 file?\r\n    //Should we keep allowing the user to select more than 1 file?\r\n    const doc = docs[0];\r\n    //get the name and the link from the file.\r\n    const { name, url, id } = doc;\r\n    console.log({ name, url, id });\r\n\r\n    window.gapi.client.drive.files\r\n      .get({ fileId: id, fields: \"*\" })\r\n      .then((res) => {\r\n        console.log(JSON.parse(res.body));\r\n        const url = JSON.parse(res.body).webViewLink;\r\n        setUrl(url);\r\n        openUrl(url);\r\n        console.log(\"is ress\", JSON.parse(res.body));\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"is error\", err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n       const urls = data.docs.map((doc) => doc.url)\r\n       console.log(data.docs);\r\n      upload(urls);\r\n      parentCallback(data.docs);\r\n    }\r\n  }, [data]);\r\n  const handleAuthClick = (event) => {\r\n    window.gapi.auth2.getAuthInstance().signIn();\r\n  };\r\n  const handleSignoutClick = (event) => {\r\n    window.gapi.auth2.getAuthInstance().signOut();\r\n  };\r\n\r\n  const openUrl = (url) => {\r\n    console.log(url, authRes.access_token);\r\n    // window.open(url);\r\n    const headers = {\r\n      Authorization: \"Bearer \" + authRes.access_token,\r\n      // \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Content-Type\": \"application/json; charset=UTF-8\"\r\n    };\r\n    console.log(headers);\r\n    fetch(url)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log({ err });\r\n      });\r\n    // axios\r\n    //   .post(url, null, { headers })\r\n    //   .then((res) => {\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err.response);\r\n    //   });\r\n  };\r\n\r\n  //when button is clicked open the url gotten for the file.\r\n  function listFiles() {\r\n    window.gapi.client.drive.files.list().then(\r\n      function (response) {\r\n        console.log(\"getting files\");\r\n        var files = response.result.files;\r\n        if (files && files.length > 0) {\r\n          for (var i = 0; i < files.length; i++) {\r\n            var file = files[i];\r\n            if (file.kind === \"drive#file\") {\r\n              window.gapi.client.drive.files\r\n                .get({ fileId: file.id, fields: \"*\" })\r\n                .then((res) => {\r\n                  console.log(JSON.parse(res.body));\r\n                  const url = JSON.parse(res.body).webContentLink;\r\n                  setUrl(url);\r\n                  openUrl(url);\r\n                  // console.log(\"is ress\", JSON.parse(res.body));\r\n                })\r\n                .catch((err) => {\r\n                  console.log(\"is error\", err);\r\n                });\r\n            }\r\n          }\r\n        } else {\r\n          console.log(\"no files found\");\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  const listFileClick = (event) => {\r\n    listFiles();\r\n  };\r\n  // const handleOpenLink = (event) => {\r\n  //   console.log(url, \" to open\");\r\n  //   window.open(url);\r\n  // };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"\">\r\n      \r\n\r\n      <Button className=\"btn\"  onClick={open} style={{ width:'120px',height: '30px',paddingBlock:'3px'}}><FcIcons.FcGoogle size={\"20px\"}/><b> UPLOAD</b></Button>\r\n      \r\n      {/* <button className=\"btn col-auto\" onClick={handleSignoutClick}><FcIcons.FcGoogle/>    <b>Sign out</b></button> */}\r\n      \r\n      {/* <button onClick={listFileClick}>list files</button>\r\n      <br /> */}\r\n      {/* <button onClick={handleOpenLink} ref={openLinkButtonRef}>\r\n        open link\r\n      </button> */}\r\n\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React, { Component, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from \"react-router-dom\";\r\n\r\nimport SimpleImageSlider from \"react-simple-image-slider\"\r\nimport { gapi } from 'gapi-script'\r\n\r\n\r\nimport { images } from \"../utils/ImagesData\";\r\nimport axios from \"axios\";\r\n\r\nimport GDrive from \"./GDrive\";\r\nimport DriveLogOut from \"./DriveLogout\";\r\nimport DriveLogin from \"./DriveLogin\"\r\nimport Drive from \"./Drive\";\r\nimport SMS from \"./SMSnootificationManager\";\r\nimport { css } from \"styled-components\";\r\n\r\n\r\nclass Home extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileObj: {\r\n                mobileNo: \"\"\r\n            },\r\n            accessToken: '',\r\n\r\n\r\n        };\r\n    }\r\n\r\n    sms = () => {\r\n        SMS(this.state.fileObj);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            \r\n\r\n            <div className=\"App-header\">\r\n\r\n                <div className=\"card container-fluid\" style={{ marginTop: \"75px\", width: \"100%\" }}>\r\n                    <SimpleImageSlider\r\n                        className=\"container-fluid\"\r\n                        width=\"98%\"\r\n                        height=\"85%\"\r\n                        images={images}\r\n                        showBullets={true}\r\n                        showNavs={true}\r\n\r\n                    />\r\n\r\n                </div>\r\n                \r\n               \r\n                <div>\r\n                    {/* <DriveLogin /> <DriveLogOut/> */}\r\n                    {/* <GDrive /> */}\r\n                    {/* <Drive /> */}\r\n                    {/* <img src=\"https://drive.google.com/uc?export=view&id=1eG9rA3T74NG69AoZkNXSyfnoXvMpD9_K\" alt=\"emo\"></img> */}\r\n                    {/* <button className=\"btn\" onClick={this.sms} >Send</button> */}\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Home;","import { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nexport default function SMS ({ smsData }) {\r\n\r\nconst data = smsData;\r\n\r\nvar body = {\r\n    \"flow_id\": \"61701531163abd49a820db42\",\r\n    \"sender\": \"exults\",\r\n    \"mobiles\": \"919515050278\",\r\n    \"VAR1\": \"Akhil\",\r\n    \"VAR2\": \"Akki\"\r\n  }\r\n\r\naxios.post(\"https://api.msg91.com/api/v5/flow/\", body ,{ \r\n    headers: {\r\n        \"Authkey\" : \"312379AYnyiHzkHSVm6161ac34P1\",\r\n        \"Content-Type\" : \"application/JSON\",\r\n        \"Host\" : \"api.msg91.com\",\r\n        \"Content-Length\" : 130,\r\n    }\r\n}).then(\r\n    (response) => {\r\n        console.log(response.data)\r\n    }\r\n).catch((error) => {\r\n    console.log(error)\r\n})\r\n\r\n\r\n}\r\n","import React from 'react'\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as MdIcons from \"react-icons/md\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\n\r\nexport const MenuData = [\r\n    {\r\n        title: 'Details',\r\n        path: '/details/'+ sessionStorage.getItem(\"userId\"),\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Appointments',\r\n        path: '/getApt/'+ sessionStorage.getItem(\"userId\"),\r\n        icon:<AiIcons.AiOutlineCalendar/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Consultations',\r\n        path: '/',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Procedures',\r\n        path: '/',\r\n        icon:<FaIcons.FaHandHoldingMedical/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Surgey',\r\n        path: '/',\r\n        icon:<FaIcons.FaProcedures/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Gallery',\r\n        path: '/',\r\n        icon:<MdIcons.MdOutlinePhotoSizeSelectActual/>,\r\n        cName: \"nav-text\",\r\n    },\r\n]\r\n\r\nexport const MenuDataAdmin = [\r\n    {\r\n        title: 'Appointments',\r\n        path: '/getApt/'+ sessionStorage.getItem(\"userId\"),\r\n        icon:<AiIcons.AiOutlineCalendar/>,\r\n        cName: \"nav-text\",\r\n    },\r\n\r\n    {\r\n        title: 'Edit Patient Details Page',\r\n        path: '/patientPageEdit',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text \",\r\n    },\r\n    {\r\n        title: 'Add Patient Details',\r\n        path: '/addPatDetails',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Upload Patient Bulk',\r\n        path: '/addPats',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Add Doctor',\r\n        path: '/addDoc',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text \",\r\n    },\r\n    {\r\n        title: 'Add Patient',\r\n        path: '/register',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text \",\r\n    },\r\n    {\r\n        title: 'Calendar',\r\n        path: '/cal',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text \",\r\n    },\r\n    \r\n]\r\n\r\nexport const MenuDataDoc = [\r\n    {\r\n        title: 'Add Patient Details',\r\n        path: '/addPatDetails',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Appointments',\r\n        path: '/getApt/'+ sessionStorage.getItem(\"userId\"),\r\n        icon:<AiIcons.AiOutlineCalendar/>,\r\n        cName: \"nav-text\",\r\n    }\r\n]","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport { gapi } from 'gapi-script';\r\nimport { ScheduleMeeting } from 'react-schedule-meeting';\r\n\r\n\r\n\r\nexport default class Calendar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: moment().format(\"ddd, Do MMMM, h:mm A\"),\r\n            events: [],\r\n            isBusy: false,\r\n            isEmpty: false,\r\n            docMail: this.props.doc,\r\n            patMail: this.props.pat,\r\n            date: \"\",\r\n            start: \"\",\r\n            end: \"\",\r\n            count: 0,\r\n            stateDoc:true,\r\n            dayAvailability: true,\r\n\r\n            okSlots: [],\r\n\r\n            availableTimeslots: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((id) => {\r\n                return {\r\n                    id,\r\n                    startTime: new Date(new Date(new Date().setDate(new Date().getDate() + id)).setHours(9, 0, 0, 0)),\r\n                    endTime: new Date(new Date(new Date().setDate(new Date().getDate() + id)).setHours(17, 0, 0, 0)),\r\n                };\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    slotsAvailability = () => {\r\n\r\n        for (let id = 0; id <= 9; id++) {\r\n\r\n            var newDate = moment().add(id, 'days')\r\n            // console.log(newDate)\r\n\r\n            this.setState({ date: newDate })\r\n\r\n            this.getEvents(newDate, id)\r\n\r\n            this.handleNewSlots()\r\n        }\r\n        return this.state.availableTimeslots\r\n\r\n    }\r\n    handleNewSlots  ()  {\r\n        this.setState({ availableTimeslots: this.state.okSlots });\r\n        this.setState({ okSlots: [],stateDoc : true });\r\n    }\r\n\r\n    getEvents = (date, id) => {\r\n        // console.log(this.state.docMail)\r\n        var doc = this.state.docMail\r\n\r\n        date = moment(date).format(\"YYYY-MM-DD\")\r\n        // console.log(date)\r\n        let that = this;\r\n        function start() {\r\n            gapi.client\r\n                .init({\r\n                    apiKey: \"AIzaSyDrVkS-ZRFRmTsJvLQTNpshIfEGyr2XhhI\"\r\n                })\r\n                .then(function () {\r\n                    return gapi.client.request({\r\n                        path: `https://www.googleapis.com/calendar/v3/calendars/${doc}/events?maxResults=11&orderBy=updated&timeMin=${moment(date).startOf('day').toISOString()}&timeMax=${moment(date).endOf('day').toISOString()}`\r\n                    });\r\n                })\r\n                .then(\r\n                    response => {\r\n                        // console.log(response);\r\n                        that.setState({ count: that.state.count + 1 })\r\n\r\n                        let events = response.result.items;\r\n                        // console.log(events)\r\n                        let sortedEvents = events.sort(function (a, b) {\r\n                            return (\r\n                                moment(b.start.dateTime).format(\"YYYYMMDD\") -\r\n                                moment(a.start.dateTime).format(\"YYYYMMDD\")\r\n                            );\r\n                        });\r\n                        // console.log(sortedEvents);\r\n\r\n                        if (events.length > 0) {\r\n                            that.setState(\r\n                                {\r\n                                    events: sortedEvents,\r\n\r\n                                }, (count) => {\r\n\r\n                                    that.setSlots(id)\r\n                                }\r\n\r\n                                // that.setStatus();   \r\n                            );\r\n\r\n                        } else {\r\n                            that.setState({\r\n                                isBusy: false,\r\n                                isEmpty: true,\r\n                                isLoading: false\r\n                            }, (count) => {\r\n                                that.freeDay(id)\r\n                            }\r\n                            )\r\n\r\n                        }\r\n                    },\r\n                    function () {\r\n                        let slots = this.state.okSlots\r\n                        this.setState({ okSlots: [] })\r\n                        \r\n                        this.setState({ availableTimeslots: slots })\r\n                        // console.log(slots)\r\n                    },\r\n                    function (reason) {\r\n                        console.log(reason)\r\n                    }\r\n                );\r\n        }\r\n        gapi.load(\"client\", start);\r\n    }\r\n\r\n\r\n    setSlots = (id) => {\r\n\r\n        let slots = this.state.okSlots\r\n\r\n        var events = this.state.events;\r\n        // console.log(events);\r\n\r\n        let busyhours = ['09:00', '21:00']              //bussiness hours 9:00 to 21:00\r\n        // id = moment(this.state.date, 'YYYY-MM-DD').diff(moment().format(\"YYYY-MM-DD\"), 'days')\r\n\r\n        for (var e = 0; e < events.length; e++) {\r\n            var eventItem = events[e];\r\n            // console.log(moment(eventItem.start.dateTime).format(\"hh\"))\r\n            busyhours.push(moment(eventItem.start.dateTime).format(\"HH:mm\"));\r\n            busyhours.push(moment(eventItem.end.dateTime).format(\"HH:mm\"));\r\n        }\r\n\r\n        busyhours = [...new Set(busyhours)];        //remove duplicates\r\n        busyhours.sort();\r\n\r\n        //  \r\n\r\n\r\n        for (let t = 0; t < busyhours.length; t += 2) {\r\n            // console.log(busyhours[t])\r\n            let j = busyhours[t];\r\n            let t1 = j.split(\":\");\r\n            let k = busyhours[t + 1];\r\n            let t2 = k.split(\":\");\r\n\r\n            while (moment(k, \"HH:mm\").diff(moment(j, \"HH:mm\"), 'minutes') == 15) {\r\n                t = t + 1\r\n                j = busyhours[t]\r\n                t1 = j.split(\":\");\r\n\r\n                k = busyhours[t + 1]\r\n                t2 = k.split(\":\");\r\n                // console.log(busyhours[t])\r\n\r\n            }\r\n\r\n            slots.push({\r\n                \"id\": id,\r\n                \"startTime\": new Date(new Date(new Date().setDate(new Date().getDate() + id)).setHours(parseInt(t1[0]), parseInt(t1[1]), 0, 0)),\r\n                \"endTime\": new Date(new Date(new Date().setDate(new Date().getDate() + id)).setHours(parseInt(t2[0]), parseInt(t2[1]), 0, 0)),\r\n            })\r\n\r\n        }\r\n\r\n        // console.log(slots)\r\n        slots.sort(function (a, b) { return a.id - b.id })\r\n\r\n        this.setState({ okSlots: slots })\r\n        // console.log(slots)\r\n\r\n        if (this.state.count == 10) {\r\n            this.setState({ okSlots: [] })\r\n            // console.log(slots)\r\n            this.setState({ availableTimeslots: slots ,count : 0})\r\n\r\n        }\r\n\r\n    }\r\n\r\n    freeDay = (id) => {\r\n\r\n        let slots = this.state.okSlots\r\n\r\n        slots.push({\r\n            \"id\": id,\r\n            \"startTime\": new Date(new Date(new Date().setDate(new Date().getDate() + id)).setHours(9, 0, 0, 0)),\r\n            \"endTime\": new Date(new Date(new Date().setDate(new Date().getDate() + id)).setHours(21, 0, 0, 0)),\r\n        })\r\n\r\n        slots.sort(function (a, b) { return (a.id - b.id) })\r\n\r\n        this.setState({ okSlots: slots })\r\n        // console.log(this.state.count)\r\n        if (this.state.count == 10) {\r\n            this.setState({ okSlots: [] })\r\n            // console.log(slots)\r\n            this.setState({ availableTimeslots: slots , count : 0})\r\n\r\n        }\r\n\r\n    }\r\n\r\n    CreateEvent = (time) => {\r\n        \r\n        console.log(time)\r\n        let start = new Date(time.getTime())\r\n        let end = new Date();\r\n        end.setTime(start.getTime() + (15 * 60000))\r\n        // console.log(start)\r\n        this.onTrigger(start)\r\n        \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.setState({ date: moment().format(\"YYYY-MM-DD\") })\r\n        this.setState({ docMail: this.props.doc })\r\n        // this.slotsAvailability();\r\n\r\n        \r\n        // console.log(this.props.doc)\r\n        // console.log(this.props.pat)\r\n\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        // console.log(nextProps)\r\n        // console.log(prevState)\r\n        if(nextProps.doc != prevState.docMail && nextProps.doc != undefined) {\r\n          return {stateDoc : false, docMail : nextProps.doc};\r\n        }\r\n      }\r\n\r\n    handleChange(e){\r\n        console.log(\"change\")\r\n        var {doctorMail} = e.target;\r\n        this.setState({\r\n          docMail : doctorMail\r\n        },() => this.props.newValue(doctorMail));\r\n      }\r\n\r\n    tick = () => {\r\n        let time = moment().format(\"dddd, Do MMMM, h:mm A\");\r\n        this.setState({\r\n            time: time\r\n        });\r\n    };\r\n\r\n    setStatus = () => {\r\n        let now = moment();\r\n        let events = this.state.events;\r\n        for (var e = 0; e < events.length; e++) {\r\n            var eventItem = events[e];\r\n            if (\r\n                moment(now).isBetween(\r\n                    moment(eventItem.start.dateTime),\r\n                    moment(eventItem.end.dateTime)\r\n                )\r\n            ) {\r\n                this.setState({\r\n                    isBusy: true\r\n                });\r\n                return false;\r\n            } else {\r\n                this.setState({\r\n                    isBusy: false\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onTrigger = (start) => {\r\n        console.log(moment(start,\"dddd, Do MMMM, h:mm A\"))\r\n\r\n        this.props.timeCallback(start);\r\n\r\n    }\r\n\r\n    checkDayAvailability = (day) => {\r\n\r\n        this.setState({ date: moment(day, 'YYYY-MM-DD') })\r\n\r\n        this.slotsAvailability()\r\n    }\r\n\r\n    render() {\r\n\r\n        if(!this.state.stateDoc){\r\n            {this.slotsAvailability()}\r\n        }\r\n        \r\n        // const { time, events } = this.state;\r\n\r\n\r\n        // let eventsList = events.map(function (event) {\r\n        //     return (\r\n        //         <label\r\n        //             className=\"list-group-item\"\r\n        //             // href={event.htmlLink\r\n        //             target=\"_blank\"\r\n        //             key={event.id}\r\n        //         >\r\n        //             {event.summary}{\" \"}\r\n        //             <span className=\"badge\">\r\n        //                 {moment(event.start.dateTime).format(\"h:mm a\")},{\" \"}\r\n        //                 {moment(event.end.dateTime).diff(\r\n        //                     moment(event.start.dateTime),\r\n        //                     \"minutes\"\r\n        //                 )}{\" \"}\r\n        //                 minutes, {moment(event.start.dateTime).format(\"MMMM Do\")}{\" \"}\r\n        //             </span>\r\n        //         </label>\r\n        //     );\r\n        // });\r\n\r\n        // let emptyState = (\r\n        //     <div className=\"empty\">\r\n        //         {/* <img src=\"./image\" alt=\"Welcome\" /> */}\r\n        //         <h6>\r\n        //             No meetings are scheduled for the day. Create one by clicking the\r\n        //             button below.\r\n        //         </h6>\r\n        //     </div>\r\n        // );\r\n\r\n\r\n\r\n        return (\r\n            <div className='form-control container-fluid ' style={{ marginTop: \"70px\", width: \"98%\" }}>\r\n\r\n                <ScheduleMeeting\r\n\r\n                    borderRadius={10}\r\n                    primaryColor=\"green\"\r\n                    eventDurationInMinutes={15}\r\n                    availableTimeslots={this.state.availableTimeslots}\r\n                    \r\n                    onStartTimeSelect={\r\n                        // console.log\r\n                        (startTimeEventEmit) => {\r\n                        // this.handeChange(startTimeEventEmit)\r\n                        // this.handleNewEvent(startTimeEventEmit)\r\n                        // startTimeEventEmit.preventDefault()\r\n                        this.onTrigger(startTimeEventEmit.startTime)\r\n                            \r\n                        // console.log(startTimeEventEmit)\r\n                    }\r\n                }\r\n                // onStartTimeSelect={console.log}\r\n                />\r\n\r\n                {/* <div className=\"form-group\">\r\n                    <h4 style={this.state.isBusy ? { color: \"red\" } : { color: \"green\" }} ><b>{this.state.isBusy ? \"BUSY\" : \"OPEN\"}</b></h4>\r\n                </div>\r\n                <div className=\"upcoming-meetings\">\r\n                    <div className=\"current-time\">{time}</div>\r\n                    <label>Available Slots</label>\r\n                    <div className=\"list-group\">\r\n                        {events.length > 0 && eventsList}\r\n                        {this.state.isEmpty && emptyState}\r\n                    </div>\r\n                    <a\r\n                        className=\"primary-cta\"\r\n                        href=\"https://calendar.google.com/calendar/u/0?cid=c2luZ2FtcGFsbGlha2hpbEBnbWFpbC5jb20\"\r\n                        target=\"_blank\"\r\n                    >\r\n                        +\r\n                    </a>\r\n                </div> */}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Dropdown from 'react-dropdown';\r\nimport moment from \"moment\";\r\nimport 'react-dropdown/style.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Calendar from './Calendar';\r\nimport { ScheduleMeeting } from 'react-schedule-meeting';\r\n\r\n\r\n\r\n\r\nexport default class Appointment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            doctorsData: [],\r\n\r\n            patient: {},\r\n\r\n            aptData: [],\r\n            availableTimeslots: [],\r\n\r\n            formvalue: {\r\n                aptPatientId: \"\",\r\n                aptDoctorId: \"\",\r\n                aptTime: \"\",\r\n                aptDate: \"\",\r\n                aptStatus: \"Pending\",\r\n            },\r\n            formerrorMessage: {\r\n                name: \"\",\r\n                email: \"\",\r\n                contactNumber: \"\",\r\n                password: \"\"\r\n            },\r\n            formvalid: {\r\n                name: false,\r\n                email: false,\r\n                contactNumber: false,\r\n                password: false,\r\n                buttonActive: false\r\n            },\r\n\r\n            doctorMail: \"\",\r\n            patientMail: sessionStorage.getItem(\"emailId\"),\r\n\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDetails();\r\n    }\r\n\r\n    getDetails = () => {\r\n        let urlD = \"https://exapp-server.herokuapp.com/exult/docAPI/details\";\r\n        axios.get(urlD)\r\n            .then(response => this.setState({ doctorsData: response.data }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n        var urlP = \"https://exapp-server.herokuapp.com/exult/patientAPI/patient/\" + this.props.match.params.patientId;\r\n        console.log(urlP)\r\n\r\n        axios.get(urlP)\r\n            .then(response => this.setState({ patient: response.data }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n    }\r\n\r\n    SubmitAppointment = () => {\r\n        console.log((this.state.formvalue.aptDate).toString())\r\n        if (this.state.formvalue.aptDate != '' && this.state.formvalue.aptTime != '') {\r\n\r\n            let aptData = {\r\n                aptPatient: this.props.match.params.patientId,\r\n                aptDoctor: this.state.formvalue.aptDoctorId,\r\n                aptTime: this.state.formvalue.aptTime,\r\n                aptDate: this.state.formvalue.aptDate,\r\n                aptStatus: \"Pending\"\r\n            }\r\n\r\n            this.setState({ errorMessage: \"\", successMessage: \"\" });\r\n\r\n            console.log(aptData);\r\n\r\n            axios.post('https://exapp-server.herokuapp.com/exult/aptAPI/bookApt', aptData)\r\n                .then(response => this.setState({\r\n\r\n                    aptData: response.data,\r\n                    successMessage: \"Appointment Request Submitted Successfull !!\",\r\n                    errorMessage: \"\",\r\n                    login: true\r\n                })).catch(error => {\r\n                    if (error.response) {\r\n                        this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                    } else {\r\n                        this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                    }\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.SubmitAppointment();\r\n\r\n    }\r\n\r\n    handeChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n        this.setState({ formvalue: { ...formvalue, [name]: value } },\r\n            () => {\r\n                if (event.target.id == \"doc\") {\r\n\r\n                    this.state.doctorsData.map((doctor, key) => {\r\n\r\n                        if (doctor.doctorId == value) {\r\n\r\n                            this.setState({ doctorMail: doctor.emailId })\r\n                            this.setState({ formvalue: { ...formvalue, aptDoctorId: doctor.doctorId } })\r\n                        }\r\n\r\n                    })\r\n\r\n                }\r\n            }\r\n        );\r\n        this.validate(event);\r\n\r\n    }\r\n\r\n    handleCallback = (startTime) => {\r\n        console.log(startTime)\r\n        const { formvalue } = this.state;\r\n\r\n        this.setState({ formvalue: { ...formvalue, aptTime: moment(startTime).format('HH:mm'), \r\n                                                    aptDate: moment(startTime).format(\"DD-MM-YYYY\") } },\r\n                                                    ()=>{\r\n                                                        console.log(this.state.formvalue)\r\n                                                        this.SubmitAppointment();\r\n                                                    })\r\n       \r\n    }\r\n\r\n    calendar = (event) => {\r\n        //     console.log(this.state.doctorMail)\r\n        //  var {doctorMail} = this.state\r\n        //   this.setState({ doctorMail : event.target.value})\r\n\r\n        return (\r\n            <div>\r\n                <Calendar timeCallback={this.handleCallback} doc={this.state.doctorMail} pat={this.state.patientMail} />\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n    validate = event => {\r\n        var fieldName = event.target.name;\r\n        var value = event.target.value;\r\n        var validationerrorMessage = this.state.formerrorMessage;\r\n        var formvalid = this.state.formvalid;\r\n        switch (fieldName) {\r\n            case \"fullName\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.name = \"Enter the field\";\r\n                    formvalid.name = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z]+$/)) {\r\n                    validationerrorMessage.name = \"Please enter your name in valid format\";\r\n                    formvalid.name = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.name = \"\";\r\n                    formvalid.name = true;\r\n                }\r\n                break;\r\n\r\n            case \"email\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.email = \"Enter the field\";\r\n                    formvalid.email = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z0-9]+[@][A-Za-z0-9]+[.][c][o][m]$/)) {\r\n                    validationerrorMessage.email = \"Please enter valid email\";\r\n                    formvalid.email = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.email = \"\";\r\n                    formvalid.email = true;\r\n                }\r\n                break;\r\n\r\n            case \"contactNumber\":\r\n\r\n                if (value === \"\") {\r\n                    validationerrorMessage.contactNumber = \"Enter the field\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else if (!value.match(/^[6-9][0-9]{9}$/)) {\r\n                    validationerrorMessage.contactNumber = \"Please enter valid Indian Number\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.contactNumber = \"\";\r\n                    formvalid.contactNumber = true;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        formvalid.buttonActive = formvalid.name && formvalid.email && formvalid.contactNumber && formvalid.password;\r\n        this.setState({ formerrorMessage: validationerrorMessage, formvalid: formvalid, successMessage: \"\" });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"App-header\">\r\n                {this.props.match.params.patientId ? null : <Redirect to={\"/Register\"} ></Redirect>}\r\n                <div className='card container-fluid' style={{ marginTop: \"70px\", width: \"70%\" }}>\r\n                    <div className=\"modal-body\" role=\"document\">\r\n                        <h3 className=\"modal-title text-center card-header\" id=\"modalRequestLabel\" style={{ width: \"100%\" }}><b>Make an Appointment</b></h3>\r\n                        <div className=\"modal-content modal-body\">\r\n\r\n                            <div className=\"modal-body\">\r\n                                <form className='form' onSubmit={this.handleSubmit} >\r\n                                    <div className=\"form-group\">\r\n\r\n                                        <input type=\"text\" className=\"form-control hidden\" id=\"appointment_name\" placeholder={this.state.patient.patientName} name=\"aptPatientId\" onChange={this.handeChange} value={this.state.formvalue.aptPatientId} />\r\n                                    </div>\r\n                                    {this.state.formerrorMessage.name ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.name}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group\">\r\n\r\n                                        <input type=\"text\" className=\"form-control\" id=\"appointment_email\" placeholder={this.state.patient.emailId} onChange={this.handeChange} name=\"email\" value={this.state.formvalue.email} />\r\n                                    </div>\r\n                                    {this.state.formerrorMessage.email ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.email}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group \">\r\n                                        <input id=\"contactNumber\" className=\"form-control required\" type=\"tel\" onChange={this.handeChange} placeholder={this.state.patient.contactNumber} name=\"contactNumber\" value={this.state.formvalue.contactNumber}>\r\n                                        </input>\r\n                                    </div>\r\n\r\n                                    {this.state.formerrorMessage.contactNumber ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.contactNumber}</span>\r\n                                    ) : null}\r\n\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"select-wrap \">\r\n                                            <div className='row'>\r\n                                                {/* <label className='form-item' style={{ padding: '0.5rem' }}><h6><b>Choose Doctor : </b></h6></label> */}\r\n                                                <select name=\"aptDoctorId\" id=\"doc\" className=\"form-control col\" onClick={this.handeChange} placeholder=\"Select Doctor\">\r\n                                                    <option disabled selected defaultValue={\"\"} value> ----- Choose Doctor -----  </option>\r\n                                                    {this.state.doctorsData.map((doctor, key) => {\r\n                                                        return (\r\n\r\n                                                            <option id={key} value={doctor.doctorId} >{doctor.doctorName}</option>\r\n\r\n                                                        )\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"form-group\">\r\n                                        <textarea name=\"\" id=\"appointment_message\" className=\"form-control\" cols=\"30\" rows=\"5\" placeholder=\"Message\" name=\"message\" value={this.state.formvalue.message} ></textarea>\r\n                                    </div> */}\r\n                                </form>\r\n                                {this.calendar()}\r\n                                \r\n                                <div className=\"form-group\">\r\n                                    {/* <button type=\"submit\" value=\"\" className=\"btn btn-primary\" onClick={this.handleSubmit}><b>Book Appointment</b></button> */}\r\n\r\n                                    <h6 type=\"text\" className=\"alert-info\" >{this.state.errorMessage}</h6>\r\n                                    <h6 type=\"text\" className=\"alert-success\" >{this.state.successMessage}</h6>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","export class Field {\r\n    FieldId;\r\n    FieldType ;\r\n    FieldValue;\r\n    FieldName;\r\n}\r\n\r\nexport const Type = [\r\n    \r\n    \"Text\",\"Number\", \".pdf\", \"Message\", \".jpeg\"\r\n   \r\n]","import React, { Component } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { Modal, ModalDialog } from 'react-bootstrap';\r\n\r\nimport { Type, Field } from './models/FieldDetails';\r\n\r\n\r\n\r\n\r\nexport default class AdminPatientPageEdit extends Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.data = []\r\n        this.state = {\r\n            field: {\r\n                FieldType: \"\",\r\n                FieldName: \"\",\r\n                FieldValue: \"\"\r\n            },\r\n            patData: []\r\n\r\n        };\r\n\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        // this.state.patdata=PatientData;\r\n\r\n\r\n        var urlP = \"https://exapp-server.herokuapp.com/adminAPI/sampPatTempEdt\";\r\n\r\n        axios.get(\"https://exapp-server.herokuapp.com/adminAPI/sampPatTempEdt\")\r\n            .then(response => this.setState({ patData: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n        this.data = this.state.patData\r\n        console.log(this.state.patdata)\r\n        console.log(this.data)\r\n\r\n        let urlD = \"https://exapp-server.herokuapp.com/exult/docAPI/details\";\r\n        axios.get(urlD)\r\n            .then(response => this.setState({ doctorsData: response.data }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n    }\r\n\r\n\r\n    submitTemplate = () => {\r\n        axios.post('https://exapp-server.herokuapp.com/exult/adminAPI/patTempEdt', this.state.patdata)\r\n            .then(response => this.setState({\r\n\r\n                usersData: response.data,\r\n                successMessage: \"Submit Successfull !!\",\r\n                errorMessage: \"\",\r\n                login: true\r\n            })).catch(error => {\r\n                if (error.response) {\r\n                    this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                } else {\r\n                    this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    handleDelete = key => {\r\n        const rows = [...this.state.rows];\r\n        this.setState({ rows: rows.filter(item => item.key !== key) });\r\n    };\r\n\r\n\r\n    handleChange = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { field } = this.state;\r\n        this.setState({ field: { ...field, [name]: value } });\r\n\r\n        console.log(this.state.field)\r\n    }\r\n\r\n    handleShowAddField = () => {\r\n        this.setState({ showFieldEdit: true })\r\n    }\r\n\r\n    handleCloseAddField = () => {\r\n        this.setState({ showFieldEdit: false })\r\n    }\r\n    handleAddField = () => {\r\n\r\n        const { patdata } = this.state;\r\n        const newData = {\r\n            fieldId: \"1\",\r\n            fieldName: \"Name\",\r\n            fieldType: \"9999999999\",\r\n            fieldValue: \"@gmail.com\"\r\n        };\r\n\r\n        this.data.push(newData);\r\n\r\n        this.setState({\r\n            patData: [newData, ...patdata],\r\n            \r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"App-header\"  >\r\n                {/* {sessionStorage.getItem(\"userId\") ? null : <Redirect to={\"/\"} ></Redirect> } */}\r\n                <div >\r\n                    <div className='card container-fluid' style={{ marginTop: \"70px\" }}>\r\n                        <div className='' style={{ width: \"100%\" }}>\r\n                            <label className='card-header text-center' style={{ width: \"100%\" }}><b>Patients Details Page</b></label>\r\n                        </div>\r\n\r\n                        <div >\r\n\r\n                            <ul className='card-body '>\r\n\r\n\r\n                            {this.state.patData.map((item, index) => {\r\n                                        return (\r\n                                            <div className='' key={index}>\r\n                                               \r\n                                            <div key={index} className=\"form-control-sm row\" style={{position:\"left\"}} >\r\n\r\n                                                <label className='col' style={{padding : '0.5rem'}}>{item.fieldName}</label>\r\n                                                <input id={item.fieldId}  \r\n                                                type={item.fieldType} \r\n                                                onChange={this.handeChange} \r\n                                                placeholder={item.fieldName} \r\n                                                name={item.fieldName} \r\n                                                value={item.fieldValue}\r\n                                                \r\n                                                disabled = {sessionStorage.getItem(\"userId\") < 10 ? false : true }\r\n                                                >\r\n                                                </input>\r\n                                            </div>\r\n                                            </div>\r\n                                            \r\n                                        )\r\n                                    })}\r\n\r\n                                <button\r\n                                    type=\"\"\r\n                                    className=\"btn btn-info form-group\"\r\n                                    onClick={this.handleShowAddField}>\r\n                                    <b>Add Field</b>\r\n                                </button>\r\n\r\n                                <button\r\n                                    type=\"\"\r\n                                    className=\"btn btn-success form-group\"\r\n                                    onClick={this.submitTemplate}\r\n                                    style={{ width: \"100%\" }}>\r\n                                    <b>Submit</b>\r\n                                </button>\r\n                            </ul>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className='ft-modal' >\r\n                            <Modal show={this.state.showFieldEdit} onHide={this.handleCloseAddField}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title className='text-center'>\r\n                                        <b>Field Details</b>\r\n                                    </Modal.Title>\r\n                                </Modal.Header>\r\n\r\n                                <Modal.Body >\r\n\r\n                                    <div className='' style={{ backgroundColor: \"#0000 \", padding: \"0.5rem\" }}>\r\n\r\n                                        <React.Fragment>\r\n                                            <form>\r\n                                                <div className=\"form-control\" >\r\n\r\n\r\n                                                    <label ><span><h6>Field Name</h6></span></label>\r\n                                                    <input type=\"text\"\r\n                                                        className=\"form-control form-item\"\r\n                                                        style={{ padding: \"1rem\" }}\r\n                                                        id=\"FieldName\"\r\n                                                        placeholder=\"Field Name\"\r\n                                                        name=\"FieldName\" onChange={this.handleChange}\r\n                                                        value={this.state.field.FieldName} />\r\n\r\n                                                    <label ><span><h6>Field Value</h6></span></label>\r\n                                                    <input type=\"text\"\r\n                                                        className=\"form-control form-item\"\r\n                                                        style={{ padding: \"1rem\" }}\r\n                                                        id=\"FieldValue\"\r\n                                                        placeholder=\"Field Value\"\r\n                                                        name=\"FieldValue\" onChange={this.handleChange}\r\n                                                        value={this.state.field.FieldValue} />\r\n\r\n                                                    <div className=\"\">\r\n                                                        <div className=\"select-wrap\">\r\n                                                            <label ><span><h6>Choose Field Type</h6></span></label>\r\n                                                            <select name=\"FieldType\" id=\"\" className=\"form-control\" onClick={this.handleChange} placeholder=\"Select Type\">\r\n                                                                {Type.map((type, key) => {\r\n                                                                    return (\r\n                                                                        <option value={type}>{type}</option>\r\n                                                                    )\r\n\r\n                                                                })}\r\n                                                            </select>\r\n                                                        </div>\r\n\r\n\r\n                                                    </div>\r\n                                                    <button\r\n                                                        type=\"submit\"\r\n                                                        className=\"btn btn-success col\"\r\n                                                        onClick={this.handleAddField}>\r\n                                                        <b>Add</b>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </form>\r\n\r\n                                        </React.Fragment>\r\n\r\n                                    </div>\r\n\r\n                                </Modal.Body>\r\n                            </Modal>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Button } from 'react-bootstrap'\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { FaSortDown } from 'react-icons/fa';\r\nimport { IoIosArrowDropdownCircle } from 'react-icons/io';\r\nimport { DiGoogleDrive } from 'react-icons/di';\r\nimport Drive from './Drive';\r\nimport * as FcIcons from \"react-icons/fc\"\r\nimport { images } from '../utils/ImagesData';\r\nimport Upload from './GDrive';\r\nimport GoogleDocsViewer from 'react-google-docs-viewer';\r\nimport DocViewer, { DocViewerRenderers } from \"react-doc-viewer\";\r\nimport { DocumentViewer } from 'react-documents';\r\nconst docs = [\r\n    { uri: \"https://docs.google.com/document/d/1cCUPT72X_GmpU40kxxuQ79B-4rxgnSPWXtnpu00q1Ns/edit?usp=sharing\" }\r\n    // Local File\r\n];\r\n// import { Upload } from 'antd';\r\n\r\n\r\n\r\nexport default class PatientDetails extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            pageValue: {\r\n                patData: []\r\n            },\r\n            pat: \"\",\r\n            data: [],\r\n\r\n            hide: true,\r\n            images: [],\r\n            PatName: \"\",\r\n            patData: \"\",\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false,\r\n            showFieldEdit: false,\r\n\r\n            togglePrescription: false,\r\n            toggleImages: false,\r\n            toggleBills: false,\r\n\r\n            doctorsData: [],\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false\r\n        };\r\n    }\r\n\r\n    callbackImages = (docs) => {\r\n\r\n        console.log(docs)\r\n        const { data } = this.state;\r\n\r\n        let newList = this.state.data.map((item) => {\r\n\r\n            if (item.fieldName == \"IMAGES\") {\r\n                const updatedItem = {\r\n                    ...item,\r\n                    fieldValue: docs.map((doc) => item.fieldValue.concat(',', doc.url)).toString()\r\n                };\r\n                console.log('here')\r\n\r\n                return updatedItem;\r\n            }\r\n\r\n            return item;\r\n        });\r\n\r\n        this.setState({ data: newList });\r\n\r\n        console.log(this.state.data)\r\n\r\n    }\r\n\r\n    callbackPrescriptions = (docs) => {\r\n\r\n        console.log(docs)\r\n        const { data } = this.state;\r\n\r\n        let newList = this.state.data.map((item) => {\r\n\r\n            if (item.fieldName == \"PRESCRIPTIONS\") {\r\n                const updatedItem = {\r\n                    ...item,\r\n                    fieldValue: docs.map((doc) => item.fieldValue.concat(',', doc.url)).toString()\r\n                };\r\n                console.log('here')\r\n\r\n                return updatedItem;\r\n            }\r\n\r\n            return item;\r\n        });\r\n\r\n        this.setState({ data: newList });\r\n\r\n        console.log(this.state.data)\r\n\r\n    }\r\n\r\n    callbackBills = (docs) => {\r\n\r\n        console.log(docs)\r\n        const { data } = this.state;\r\n\r\n        let newList = this.state.data.map((item) => {\r\n\r\n            if (item.fieldName == \"BILLS\") {\r\n                const updatedItem = {\r\n                    ...item,\r\n                    fieldValue: docs.map((doc) => item.fieldValue.concat(',', doc.url)).toString()\r\n                };\r\n                console.log('here')\r\n\r\n                return updatedItem;\r\n            }\r\n\r\n            return item;\r\n        });\r\n\r\n        this.setState({ data: newList });\r\n\r\n        console.log(this.state.data)\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getDetails();\r\n        { (sessionStorage.getItem(\"userId\") <= 10) ? this.writePermission() : this.readPermission() }\r\n\r\n\r\n    }\r\n\r\n    writePermission = () => {\r\n        this.setState({ hide: false })\r\n    }\r\n\r\n    readPermission = () => {\r\n        this.setState({ hide: true })\r\n    }\r\n\r\n    submitDetails = () => {\r\n        const { data } = this.state;\r\n\r\n        const url = \"https://exapp-server.herokuapp.com/exult/docAPI/dataUpdate/113\"\r\n        axios.put(url, data)\r\n            .then(response => this.setState({\r\n                successMessage: \"Submit Successfull !!\",\r\n                errorMessage: \"\"\r\n            })).catch(error => {\r\n                if (error.response) {\r\n                    this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                } else {\r\n                    this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n\r\n    getDetails = () => {\r\n        var url = \"https://exapp-server.herokuapp.com/exult/patientAPI/patient/\" + this.props.match.params.patientId;\r\n\r\n        axios.get(url)\r\n            .then(response => this.setState({ pat: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"Invalid Patient ID\" }) })\r\n\r\n        var url = \"https://exapp-server.herokuapp.com/exult/patientAPI/patientData/\" + this.props.match.params.patientId;\r\n\r\n        axios.get(url)\r\n            .then(response => this.setState({ data: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"Invalid Patient ID\" }) })\r\n\r\n        var url = \"https://exapp-server.herokuapp.com/exult/patientAPI/patientFolders/\" + this.props.match.params.patientId;\r\n\r\n        axios.get(url)\r\n            .then(response => this.setState({ patData: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"Invalid Patient ID\" }) })\r\n        console.log(this.state.patData)\r\n\r\n\r\n    }\r\n\r\n\r\n    handeChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const id = event.target.id;\r\n        const { data } = this.state;\r\n        //  this.setState({ data: { ...formvalue, [name]: value } });\r\n\r\n\r\n        let newList = this.state.data.map((item, index) => {\r\n\r\n            if (item.fieldId == id) {\r\n                const updatedItem = {\r\n                    ...item,\r\n                    fieldValue: value,\r\n                };\r\n                // console.log('here')\r\n\r\n                return updatedItem;\r\n            }\r\n\r\n            return item;\r\n        });\r\n\r\n        this.setState({ data: newList });\r\n\r\n\r\n    }\r\n\r\n    togglePrescriptions = () => {\r\n        this.setState({ togglePrescription: !this.state.togglePrescription })\r\n    }\r\n\r\n    toggleImages = () => {\r\n        this.setState({ toggleImages: !this.state.toggleImages })\r\n    }\r\n\r\n    toggleBills = () => {\r\n        this.setState({ toggleBills: !this.state.toggleBills })\r\n    }\r\n\r\n\r\n    ImageGallery = (item) => {\r\n        let gallery = []\r\n\r\n        item.fieldValue.split(',').map((urls, index) => {\r\n\r\n            gallery.push(\r\n                {\r\n                    src: \"https://drive.google.com/uc?export=view&id=\" + urls.match(/[-\\w]{25,}/),\r\n                    width: 10,\r\n                    height: 7\r\n                }\r\n            )\r\n            console.log(gallery);\r\n\r\n        })\r\n\r\n        // // return gallery;\r\n        // // this.setState({images{...images, images : gallery}}\r\n        // return (\r\n        //     <div >\r\n        //         {/* <img src={\"https://drive.google.com/uc?export=view&id=\" + urls.match(/[-\\w]{25,}/)} width=\"200px\" height=\"200px\" alt=\"cannot\" /> */}\r\n        //         <Gallery photos={gallery} />\r\n        //     </ div>\r\n        // )\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-header\"  >\r\n\r\n                <div className='container-fluid' style={{ marginTop: \"70px\", width: \"100%\", backgroundColor: \"rgba(255, 255, 255,0.8)\" }}>\r\n                    <label className='text-center card-header' style={{ width: \"100%\" }}><b>{this.state.pat.patientName} Details </b></label>\r\n                    <div className='card' style={{ width: \"100%\", marginTop: \"5px\", textAlign: \"left\", alignItems: \"baseline\", Color: \"rgba(255, 255, 255,1)\" }}>\r\n                        <div className='form-control'>\r\n                            <h6 ><span style={{ fontWeight: 400, marginLeft: \"5px\" }}><b>Personal Information : </b></span></h6>\r\n                            <div class=\"u-expanded-width u-form u-form-1\">\r\n                                <form action=\"#\" method=\"POST\" class=\"u-clearfix u-form-spacing-17 u-form-vertical u-inner-form\" source=\"email\" name=\"form\" style={{ padding: \"0px\" }}>\r\n                                    <div class=\"u-form-group u-form-name u-label-left\">\r\n                                        <label for=\"name-4c18\" class=\"u-label\">e-xult ID :</label>\r\n                                        <label type=\"text\" placeholder=\"Enter your Name\" id=\"name-4c18\" name=\"name\" required=\"\">{this.state.pat.patientId}</label>\r\n                                    </div>\r\n                                    <div class=\"u-form-group u-form-name u-label-left\">\r\n                                        <label for=\"name-4c18\" class=\"u-label\">Name  :</label>\r\n                                        <label type=\"text\" placeholder=\"Enter your Name\" id=\"name-4c18\" name=\"name\" required=\"\">{this.state.pat.patientName}</label>\r\n                                    </div>\r\n                                    <div class=\"u-form-email u-form-group u-label-left\">\r\n                                        <label for=\"email-4c18\" class=\"u-label\">Email  :</label>\r\n                                        <label type=\"email\" placeholder=\"Enter a valid email address\" id=\"email-4c18\" name=\"email\"  >{this.state.pat.emailId}</label>\r\n                                    </div>\r\n                                    <div class=\"u-form-group u-label-left u-form-group-3\">\r\n                                        <label for=\"text-717e\" class=\"u-label\">Age :</label>\r\n                                        <label type=\"text\" placeholder=\"\" id=\"text-717e\" name=\"age\" ></label>\r\n                                    </div>\r\n                                    <div class=\"u-form-group u-label-left u-form-group-4\">\r\n                                        <label for=\"text-f906\" class=\"u-label\">Sex :</label>\r\n                                        <label type=\"text\" placeholder=\"\" id=\"text-f906\" name=\"sex\" ></label>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='card' style={{ width: \"100%\", marginTop: \"5px\", textAlign: \"left\", alignItems: \"baseline\", Color: \"rgba(255, 255, 255,1)\" }}>\r\n                        <div className='form-control' style={{ width: \"100%\" }}>\r\n                            <h6 ><span style={{ fontWeight: 400, marginLeft: \"5px\" }}><b>Case Details : </b></span></h6>\r\n                            <div style={{ width: \"50%\", marginLeft: \"5px\", textAlign: \"left\" }}>\r\n                                <form  >\r\n                                    {this.state.data.map((item, index) => {\r\n                                        return (\r\n                                            <div className='' key={index}>\r\n\r\n                                                <div>\r\n                                                    {item.fieldType == \"text\" || \"Number\" || \"Message\" ?\r\n\r\n                                                        <div key={index} className=\"col-auto\" style={{ alignItems: \"flex-start\" }} >\r\n                                                            <label className='' style={{ padding: '0.5rem' }}><b>{item.fieldName}</b></label>\r\n                                                            <input id={item.fieldId}\r\n                                                                className=\"\"\r\n                                                                type={item.fieldType}\r\n                                                                onChange={this.handeChange}\r\n                                                                placeholder={item.fieldValue}\r\n                                                                name={item.fieldName}\r\n                                                                value={item.fieldValue}\r\n\r\n                                                                disabled={this.state.hide}\r\n                                                                style={{ padding: \"5px 20px\" }}\r\n                                                            >\r\n                                                            </input>\r\n                                                        </div>\r\n\r\n                                                        : null}\r\n\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n\r\n                                    })}\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='card container-fluid' style={{ width: \"100%\", height: \"800px\", marginTop: \"3px\" }}>\r\n\r\n                        <h4 ><span style={{ fontWeight: 400, marginLeft: \"0px\" }}><b>Case Sheet  </b></span></h4>\r\n                        <DocumentViewer\r\n                            url={this.state.patData.pres_data_id}\r\n                            viewer=\"url\"\r\n                            style={{ width: \"70%\", height: \"800px\", borderRadius: \"10px\" }}\r\n                        >\r\n                        </DocumentViewer>\r\n                    </div>\r\n                    <br></br>\r\n\r\n                    <div className='container-fluid card' style={{ width: \"100%\", marginTop: '3px', minHeight: \"40px\", backgroundColor: '#000', textAlign: \"left\" }}>\r\n                        \r\n                                <Button className=\"row\" type=\"button\" name=\"prescription\" onClick={this.togglePrescriptions} style={{ width: '100%', height: '40px', padding: '3px' ,backgroundColor:'black'}}>\r\n                                    <div className='row'>\r\n                                    <h6 className='col'><span style={{ fontWeight: 400, color: \"white\" }}><b>Prescriptions</b> </span></h6>\r\n                                    <IoIosArrowDropdownCircle className='col-auto' size={\"30px\"}></IoIosArrowDropdownCircle>\r\n                                        </div>\r\n                                    \r\n                                    </Button>\r\n                           \r\n                        <Collapse in={this.state.togglePrescription}>\r\n\r\n\r\n                            <div className='container-fluid' style={{ backgroundColor: 'white', width: '100%', borderRadius: \"5px\" }}>\r\n                                <Drive className=\"col\" parentFolder={this.state.patData.pres_data_id} parentCallback={this.callbackPrescriptions} style={{ float: 'right' }} />\r\n                                {this.state.data.map((item, index) => {\r\n                                        return (\r\n                                            <div className='' key={index}>\r\n                                                \r\n                                                    {item.fieldName == \"PRESCRIPTIONS\" ?\r\n\r\n                                                            <ul className='' style={{alignItems:'flex-start',float:'left'}}>\r\n                                                                {item.fieldValue.split(',').map((urls, index) => {\r\n                                                                    return (\r\n                                                                        <li className=\"\">\r\n                                                                            <a href={urls} className=\"\"><h6>{urls}</h6></a>\r\n                                                                        </li>\r\n\r\n                                                                    )\r\n\r\n                                                                })}\r\n                                                            </ul>\r\n                                                        : null}\r\n                                                \r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                            </div>\r\n\r\n                        </Collapse>\r\n\r\n                    </div>\r\n\r\n                    \r\n\r\n                    <div className='container-fluid card' style={{ width: \"100%\", marginTop: '3px', minHeight: \"40px\", backgroundColor: '#000', textAlign: \"left\" }}>\r\n\r\n                    <Button className=\"row\" type=\"button\" name=\"prescription\" onClick={this.toggleImages} style={{ width: '100%', height: '40px', padding: '3px' ,backgroundColor:'black'}}>\r\n                                    <div className='row'>\r\n                                    <h6 className='col'><span style={{ fontWeight: 400, color: \"white\" }}><b>Images</b> </span></h6>\r\n                                    <IoIosArrowDropdownCircle className='col-auto' size={\"30px\"}></IoIosArrowDropdownCircle>\r\n                                        </div>\r\n                                    \r\n                                    </Button> \r\n                        \r\n                          \r\n                            \r\n                            <Collapse in={this.state.toggleImages}>\r\n                                <div className='container-fluid' style={{ backgroundColor: 'white', width: '100%', borderRadius: \"5px\" }}>\r\n                                <Drive className=\"\" parentFolder={this.state.patData.img_data_id} parentCallback={this.callbackImages} />\r\n                                    {this.state.data.map((item, index) => {\r\n                                        return (\r\n                                            <div className='' key={index}>\r\n                                                \r\n                                                    {item.fieldType == \"IMAGES\" ?\r\n\r\n                                                            <ul className='' style={{alignItems:'flex-start',float:'left'}}>\r\n                                                                {item.fieldValue.split(',').map((urls, index) => {\r\n                                                                    return (\r\n                                                                        <li className=\"\">\r\n                                                                            <a href={urls} className=\"\"><h6>{urls}</h6></a>\r\n                                                                        </li>\r\n\r\n                                                                    )\r\n\r\n                                                                })}\r\n                                                            </ul>\r\n                                                        : null}\r\n                                                \r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </Collapse>\r\n                        \r\n\r\n                    </div>\r\n\r\n                    <div className='container-fluid card' style={{ width: \"100%\", marginTop: '3px', minHeight: \"40px\", backgroundColor: '#000', textAlign: \"left\" }}>\r\n                        \r\n                                <Button className=\"row\" type=\"button\" name=\"prescription\" onClick={this.toggleBills} style={{ width: '100%', height: '40px', padding: '3px' ,backgroundColor:'black'}}>\r\n                                    <div className='row'>\r\n                                    <h6 className='col'><span style={{ fontWeight: 400, color: \"white\" }}><b>Bills</b> </span></h6>\r\n                                    <IoIosArrowDropdownCircle className='col-auto' size={\"30px\"}></IoIosArrowDropdownCircle>\r\n                                        </div>\r\n                                    \r\n                                    </Button>\r\n                           \r\n                        <Collapse in={this.state.toggleBills}>\r\n\r\n\r\n                            <div className='container-fluid' style={{ backgroundColor: 'white', width: '100%', borderRadius: \"5px\" }}>\r\n                                <Drive className=\"col\" parentFolder={this.state.patData.bills_data_id} parentCallback={this.callbackBills} style={{ float: 'right' }} />\r\n                                {this.state.data.map((item, index) => {\r\n                                        return (\r\n                                            <div className='' key={index}>\r\n                                                \r\n                                                    {item.fieldType == \"BILLS\" ?\r\n\r\n                                                            <ul className='' style={{alignItems:'flex-start',float:'left'}}>\r\n                                                                {item.fieldValue.split(',').map((urls, index) => {\r\n                                                                    return (\r\n                                                                        <li className=\"\">\r\n                                                                            <a href={urls} className=\"link\"><h6>{urls}</h6></a>\r\n                                                                        </li>\r\n\r\n                                                                    )\r\n\r\n                                                                })}\r\n                                                            </ul>\r\n                                                        : null}\r\n                                                \r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                            </div>\r\n\r\n                        </Collapse>\r\n\r\n                    </div>\r\n\r\n                   <br></br>\r\n\r\n\r\n                    <button\r\n                        type=\"\"\r\n                        className=\"btn btn-success form-group\"\r\n                        onClick={this.submitDetails}\r\n                        style={{ width: \"100%\", justifyContent: \"center\" }}>\r\n                        <b>Submit</b>\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\n\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\nimport { FaArrowAltCircleDown, FaArrowDown, FaCartArrowDown, FaDocker, FaSearch, FaSortDown } from 'react-icons/fa';\r\n\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\n\r\n\r\n\r\nclass DocUpdatePatData extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            patData: [],\r\n            entry: \"\",\r\n            patDataCopy: [],\r\n\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false,\r\n            showFieldEdit: false,\r\n\r\n            doctorsData: [],\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDetails();\r\n        console.log(\"here\");\r\n    }\r\n\r\n    getDetails = () => {\r\n        const url = \"https://exapp-server.herokuapp.com/exult/docAPI/patdata/1\";\r\n        axios.get(url)\r\n            .then(response => this.setState({ patData: response.data, patDataCopy: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n        console.log(this.state.patData)\r\n    }\r\n\r\n\r\n\r\n    handeChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n        this.setState({ formvalue: { ...formvalue, [name]: value } });\r\n        this.validate(event);\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        const word = event.target.value;\r\n        console.log(word)\r\n        if (word != '') {\r\n            const filtered = this.state.patDataCopy.filter(entry => Object.values(entry).some(val => typeof val === \"string\" && val.toLocaleLowerCase().includes(word.toLocaleLowerCase())));\r\n\r\n            console.log(filtered)\r\n            this.setState({ patData: filtered })\r\n        } else {\r\n            this.setState({ patData: this.state.patDataCopy })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className='App-header' >\r\n\r\n\r\n                <div className='card container-fluid' style={{ marginTop: \"75px\", width: \"100%\" }}>\r\n                    <label className='text-center card-header' style={{ width: \"100%\" }}><b>Patients Details</b></label>\r\n                    <div className='right form-control col-auto' style={{}}>\r\n\r\n\r\n                        <input className='search' style={{ padding: '0.5px', float: \"right\" }} placeholder='   Search   ' name=\"search\" onChange={this.handleSearch}></input>\r\n                        <FaSearch className='' style={{ padding: '1px', float: \"right\", marginTop: \"5px\", marginRight: \"5px\" }}></FaSearch>\r\n                    </div>\r\n\r\n                    <Table className='table form-control ' style={{ width: \"100%\" }}>\r\n                        <Tr>\r\n                            <Th className='thead th column-collapse'>#ID</Th>\r\n                            <Th className='thead th  col-3'>Patient Name</Th>\r\n                            <Th className='thead th col-3'>Contact Number</Th>\r\n                            <Th className='thead th col-4'>Email id</Th>\r\n                            <Th className='thead th col-2'>Details</Th>\r\n                            {sessionStorage.getItem(\"userId\") == 1 ?\r\n                                <Th className='thead th col-2'>Appointment</Th>\r\n                                : null}\r\n\r\n                        </Tr>\r\n                        {this.state.patData.map((val, key) => {\r\n                            return (\r\n                                <Tbody>\r\n                                    {val.patientId >100 ? \r\n                                     <Tr key={key}>\r\n                                     {/* <Td>\r\n                                             <button className=\"btn br-button btn-info\" type=\"button\" data-toggle=\"collapse\" data-target=\"collapse-1-4-4527\"><FaSortDown></FaSortDown>\r\n                                             </button>\r\n                                         </Td> */}\r\n\r\n                                     <Td className='tdata td col-xl-auto'><Link>{val.patientId}</Link></Td>\r\n                                     <Td className='tdata td col-xl-auto'>{val.patientName}</Td>\r\n                                     <Td className='tdata  td'>{val.contactNumber}</Td>\r\n                                     <Td className='tdata  td'>{val.emailId}</Td>\r\n                                     <Td className='tdata  td'>\r\n                                         <ButtonToolbar className='tdata  td'>\r\n                                             <Link to={\"/details/\" + val.patientId } >\r\n                                                 <button type=\"submit\" className='btn btn-primary tdata td'>Details ... </button>\r\n\r\n                                             </Link>\r\n                                         </ButtonToolbar>\r\n\r\n                                     </Td>\r\n                                     {(sessionStorage.getItem(\"userId\") == 1) ?\r\n                                         <Td className='tdata  td'>\r\n                                             <ButtonToolbar className='tdata  td'>\r\n                                                 <Link to={\"/appointment/\" + val.patientId} >\r\n\r\n                                                     <button type=\"success\" className='btn btn-warning tdata td' >Book Appointment </button>\r\n                                                 </Link>\r\n                                             </ButtonToolbar>\r\n\r\n                                         </Td>   \r\n                                         : null}\r\n                                 </Tr>\r\n                                    : null}\r\n                                   \r\n                                </Tbody>\r\n\r\n                            )\r\n                        })}\r\n                        <tr>\r\n\r\n                        </tr>\r\n                    </Table>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default DocUpdatePatData;\r\n","import React, { Component } from 'react';\r\nimport \"../css/Contact_page/contact.css\"\r\n\r\n\r\n\r\nexport default class Details extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-header\"  >\r\n\r\n\r\n\r\n                <div className='card container-fluid' style={{ marginTop: \"70px\"}}>\r\n\r\n\r\n                    <section className=\"contact_us\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-10 offset-md-1\">\r\n                                    <div className=\"contact_inner\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-10\">\r\n                                                <div className=\"contact_form_inner\">\r\n                                                    <div className=\"contact_field\">\r\n                                                        <h3>Contatc Us</h3>\r\n                                                        <p>Feel Free to contact us any time. We will get back to you as soon as we can!.</p>\r\n                                                        <input type=\"text\" className=\"form-control form-group\" placeholder=\"Name\" />\r\n                                                        <input type=\"text\" className=\"form-control form-group\" placeholder=\"Email\" />\r\n                                                        <textarea className=\"form-control form-group\" placeholder=\"Message\"></textarea>\r\n                                                        <button className=\"contact_form_submit\">Send</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <div className=\"right_conatct_social_icon d-flex align-items-end\">\r\n                                                    <div className=\"socil_item_inner d-flex\">\r\n                                                        <li><a href=\"#\"><i className=\"fab fa-facebook-square\"></i></a></li>\r\n                                                        <li><a href=\"#\"><i className=\"fab fa-instagram\"></i></a></li>\r\n                                                        <li><a href=\"#\"><i className=\"fab fa-twitter\"></i></a></li>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"contact_info_sec\">\r\n                                            <h4 style={{ color: \"#fff\" }}>Contact Info</h4>\r\n                                            <div className=\"d-flex info_single align-items-center\">\r\n                                                <i className=\"fas fa-headset\"></i>\r\n                                                <span style={{ color: \"#fff\" }}>+91 70956 78678</span>\r\n                                            </div>\r\n                                            <div className=\"d-flex info_single align-items-center\">\r\n                                                <i className=\"fas fa-envelope-open-text\"></i>\r\n                                                <span style={{ color: \"#fff\" }}>exultclinic@gmail.com</span>\r\n                                            </div>\r\n                                            <div className=\"d-flex info_single align-items-center\">\r\n                                                <i className=\"fas fa-map-marked-alt\"></i>\r\n                                                <span style={{ color: \"#fff\" }}>Dr Jaya’s Exult Aesthetic Clinic 10-2-B2 Siripuram opp Dutt Island building lane besides Eleven Restaurant</span>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <section className=\"map_sec\" style={{ width: \"100%\" }}>\r\n                            <div className=\"container\" >\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-10 offset-md-1\">\r\n                                        <div className=\"map_inner\">\r\n                                            <h4><b>Find Us on Google Map</b></h4>\r\n                                            <div className=\"map_bind\" >\r\n                                                <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3800.4412291774997!2d83.3154841148811!3d17.723837387877783!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3a394341a885adb3%3A0x20c0678c58fa9b72!2sDr%20Jaya&#39;s%20Exult%20Aesthetic%20Clinic!5e0!3m2!1sen!2sin!4v1655569630315!5m2!1sen!2sin\" width=\"100%\" height=\"450\" frameborder=\"0\" style={{ border: \"0\" }} allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </section>\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/hair.2f33fd67.jpg\";","export default __webpack_public_path__ + \"static/media/face.fa85b3b5.jpg\";","export default __webpack_public_path__ + \"static/media/skin.aa0d3bfb.jpg\";","export default __webpack_public_path__ + \"static/media/body.309285e5.jpg\";","export default __webpack_public_path__ + \"static/media/laser.4fce08cd.jpg\";","import React, { Component } from 'react';\r\nimport \"../css/Services_page/services.css\"\r\nimport hairServiceImage from \"../utils/services/hair.jpg\"\r\nimport faceServiceImage from \"../utils/services/face.jpg\"\r\nimport bodyServiceImage from \"../utils/services/body.jpg\"\r\nimport laserServiceImage from \"../utils/services/laser.jpg\"\r\nimport skinServiceImage from \"../utils/services/skin.jpg\"\r\nimport surgeriesServiceImage from \"../utils/services/surgeries.jpg\"\r\n\r\n\r\n\r\n\r\nexport default class Details extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-header\"  >\r\n\r\n                <div className=\"container-fluid services-container\" style={{ marginTop: \"70px\", width: \"100%\" }}    >\r\n\r\n                    <div className='' id=\"services-top-row\">\r\n\r\n                        <div className=\"services-glass-card\">\r\n\r\n                            <div class=\"service-card-info\">\r\n\r\n                                <i class=\"bi bi-key-fill\"></i>\r\n\r\n                                <h3>\r\n                                    <b>Hair</b>\r\n                                </h3>\r\n                                <img src={hairServiceImage} alt=\"img09\" class=\"img-fluid\" />\r\n                                <figure class=\"effect-ming\">\r\n                                    <p>\r\n                                        <ul>\r\n                                            <li>Hair Transplantation</li>\r\n                                            <li>FUT</li>\r\n                                            <li>Hair Loss Management</li>\r\n                                            <li>Hair Vitamins</li>\r\n                                            <li>Hair Mesotherapy & PRP</li>\r\n                                            <li>Scalp Micro Pigme</li>\r\n                                        </ul>\r\n                                    </p>\r\n                                    <figcaption>\r\n                                        {/* <p>VIEW PAGE</p>\r\n                                                <a href=\"/security/access-control\" rel=\"noopener\">View more</a> */}\r\n                                    </figcaption>\r\n                                </figure>\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"services-glass-card\">\r\n\r\n                            <div class=\"service-card-info\">\r\n\r\n                                <i class=\"bi bi-key-fill\"></i>\r\n\r\n                                <h3>\r\n                                    <b>Face</b>\r\n                                </h3>\r\n                                <img src={faceServiceImage} alt=\"img09\" class=\"img-fluid\" />\r\n\r\n                                <figure class=\"effect-ming\">\r\n\r\n                                    <p>\r\n                                        <ul>\r\n                                            <li>Face lift</li>\r\n                                            <li>Dark Circles Management</li>\r\n                                            <li>Nose Reshaping</li>\r\n                                            <li>Dimple Creation</li>\r\n                                            <li>Lip Fillers</li>\r\n                                            <li>Neck Lift, Folds Correction</li>\r\n                                        </ul>\r\n                                    </p>\r\n                                    <figcaption>\r\n                                        {/* <p>VIEW PAGE</p>\r\n                                                <a href=\"/security/access-control\" rel=\"noopener\">View more</a> */}\r\n                                    </figcaption>\r\n                                </figure>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"services-glass-card\">\r\n\r\n                            <div class=\"service-card-info\">\r\n\r\n                                <i class=\"bi bi-key-fill\"></i>\r\n\r\n                                <h3>\r\n                                    <b>Skin Rejuvenation</b>\r\n                                </h3>\r\n                                <img src={skinServiceImage} alt=\"img09\" class=\"img-fluid\" />\r\n\r\n                                <figure class=\"effect-ming\">\r\n\r\n                                    <p>\r\n                                        <ul>\r\n                                            <li>Chemical peels</li>\r\n                                            <li>Medi facials</li>\r\n                                            <li>Face lift</li>\r\n                                            <li>Laser facials</li>\r\n                                            <li>Acne and Acne Scars</li>\r\n                                            <li>Pigmentation Management</li>\r\n                                        </ul>\r\n                                    </p>\r\n                                    <figcaption>\r\n                                        {/* <p>VIEW PAGE</p>\r\n                                                <a href=\"/security/access-control\" rel=\"noopener\">View more</a> */}\r\n\r\n                                    </figcaption>\r\n\r\n                                </figure>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div id=\"services-bottom-row\">\r\n                        <div className=\"services-glass-card\">\r\n\r\n                            <div class=\"service-card-info\">\r\n\r\n                                <i class=\"bi bi-key-fill\"></i>\r\n\r\n                                <h3>\r\n                                    <b>Hair</b>\r\n                                </h3>\r\n\r\n                                <figure class=\"effect-ming\">\r\n                                    <img src={hairServiceImage} alt=\"img09\" class=\"img-fluid\" />\r\n                                    <figcaption>\r\n                                        {/* <p>VIEW PAGE</p>\r\n                <a href=\"/security/access-control\" rel=\"noopener\">View more</a> */}\r\n                                    </figcaption>\r\n                                </figure>\r\n\r\n                                <p>\r\n                                    <ul>\r\n                                        <li>Hair Transplantation</li>\r\n                                        <li>FUT</li>\r\n                                        <li>Hair Loss Management</li>\r\n                                        <li>Hair Vitamins</li>\r\n                                        <li>Hair Mesotherapy & PRP</li>\r\n                                        <li>Scalp Micro Pigme</li>\r\n                                    </ul>\r\n                                </p>\r\n\r\n                            </div>\r\n\r\n                            {/* <div class=\"service-card-video\">\r\n\r\n    <div class=\"tool-tip-container\">\r\n\r\n        <p class=\"d-none d-lg-block\">\r\n            CLICK PREVIEW BELOW TO VIEW PAGE.\r\n        </p>\r\n\r\n        <p class=\"d-block d-lg-none\">\r\n            TAP PREVIEW BELOW TO VIEW PAGE.\r\n        </p>\r\n\r\n    </div>\r\n\r\n   \r\n</div> */}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"services-glass-card\">\r\n\r\n                            {/* <div class=\"camera-container\">\r\n    <div class=\"circle\">\r\n        <div class=\"camera-eye\">\r\n            <div class=\"inner-eye\">\r\n                <div class=\"blinking\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> */}\r\n\r\n                            <div class=\"service-card-info\">\r\n\r\n                                <i class=\"bi bi-key-fill\"></i>\r\n\r\n                                <h3>\r\n                                    <b>Hair</b>\r\n                                </h3>\r\n\r\n                                <figure class=\"effect-ming\">\r\n                                    <img src={hairServiceImage} alt=\"img09\" class=\"img-fluid\" />\r\n                                    <figcaption>\r\n                                        {/* <p>VIEW PAGE</p>\r\n                <a href=\"/security/access-control\" rel=\"noopener\">View more</a> */}\r\n                                    </figcaption>\r\n                                </figure>\r\n\r\n                                <p>\r\n                                    <ul>\r\n                                        <li>Hair Transplantation</li>\r\n                                        <li>FUT</li>\r\n                                        <li>Hair Loss Management</li>\r\n                                        <li>Hair Vitamins</li>\r\n                                        <li>Hair Mesotherapy & PRP</li>\r\n                                        <li>Scalp Micro Pigme</li>\r\n                                    </ul>\r\n                                </p>\r\n\r\n                            </div>\r\n\r\n                            {/* <div class=\"service-card-video\">\r\n\r\n    <div class=\"tool-tip-container\">\r\n\r\n        <p class=\"d-none d-lg-block\">\r\n            CLICK PREVIEW BELOW TO VIEW PAGE.\r\n        </p>\r\n\r\n        <p class=\"d-block d-lg-none\">\r\n            TAP PREVIEW BELOW TO VIEW PAGE.\r\n        </p>\r\n\r\n    </div>\r\n\r\n   \r\n</div> */}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"services-glass-card\">\r\n\r\n                            {/* <div class=\"camera-container\">\r\n    <div class=\"circle\">\r\n        <div class=\"camera-eye\">\r\n            <div class=\"inner-eye\">\r\n                <div class=\"blinking\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> */}\r\n\r\n                            <div class=\"service-card-info\">\r\n\r\n                                <i class=\"bi bi-key-fill\"></i>\r\n\r\n                                <h3>\r\n                                    <b>Hair</b>\r\n                                </h3>\r\n\r\n                                <figure class=\"effect-ming\">\r\n                                    <img src={hairServiceImage} alt=\"img09\" class=\"img-fluid\" />\r\n                                    <figcaption>\r\n                                        {/* <p>VIEW PAGE</p>\r\n                <a href=\"/security/access-control\" rel=\"noopener\">View more</a> */}\r\n                                    </figcaption>\r\n                                </figure>\r\n\r\n                                <p>\r\n                                    <ul>\r\n                                        <li>Hair Transplantation</li>\r\n                                        <li>FUT</li>\r\n                                        <li>Hair Loss Management</li>\r\n                                        <li>Hair Vitamins</li>\r\n                                        <li>Hair Mesotherapy & PRP</li>\r\n                                        <li>Scalp Micro Pigme</li>\r\n                                    </ul>\r\n                                </p>\r\n\r\n                            </div>\r\n\r\n                            {/* <div class=\"service-card-video\">\r\n\r\n    <div class=\"tool-tip-container\">\r\n\r\n        <p class=\"d-none d-lg-block\">\r\n            CLICK PREVIEW BELOW TO VIEW PAGE.\r\n        </p>\r\n\r\n        <p class=\"d-block d-lg-none\">\r\n            TAP PREVIEW BELOW TO VIEW PAGE.\r\n        </p>\r\n\r\n    </div>\r\n\r\n   \r\n</div> */}\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/surgeries.827fb8ac.jpg\";","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\n\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\n\r\nimport { Modal, ModalDialog } from 'react-bootstrap';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\nimport { PatDetails } from './PatientData';\r\n\r\nimport Calendar from './Calendar';\r\nimport moment from \"moment\";\r\nimport CreateGoogleEvent from './CreateEvent';\r\n\r\n\r\n\r\n\r\n\r\nexport default class ViewAppointments extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            aptData: [],\r\n\r\n            doctorsData: [],\r\n\r\n            formvalue: {\r\n                aptId: \"\",\r\n                aptPatientId: \"\",\r\n                aptDoctorId: \"\",\r\n                aptTime: \"\",\r\n                aptDate: \"\",\r\n                aptStatus: \"Pending\",\r\n            },\r\n            doctorMail: \"\",\r\n\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false,\r\n            showFieldEdit: false,\r\n            showAptEdit: false,\r\n            doctorsData: [],\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDetails();\r\n\r\n        console.log(\"here\");\r\n    }\r\n\r\n    getDetails = () => {\r\n        let url = \"https://exapp-server.herokuapp.com/exult/aptAPI/getApt/\" + this.props.match.params.userId\r\n        axios.get(url)\r\n            .then(response => this.setState({ aptData: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n        let urlDoctor = \"https://exapp-server.herokuapp.com/exult/docAPI/details\";\r\n\r\n        axios.get(urlDoctor)\r\n            .then(response => this.setState({ doctorsData: response.data }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n\r\n\r\n        if (sessionStorage.getItem(\"userId\") == 1) {\r\n            let url = \"https://exapp-server.herokuapp.com/exult/aptAPI/getApts\"\r\n            axios.get(url)\r\n                .then(response => this.setState({ aptData: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n                .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n        }\r\n    }\r\n\r\n    UpdateAppointment = () => {\r\n        console.log((this.state.formvalue.aptDate).toString())\r\n        if (this.state.formvalue.aptDate != '' && this.state.formvalue.aptTime != '') {\r\n\r\n            let aptData = {\r\n                aptId: this.state.formvalue.aptId,\r\n                aptPatient: sessionStorage.getItem(\"userId\"),\r\n                aptDoctor: this.state.formvalue.aptDoctorId,\r\n                aptTime: this.state.formvalue.aptTime,\r\n                aptDate: this.state.formvalue.aptDate,\r\n                aptStatus: this.state.formvalue.aptStatus\r\n            }\r\n\r\n            this.setState({ errorMessage: \"\", successMessage: \"\" });\r\n\r\n            console.log(aptData);\r\n\r\n            axios.post('https://exapp-server.herokuapp.com/exult/aptAPI/editApt/' + this.state.formvalue.aptId, aptData)\r\n                .then(response => this.setState({\r\n\r\n                    successMessage: \"Appointment Request Submitted Successfull !!\",\r\n                    errorMessage: \"\",\r\n                    showAptEdit: false\r\n                })).catch(error => {\r\n                    if (error.response) {\r\n                        this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                    } else {\r\n                        this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                    }\r\n                });\r\n        }\r\n        window.location.reload(true)\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.UpdateAppointment();\r\n\r\n    }\r\n\r\n\r\n    handeChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n        this.setState({ formvalue: { ...formvalue, [name]: value } },\r\n            () => {\r\n                if (event.target.id == \"doc\") {\r\n\r\n                    this.state.doctorsData.map((doctor, key) => {\r\n\r\n                        if (doctor.doctorId == value) {\r\n\r\n                            this.setState({ doctorMail: doctor.emailId })\r\n                        }\r\n\r\n                    })\r\n\r\n                }\r\n            }\r\n        );\r\n\r\n        console.log(this.state.aptData);\r\n        console.log(this.state.doctorMail)\r\n    }\r\n\r\n    handleCallback = (startTime) => {\r\n        console.log(startTime)\r\n        const { formvalue } = this.state;\r\n\r\n        this.setState({ formvalue: { ...formvalue, aptTime: moment(startTime).format('HH:mm'), aptDate: moment(startTime).format(\"DD-MM-YYYY\") } })\r\n    }\r\n\r\n    handleShowAptEdit = () => {\r\n        this.setState({ showAptEdit: true })\r\n\r\n    }\r\n\r\n    handleCloseAptEdit = () => {\r\n        this.setState({ showAptEdit: false })\r\n    }\r\n\r\n    handleAptUpdate = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n\r\n        {\r\n            this.state.aptData.map((val, key) => {\r\n                if (val.aptId == event.target.value) {\r\n                    console.log(val)\r\n                    this.setState({ formvalue: { ...formvalue, aptId: val.aptId, aptPatient: val.aptPatient, aptStatus: val.aptStatus } })\r\n                }\r\n            })\r\n        }\r\n\r\n        console.log(this.state.formvalue)\r\n\r\n        this.handleShowAptEdit()\r\n    }\r\n    handleAptCancel = (event) => {\r\n        console.log(event.target.value)\r\n        let url = \"https://exapp-server.herokuapp.com/exult/aptAPI/cancelApt/\" + event.target.value\r\n        axios.post(url)\r\n            .then(response => this.setState({\r\n\r\n                successMessage: \"Canceled Successfully !!\",\r\n                errorMessage: \"\",\r\n            }, () => {\r\n                this.getDetails()\r\n            })).catch(error => {\r\n                if (error.response) {\r\n                    this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                } else {\r\n                    this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                }\r\n            });\r\n        window.location.reload(true)\r\n    }\r\n\r\n\r\n\r\n    handleAddApointment = (event) => {\r\n        console.log(event.target.value)\r\n\r\n       \r\n        CreateGoogleEvent(event.target.value);\r\n\r\n        let url = \"https://exapp-server.herokuapp.com/exult/aptAPI/confirmApt/\" + event.target.value\r\n        axios.put(url)\r\n            .then(response => this.setState({\r\n\r\n                successMessage: \"Confirmed Successfully !!\",\r\n                errorMessage: \"\",\r\n            })).catch(error => {\r\n                if (error.response) {\r\n                    this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                } else {\r\n                    this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                }\r\n            });\r\n\r\n        // window.location.reload(true)\r\n    }\r\n\r\n    handleSort = () => {\r\n        this.state.aptData.sort((a, b) =>{ return new Date(b.aptDate,'DD-MM-YYYY') - new Date(a.aptDate,'DD-MM-YYYY') });\r\n    }\r\n\r\n    alertshow = () => {\r\n        alert(\"button clicked\");\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className='App-header'>\r\n\r\n                <div className='card container-fluid ' style={{ marginTop: \"70px\", width: \"100%\" }} >\r\n\r\n                    <label className='text-center card-header row' style={{ width: \"100%\" }}>\r\n                        <b className='text-center col'>Appointments</b> \r\n                         \r\n                    </label>\r\n                    <div className='right form-control col-auto'>\r\n                    <button className='btn btn-info col' style={{ padding: '0.5px' ,float : \"right\",width:\"80px\"}} onClick={this.handleSort}>Sort</button>\r\n                    </div>\r\n                    \r\n                    <Table className='table form-control '>\r\n\r\n                        <Tbody>\r\n\r\n                            <Tr className=\"row\">\r\n\r\n                                {this.state.aptData.map((val, key) => {\r\n\r\n                                    return (\r\n\r\n                                        <div className=' col-auto'>\r\n\r\n                                            <Td className='card' style={{}}>\r\n\r\n                                                <label className='text-center card-header' style={{ background: \"rgba(255,200,100,0.8)\", width: \"100%\", marginTop: \"-0\" }}><b>Appointment</b></label>\r\n\r\n                                                <div className='card-body'>\r\n                                                    <div className='form-control'>\r\n\r\n                                                        <div>\r\n                                                            {sessionStorage.getItem(\"userId\") == 1 || sessionStorage.getItem(\"userId\") < 10 ?\r\n                                                                <div className='form form-group text-center'><h6><b>Patient Name : </b>{val.aptPatient}</h6></div>\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n\r\n                                                            {sessionStorage.getItem(\"userId\") == 1 || sessionStorage.getItem(\"userId\") > 10 ?\r\n                                                                <div className='form form-group text-center'><h6><b>Doctor Name : </b>{val.aptDoctor}</h6></div>\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n                                                        </div>\r\n\r\n                                                        <div className='form form-group text-center'><h6><b>Appointment Date : </b>{val.aptDate}</h6></div>\r\n                                                        <div className='form form-group text-center'><h6><b>Appointment Time : </b>{val.aptTime}</h6></div>\r\n                                                        <div className='form form-group text-center'><h6><b>Status : </b> {val.aptStatus}</h6></div>\r\n\r\n\r\n                                                        {val.aptStatus != \"Confirm\" ?\r\n\r\n                                                            <>\r\n                                                                {sessionStorage.getItem(\"userId\") < 10 && sessionStorage.getItem(\"userId\") != 1 ?\r\n                                                                    <div className='col'>\r\n                                                                        <button className='btn btn-success col-auto' onClick={this.handleAddApointment} value={val.aptId}>Accept</button>\r\n                                                                        <button className='btn btn-danger col-auto' onClick={this.handleAptCancel} value={val.aptId}>Decline</button>\r\n                                                                    </div>\r\n                                                                    :\r\n                                                                    null\r\n                                                                }\r\n\r\n\r\n\r\n                                                                {sessionStorage.getItem(\"userId\") > 10 ?\r\n                                                                    <div className='row'>\r\n                                                                        <button className='btn btn-danger col-auto' onClick={this.handleAptCancel} value={val.aptId}>Cancel</button>\r\n                                                                        <button className='btn btn-info col' onClick={this.handleAptUpdate} value={val.aptId}>Edit</button>\r\n                                                                    </div>\r\n                                                                    :\r\n                                                                    null\r\n                                                                }\r\n\r\n\r\n                                                                {sessionStorage.getItem('userId') == 1 ?\r\n\r\n                                                                    <div className=\"row\">\r\n                                                                        <button className='btn btn-success col-auto' onClick={this.handleAddApointment} value={val.aptId}>Accept</button>\r\n                                                                        <button className='btn btn-danger col-auto' onClick={this.handleAptCancel} value={val.aptId}>Decline</button>\r\n                                                                        <button className='btn btn-info col' onClick={this.handleAptUpdate} value={val.aptId}>Edit</button>\r\n                                                                    </div>\r\n                                                                    : null\r\n                                                                }\r\n                                                            </>\r\n\r\n                                                            : null}\r\n\r\n\r\n\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </Td>\r\n                                        </div>\r\n\r\n                                    )\r\n                                })\r\n                                }\r\n\r\n                            </Tr>\r\n\r\n                        </Tbody>\r\n                    </Table>\r\n\r\n                </div>\r\n                <div className='ft-modal' >\r\n                    <Modal dialogClassName=\"custom-dialog\" show={this.state.showAptEdit} onHide={this.handleCloseAptEdit} >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title className='text-center'>\r\n                                <b>Edit Appointment</b>\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body  >\r\n\r\n                            <div className='' style={{ backgroundColor: \"#0000 \", padding: \"0.5rem\" }}>\r\n\r\n                                <React.Fragment>\r\n\r\n\r\n                                    <div className=\"form-control\" >\r\n\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"select-wrap \">\r\n                                                <div className='row'>\r\n                                                    {/* <label className='form-item' style={{ padding: '0.5rem' }}><h6><b>Choose Doctor : </b></h6></label> */}\r\n                                                    <select name=\"aptDoctorId\" id=\"doc\" className=\"form-control col\" onClick={this.handeChange} placeholder=\"Select Doctor\">\r\n                                                        <option disabled selected defaultValue={\"\"} value> ----- Choose Doctor -----  </option>\r\n                                                        {this.state.doctorsData.map((doctor, key) => {\r\n\r\n                                                            return (\r\n\r\n                                                                <option id={key} value={doctor.doctorId} mail={doctor.emailId}>{doctor.doctorName}</option>\r\n\r\n                                                            )\r\n\r\n                                                        })}\r\n                                                    </select>\r\n                                                </div>\r\n\r\n                                                <Calendar timeCallback={this.handleCallback} doc={this.state.doctorMail} pat={this.state.patientMail} />\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"submit\" value=\"\" className=\"btn btn-primary\" onClick={this.handleSubmit}><b>Book Appointment</b></button>\r\n\r\n                                                    <h6 type=\"text\" className=\"alert-info\" >{this.state.errorMessage}</h6>\r\n                                                    <h6 type=\"text\" className=\"alert-success\" >{this.state.successMessage}</h6>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                </React.Fragment>\r\n\r\n                            </div>\r\n\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport moment from \"moment\";\r\nimport { gapi } from 'gapi-script';\r\n\r\nexport default function CreateGoogleEvent (Id) {\r\n    \r\n        \r\n        // this.state = {\r\n            \r\n        //     aptId: Id,\r\n        //     docMail: \"\",\r\n        //     patMail: \"\",\r\n        //     aptData: {},\r\n        //     errorMessage: \"\"\r\n\r\n        // }\r\n\r\n        let urlApt = \"https://exapp-server.herokuapp.com/exult/aptAPI/fetchApt/\" + Id;\r\n\r\n        axios.get(urlApt)\r\n            .then(response =>   addEvent(response.data) )\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No Apt exist\" }) })\r\n    \r\n\r\n    let addEvent = (data) => {\r\n\r\n        gapi.load('client:auth2', () => {\r\n\r\n            gapi.client.load('client', () => console.log('bam!'))\r\n\r\n            gapi.client.init({\r\n                apiKey: \"AIzaSyDrVkS-ZRFRmTsJvLQTNpshIfEGyr2XhhI\",\r\n                clientId: \"229521899518-v2nb1anhnuj8n1rkqsi0qrpjojkl3l7r.apps.googleusercontent.com\",\r\n                discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"],\r\n                scope: \"https://www.googleapis.com/auth/calendar.events\"\r\n            }).then(\r\n                gapi.client.load('calendar', 'v3', () => console.log('bam!')),\r\n\r\n                gapi.auth2.getAuthInstance().signIn()\r\n\r\n            ).then(() => {\r\n\r\n                    console.log(data)\r\n                    let time = moment(moment(data.aptDate,\"MM-DD-YYYY\").format(\"DD-MM-YYYY\") + ' ' + data.aptTime)\r\n                    console.log(time)\r\n                    let start = new Date(moment(data.aptDate,\"MM-DD-YYYY\").format(\"DD-MM-YYYY\") + ' ' + data.aptTime)\r\n                    let end = new Date();\r\n                    end.setTime(start.getTime() + (15 * 60000))\r\n                    console.log(end)\r\n                    // this.setState({start: start , end : end})  \r\n                    // console.log(this.state.start)          \r\n\r\n                    var event = {\r\n                        'summary': 'Appointment Request',\r\n                        'location': 'Exult Clinic,Siripuram',\r\n                        'description': 'Regular Visit',\r\n                        'start': {\r\n                            'dateTime': start,\r\n                            'timeZone': 'IST'\r\n                        },\r\n                        'end': {\r\n                            'dateTime': end,\r\n                            'timeZone': 'IST'\r\n                        },\r\n                        'attendees': [\r\n                            { 'email': data.aptPatient },\r\n                            { 'email': data.aptDoctor }\r\n                        ],\r\n                        'reminders': {\r\n                            'useDefault': false,\r\n                            'overrides': [\r\n                                { 'method': 'email', 'minutes': 24 * 60 },\r\n                                { 'method': 'popup', 'minutes': 10 }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n\r\n                    var request = gapi.client.calendar.events.insert({\r\n                        'calendarId': data.aptDoctor,\r\n                        'resource': event,\r\n                    })\r\n\r\n                    request.execute(event => {\r\n                        console.log(event)\r\n                        window.open(event.htmlLink)\r\n                    })\r\n\r\n                })\r\n        }).catch(error => { if (error.response) this.setState({ errorMessage: \"Unable to access Google Calendar\" }) })\r\n    }\r\n}","import {User} from \"./models/User\";\r\nimport React, {Component} from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport \"../index.css\";\r\nimport \"../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass AdminAddDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            formvalue: {\r\n                usersData: [],\r\n                fname: \"\",\r\n                lname: \"\",\r\n                contactNumber: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                confirmPassword: \"\"\r\n            },\r\n            formerrorMessage: {\r\n                name: \"\",\r\n                email: \"\",\r\n                contactNumber: \"\",\r\n                password: \"\"\r\n            },\r\n            formvalid: {\r\n                name: false,\r\n                email: false,\r\n                contactNumber: false,\r\n                password: false,\r\n                buttonActive: false\r\n            },\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false\r\n        };\r\n    }\r\n\r\n\r\n    submitRegister = () => {\r\n\r\n        let userData = {\r\n            doctorName: \"Dr.\" + this.state.formvalue.fname + '' + this.state.formvalue.lname,\r\n            emailId: this.state.formvalue.email,\r\n            contactNumber: this.state.formvalue.contactNumber,\r\n            password: this.state.formvalue.password\r\n        }\r\n\r\n        this.setState({ errorMessage: \"\", successMessage: \"\" });\r\n\r\n        console.log(this.state.formvalue.password);\r\n        console.log(this.state.formvalue.confirmPassword);\r\n        if (this.state.formvalue.password === this.state.formvalue.confirmPassword) {\r\n\r\n            console.log(userData)\r\n            axios.post('https://exapp-server.herokuapp.com/exult/adminAPI/docRegister', userData)\r\n                .then(response => this.setState({\r\n\r\n                    usersData: response.data,\r\n                    successMessage: \"Registration Successfull !!\",\r\n                    errorMessage: \"\",\r\n                    login: true\r\n                })).catch(error => {\r\n                    if (error.response) {\r\n                        this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                    } else {\r\n                        this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                    }\r\n                });\r\n        } else {\r\n            this.setState({ errorMessage: \"Password didn't match\" })\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.submitRegister();\r\n\r\n    }\r\n\r\n    handeChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n        this.setState({ formvalue: { ...formvalue, [name]: value } });\r\n        this.validate(event);\r\n    }\r\n\r\n    validate = event => {\r\n        var fieldName = event.target.name;\r\n        var value = event.target.value;\r\n        var validationerrorMessage = this.state.formerrorMessage;\r\n        var formvalid = this.state.formvalid;\r\n        switch (fieldName) {\r\n            case \"fname\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.name = \"Enter the field\";\r\n                    formvalid.name = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z]+$/)) {\r\n                    validationerrorMessage.name = \"Please enter your name in valid format\";\r\n                    formvalid.name = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.name = \"\";\r\n                    formvalid.name = true;\r\n                }\r\n                break;\r\n\r\n            case \"lname\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.name = \"Enter the field\";\r\n                    formvalid.name = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z]+$/)) {\r\n                    validationerrorMessage.name = \"Please enter your name in valid format\";\r\n                    formvalid.name = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.name = \"\";\r\n                    formvalid.name = true;\r\n                }\r\n                break;\r\n\r\n            case \"email\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.email = \"Enter the field\";\r\n                    formvalid.email = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z0-9]+[@][A-Za-z0-9]+[.][c][o][m]$/)) {\r\n                    validationerrorMessage.email = \"Please enter valid email\";\r\n                    formvalid.email = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.email = \"\";\r\n                    formvalid.email = true;\r\n                }\r\n                break;\r\n\r\n            case \"contactNumber\":\r\n\r\n                if (value === \"\") {\r\n                    validationerrorMessage.contactNumber = \"Enter the field\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else if (!value.match(/^[6-9][0-9]{9}$/)) {\r\n                    validationerrorMessage.contactNumber = \"Please enter valid Indian Number\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.contactNumber = \"\";\r\n                    formvalid.contactNumber = true;\r\n                }\r\n                break;\r\n            case \"password\":\r\n\r\n                if (value === \"\") {\r\n                    validationerrorMessage.password = \"Enter the field\";\r\n                    formvalid.password = false;\r\n                }\r\n                else if (!value.match(/^[A-Z]+$/) && !value.match(/^.[a-z].$/) && !value.match(/^.[0-9].$/) && value.length < 8) {\r\n\r\n                    // var regexCap = new RegExp(/^.[A-Z].$/);\r\n                    // var regexLow = new RegExp(/^.[a-z].$/);\r\n                    // var regexNum = new RegExp(/^.[0-9].$/);\r\n\r\n                    // if(!value.match(/^.[A-Z].$/)){\r\n                    //     validationerrorMessage.password = \"Password Should contain 1 upper case letter\";\r\n                    //     formvalid.password = false;\r\n                    // }else if(!value.match(regexLow)){\r\n                    //     validationerrorMessage.password = \"Password Should contain 1 lower case letter\";\r\n                    //     formvalid.password = false;\r\n                    // }else if(!value.match(regexNum)){\r\n                    //     validationerrorMessage.password = \"Password Should contain atleast 1 number\";\r\n                    //     formvalid.password = false;\r\n                    // }else if(value.length<8){\r\n                    //     validationerrorMessage.password = \"Password Should contain atleast 8 characters\";\r\n                    //     formvalid.password = false;\r\n                    // }\r\n                    validationerrorMessage.password = `*Password Should contain atleast 1 upper case, 1 lower case,1 number and minimum 8 characters`;\r\n                    formvalid.password = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.password = \"\";\r\n                    formvalid.password = true;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        formvalid.buttonActive = formvalid.name && formvalid.email && formvalid.contactNumber && formvalid.password;\r\n        this.setState({ formerrorMessage: validationerrorMessage, formvalid: formvalid, successMessage: \"\" });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"App-header\" >\r\n                    <section className='card container-fluid' style={{ marginTop: \"70px\" }} >\r\n                    <form className=\"form-control\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-control text-center card-header\">\r\n                                    <h4><b>Doctor Registration</b></h4>\r\n                                </div>\r\n                                <div className=\"form-group form-col\">\r\n\r\n                                    <input id=\"firstname\" className=\" input-name\" onChange={this.handeChange} placeholder=\"First Name\" name=\"fname\" value={this.state.formvalue.fname}>\r\n                                    </input>\r\n                                    <input id=\"lastname\" className=\"input-name\" onChange={this.handeChange} name=\"lname\" placeholder=\"Last Name\" value={this.state.formvalue.lname}>\r\n                                    </input>\r\n\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    {this.state.formerrorMessage.name ? (\r\n                                        <span className=\"text alert-warning\">{this.state.formerrorMessage.name}</span>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"\">\r\n\r\n                                      <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"contactNumber\" type=\"tel\" onChange={this.handeChange} placeholder=\"Enter your contact number\" name=\"contactNumber\" value={this.state.formvalue.contactNumber}>\r\n                                        </input>\r\n                                    </div>\r\n                                    {this.state.formerrorMessage.contactNumber ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.contactNumber}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"email\" type=\"email\" onChange={this.handeChange} placeholder=\"Email\" name=\"email\" value={this.state.formvalue.email}>\r\n                                        </input>\r\n                                    </div>\r\n\r\n                                    {this.state.formerrorMessage.email ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.email}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"password\" type=\"password\" onChange={this.handeChange} placeholder=\"Password\" name=\"password\" value={this.state.formvalue.password}>\r\n                                        </input>\r\n                                    </div>\r\n\r\n                                    {this.state.formerrorMessage.password ? (\r\n                                        <span className=\"text-center alert-warning-small\">{this.state.formerrorMessage.password}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"confirmPassword\" type=\"password\" onChange={this.handeChange} placeholder=\"Confirm Password\" name=\"confirmPassword\" value={this.state.formvalue.confirmPassword}>\r\n                                        </input>\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        type=\r\n                                        \"submit\"\r\n                                        className=\"btn-register\"\r\n                                        onClick={this.handleSubmit}>\r\n                                        <b>Register</b>\r\n                                    </button>\r\n                                </div>\r\n                                <span type=\"text\" className=\"alert-info\" >{this.state.errorMessage}</span>\r\n                                <span type=\"text\" className=\"alert-success\" >{this.state.successMessage}</span>\r\n                            </div>\r\n                            <div className=\"text text-center small\">\r\n                                Already have an account?<Link className=\"text-center\" to=\"/Login\">\r\n                                    <b>Sign in</b>\r\n                                </Link>\r\n                            </div>\r\n                        </form>\r\n                        <span className=\"text-center alert-success\"><b>{this.state.successMessage}</b></span>\r\n                        <span className=\"text-center alert-danger\"><b>{this.state.errorMessage}</b></span>\r\n                    </section>\r\n                    <section className=\"col\"></section>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AdminAddDoctor;","import React, { Component } from \"react\";\r\nimport { Table, Button, Popconfirm, Row, Col, Upload } from \"antd\";\r\nimport { ExcelRenderer } from \"react-excel-renderer\";\r\nimport { EditableFormRow, EditableCell } from \"../utils/edittable\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\n\r\nexport default class AdminAddPatsBulk extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: '',\r\n            cols: [],\r\n            rows: [],\r\n            errorMessage: null,\r\n            columns: [\r\n                {\r\n                    title: \"NAME\",\r\n                    dataIndex: \"name\",\r\n                    editable: true\r\n                },\r\n                {\r\n                    title: \"PHONE NO\",\r\n                    dataIndex: \"phone\",\r\n                    editable: true\r\n                },\r\n                {\r\n                    title: \"Email Id\",\r\n                    dataIndex: \"email\",\r\n                    editable: true\r\n                },\r\n                {\r\n                    title: \"Password\",\r\n                    dataIndex: \"password\",\r\n                    editable: true\r\n                },\r\n                {\r\n                    title: \"Action\",\r\n                    dataIndex: \"action\",\r\n                    render: (text, record) =>\r\n                        this.state.rows.length >= 1 ? (\r\n                            <Popconfirm\r\n                                title=\"Sure to delete?\"\r\n                                onConfirm={() => this.handleDelete(record.key)}\r\n                            >\r\n                                <Button\r\n                                    className=\"btn btn-danger\"\r\n                                    type=\"delete\"\r\n                                    theme=\"filled\"\r\n                                    style={{ color: \"black\", fontSize: \"15px\" }}\r\n                                >\r\n                                    <AiIcons.AiFillDelete /> Delete</Button>\r\n                            </Popconfirm>\r\n                        ) : null\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.rows];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        this.setState({ rows: newData });\r\n    };\r\n\r\n    checkFile(file) {\r\n        let errorMessage = \"\";\r\n        if (!file || !file[0]) {\r\n            return;\r\n        }\r\n        const isExcel =\r\n            file[0].type === \"application/vnd.ms-excel\" ||\r\n            file[0].type ===\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n        if (!isExcel) {\r\n            errorMessage = \"You can only upload Excel file!\";\r\n        }\r\n        console.log(\"file\", file[0].type);\r\n        const isLt2M = file[0].size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            errorMessage = \"File must be smaller than 2MB!\";\r\n        }\r\n        console.log(\"errorMessage\", errorMessage);\r\n        return errorMessage;\r\n    }\r\n\r\n    fileHandler = event => {\r\n        // console.log(\"fileList\", fileList);\r\n        let fileObj = event\r\n\r\n        this.checkFile(fileObj);\r\n\r\n        this.setState({ file: fileObj });\r\n\r\n        if (!fileObj) {\r\n            this.setState({\r\n                errorMessage: \"No file uploaded!\"\r\n            });\r\n            return false;\r\n        }\r\n        console.log(\"fileObj.type:\", fileObj.type);\r\n        if (\r\n            !(\r\n                fileObj.type === \"application/vnd.ms-excel\" ||\r\n                fileObj.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n            )\r\n        ) {\r\n            this.setState({\r\n                errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\r\n            });\r\n            return false;\r\n        }\r\n        //just pass the fileObj as parameter\r\n        ExcelRenderer(fileObj, (err, resp) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                let newRows = [];\r\n                resp.rows.slice(1).map((row, index) => {\r\n                    if (row && row !== \"undefined\") {\r\n                        newRows.push({\r\n                            key: index,\r\n                            name: row[0],\r\n                            phone: row[1],\r\n                            email: row[2],\r\n                            password: row[3]\r\n                        });\r\n                    }\r\n                });\r\n                if (newRows.length === 0) {\r\n                    this.setState({\r\n                        errorMessage: \"No data found in file!\"\r\n                    });\r\n                    return false;\r\n                } else {\r\n                    this.setState({\r\n                        cols: resp.cols,\r\n                        rows: newRows,\r\n                        errorMessage: null\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        return false;\r\n    };\r\n\r\n    handleSubmit = async () => {\r\n        console.log(\"submitting: \", this.state.rows);\r\n        //submit to API\r\n        //if successful, banigate and clear the data\r\n        \r\n        const data = new FormData() \r\n        data.append('file', this.state.file)\r\n        console.warn(this.state.file);\r\n        let url = \"https://exapp-server.herokuapp.com/exult/adminAPI/uploadFile\";\r\n \r\n        axios.post(url, data, { // receive two parameter endpoint url ,form data \r\n        })\r\n        .then(res => { // then print response status\r\n            console.warn(res);\r\n        }).then(response => this.setState({\r\n\r\n            usersData: response.data,\r\n            successMessage: \"Registration Successfull !!\",\r\n            errorMessage: \"\",\r\n            login: true\r\n        })).catch(error => {\r\n            if (error.response) {\r\n                this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n            } else {\r\n                this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n            }\r\n        });\r\n\r\n        this.setState({ rows: [] })\r\n        };\r\n\r\n        handleDelete = key => {\r\n            const rows = [...this.state.rows];\r\n            this.setState({ rows: rows.filter(item => item.key !== key) });\r\n        };\r\n        handleAdd = () => {\r\n            const { count, rows } = this.state;\r\n            const newData = {\r\n                key: count,\r\n                name: \"Name\",\r\n                phone: \"9999999999\",\r\n                email: \"@gmail.com\",\r\n                password: \"password\"\r\n            };\r\n            this.setState({\r\n                rows: [newData, ...rows],\r\n                count: count + 1\r\n            });\r\n        };\r\n\r\n        render() {\r\n            const components = {\r\n                body: {\r\n                    row: EditableFormRow,\r\n                    cell: EditableCell\r\n                }\r\n            };\r\n            const columns = this.state.columns.map(col => {\r\n                if (!col.editable) {\r\n                    return col;\r\n                }\r\n                return {\r\n                    ...col,\r\n                    onCell: record => ({\r\n                        record,\r\n                        editable: col.editable,\r\n                        dataIndex: col.dataIndex,\r\n                        title: col.title,\r\n                        handleSave: this.handleSave\r\n                    })\r\n                };\r\n            });\r\n            return (\r\n                <div className=\"App-header\">\r\n                    <div className=\"card container-fluid\" style={{ marginTop: \"75px\", width: \"100%\" }}>\r\n                        <form className=\" form-control\">\r\n\r\n                            <h1 className=\"card-header\"><b>Upload Patients Data</b></h1>\r\n                            <Row >\r\n                                <Col\r\n                                    span={10}\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"space-between\",\r\n                                        alignItems: \"center\",\r\n                                        marginBottom: \"5%\"\r\n                                    }}\r\n                                >\r\n\r\n                                </Col>\r\n                                <Col style={{ float: \"right\" }} span={10}>\r\n                                    <a\r\n                                        href=\"/\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        download\r\n                                    >\r\n                                        Sample excel sheet\r\n                                    </a>\r\n                                </Col>\r\n                                <Col\r\n                                    span={10}\r\n\r\n                                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                                >\r\n                                    {this.state.rows.length > 0 && (\r\n                                        <div className=\"form-control col-auto\">\r\n                                            <Button\r\n                                                className=\"btn btn-warning\"\r\n                                                onClick={this.handleAdd}\r\n                                                size=\"large\"\r\n                                                type=\"info\"\r\n                                                style={{ float: \"left\", width: \"auto\" }}\r\n                                            >\r\n                                                {/* <Icon type=\"plus\" /> */}\r\n                                                Add a row\r\n                                            </Button>{\" \"}\r\n                                            <Button\r\n                                                className=\"btn btn-success\"\r\n                                                onClick={this.handleSubmit}\r\n                                                size=\"large\"\r\n                                                type=\"primary\"\r\n                                                style={{ width: \"auto\" }}\r\n                                            >\r\n                                                Submit Data\r\n                                            </Button>\r\n                                        </div>\r\n                                    )}\r\n                                </Col>\r\n                            </Row>\r\n                            <div>\r\n                                <Upload\r\n                                type=\"file\"\r\n                                    name=\"file\"\r\n                                    beforeUpload={this.fileHandler}\r\n                                    onRemove={() => this.setState({ rows: [] })}\r\n                                    multiple={false}\r\n                                >\r\n                                    <Button className=\"form-control\" style={{ width: \"auto\", float: \"left\" }}>\r\n                                        <AiIcons.AiOutlineUpload />\r\n                                        Click to Upload Excel File\r\n                                    </Button>\r\n                                </Upload>\r\n                            </div>\r\n                            <div style={{ marginTop: 10 }}>\r\n                                <Table\r\n                                    className=\"table card container-fluid\"\r\n                                    components={components}\r\n                                    rowClassName={() => \"editable-row\"}\r\n                                    dataSource={this.state.rows}\r\n                                    columns={columns}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\n\r\nimport { Modal, ModalDialog } from 'react-bootstrap';\r\nimport { Type, Field } from './models/FieldDetails';\r\nimport { Table, Button, Popconfirm, Row, Col, Icon, Upload } from \"antd\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport axios from 'axios';\r\n\r\nimport { images } from \"../utils/ImagesData\";\r\n\r\n\r\nclass AdminPatientDetailsEdit extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            patData: [],\r\n            field: {\r\n                FieldType: \"\",\r\n                FieldName: \"\",\r\n                FieldValue: \"\"\r\n            },\r\n            showFieldEdit: false\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"https://exapp-server.herokuapp.com/exult/adminAPI/sampPatTempEdt\")\r\n            .then(response => this.setState({ patData: response.data }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n        console.log(this.state.patdata)\r\n    }\r\n\r\n    handleShowAddField = () => {\r\n        this.setState({ showFieldEdit: true })\r\n    }\r\n\r\n    handleCloseAddField = () => {\r\n        this.setState({ showFieldEdit: false })\r\n    }\r\n\r\n    handleChange = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { field } = this.state;\r\n        this.setState({ field: { ...field, [name]: value } });\r\n\r\n        console.log(this.state.field)\r\n    }\r\n\r\n    submitTemplate = () => {\r\n        axios.post('https://exapp-server.herokuapp.com/exult/adminAPI/patTempEdt', this.state.patData)\r\n            .then(response => this.setState({\r\n                successMessage: \"Submit Successfull !!\",\r\n                errorMessage: \"\",\r\n                login: true\r\n            })).catch(error => {\r\n                if (error.response) {\r\n                    this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                } else {\r\n                    this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    handleDelete = event => {\r\n\r\n        const { patData } = this.state;\r\n        const id = event.target.id;\r\n\r\n\r\n        this.setState({ patData: patData.filter(item => item.fieldId != id) });\r\n\r\n    };\r\n\r\n    handleAddField = () => {\r\n\r\n        const { patData } = this.state;\r\n        const newData = {\r\n            fieldId: \"1\",\r\n            fieldName: this.state.field.FieldName,\r\n            fieldType: this.state.field.FieldType,\r\n            fieldValue: this.state.field.FieldValue\r\n        };\r\n\r\n\r\n        this.setState({\r\n            patData: [newData, ...patData],\r\n\r\n        });\r\n\r\n        this.handleCloseAddField();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-header\"  >\r\n\r\n                <div >\r\n                    <div className='card container-fluid' style={{ marginTop: \"70px\" }}>\r\n                        <div className='' style={{ width: \"100%\" }}>\r\n                            <label className='card-header text-center' style={{ width: \"100%\" }}><b>Patients Details Page</b></label>\r\n                        </div>\r\n\r\n                        <div >\r\n                            <ul className='card-body '>\r\n\r\n                                {this.state.patData.map((item, index) => {\r\n                                    return (\r\n\r\n                                        <div className='form-control' key={index}>\r\n\r\n                                            <div key={index} className=\"form-control-sm row\" style={{ position: \"left\" }} >\r\n                                                <Row >\r\n                                                    <Col span={10} style={{ float : \"left\" }}>\r\n                                                        <label className='form-item text-center' style={{ padding: '0.5rem',marginTop: '0.8rem' }}><b>{item.fieldName}</b></label>\r\n                                                    </Col>\r\n                                                    <Col style={{ float: \"left\",padding:\"0.5rem\" }} span={10}>\r\n                                                        <input id={item.fieldId}\r\n                                                            className=\"form-item\"\r\n                                                            type={item.fieldType}\r\n                                                            onChange={this.handleChange}\r\n                                                            placeholder={item.fieldName}\r\n                                                            name={item.fieldName}\r\n                                                            value={item.fieldValue}\r\n\r\n                                                            disabled={sessionStorage.getItem(\"userId\") < 10 ? true : false}\r\n                                                        >\r\n                                                        </input>\r\n                                                    </Col>\r\n                                                    <Col span={10} style={{ float : \"left\" }} >\r\n                                                        <Button\r\n                                                            id={item.fieldId}\r\n                                                            className=\"btn btn-danger form-item\"\r\n                                                            type=\"delete\"\r\n                                                            theme=\"filled\"\r\n                                                            style={{ padding: '0.5rem',marginTop: '0.8rem'}}\r\n                                                            onClick={this.handleDelete}\r\n                                                        >\r\n                                                            <AiIcons.AiFillDelete /></Button>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n\r\n                                            </div>\r\n\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    )\r\n                                })}\r\n\r\n                                <button\r\n                                    type=\"\"\r\n                                    className=\"btn btn-info form-group\"\r\n                                    onClick={this.handleShowAddField}>\r\n                                    <b>Add Field</b>\r\n                                </button>\r\n\r\n                                <button\r\n                                    type=\"\"\r\n                                    className=\"btn btn-success form-group\"\r\n                                    onClick={this.submitTemplate}\r\n                                    style={{ width: \"100%\" }}>\r\n                                    <b>Submit</b>\r\n                                </button>\r\n                            </ul>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className='ft-modal' >\r\n                            <Modal show={this.state.showFieldEdit} onHide={this.handleCloseAddField}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title className='text-center'>\r\n                                        <b>Field Details</b>\r\n                                    </Modal.Title>\r\n                                </Modal.Header>\r\n\r\n                                <Modal.Body >\r\n\r\n                                    <div className='' style={{ backgroundColor: \"#0000 \", padding: \"0.5rem\" }}>\r\n\r\n                                        <React.Fragment>\r\n                                            <form>\r\n                                                <div className=\"form-control\" >\r\n\r\n\r\n                                                    <label ><span><h6>Field Name</h6></span></label>\r\n                                                    <input type=\"text\"\r\n                                                        className=\"form-control form-item\"\r\n                                                        style={{ padding: \"1rem\" }}\r\n                                                        id=\"FieldName\"\r\n                                                        placeholder=\"Field Name\"\r\n                                                        name=\"FieldName\" onChange={this.handleChange}\r\n                                                        value={this.state.field.FieldName} />\r\n\r\n                                                    <label ><span><h6>Field Value</h6></span></label>\r\n                                                    <input type=\"text\"\r\n                                                        className=\"form-control form-item\"\r\n                                                        style={{ padding: \"1rem\" }}\r\n                                                        id=\"FieldValue\"\r\n                                                        placeholder=\"Field Value\"\r\n                                                        name=\"FieldValue\" onChange={this.handleChange}\r\n                                                        value={this.state.field.FieldValue} />\r\n\r\n                                                    <div className=\"\">\r\n                                                        <div className=\"select-wrap\">\r\n                                                            <label ><span><h6>Choose Field Type</h6></span></label>\r\n                                                            <select name=\"FieldType\" id=\"\" className=\"form-control\" onClick={this.handleChange} placeholder=\"Select Type\">\r\n                                                                {Type.map((type, key) => {\r\n                                                                    return (\r\n                                                                        <option value={type}>{type}</option>\r\n                                                                    )\r\n\r\n                                                                })}\r\n                                                            </select>\r\n                                                        </div>\r\n\r\n\r\n                                                    </div>\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-success col\"\r\n                                                        onClick={this.handleAddField}>\r\n                                                        <b>Add</b>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </form>\r\n\r\n                                        </React.Fragment>\r\n\r\n                                    </div>\r\n\r\n                                </Modal.Body>\r\n                            </Modal>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default AdminPatientDetailsEdit;","import React, { Component } from \"react\";\r\n\r\n\r\n\r\n// import \"../index.css\";\r\n\r\nimport \"../css/css/menu.css\";\r\n\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as ImIcons from \"react-icons/im\";\r\n\r\nimport Login from \"../Components/Login\"\r\nimport Register from \"../Components/Register\";\r\nimport Home from \"../Components/Home\";\r\nimport { MenuData, MenuDataAdmin, MenuDataDoc } from \"../utils/MenuData\";\r\nimport Appointment from \"./Appointment\";\r\nimport AdminPatientPageEdit from \"./AdminPatientPageEdit\";\r\nimport PatientDetails from \"./PatientDetails\";\r\nimport DocUpdatePatData from \"./DocUpdatePatData\";\r\nimport ContactUs from \"./ContactUs\";\r\nimport Services from \"./Services\";\r\nimport ViewAppointments from \"./ViewAppointments\";\r\nimport AdminAddDoctor from \"./AdminAddDoctor\";\r\nimport AdminAddPatsBulk from \"./AdminAddPatsBulk\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AdminPatientDetailsEdit from \"./AdminPatientDetailsEdit\";\r\nimport Calendar from \"./Calendar\";\r\n\r\n\r\n\r\n\r\n\r\nclass NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            logged_userId: sessionStorage.getItem(\"userId\"),\r\n            logged_userName: sessionStorage.getItem(\"userName\"),\r\n            dialog_visible: false,\r\n            logged_out: false,\r\n            sideNav: false\r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({ sideNav: false });\r\n\r\n    }\r\n    onClick = () => {\r\n        this.setState({ dialog_visible: true });\r\n    }\r\n\r\n    onHide = () => {\r\n        this.setState({ dialog_visible: false });\r\n    }\r\n\r\n    logout = () => {\r\n        this.setState({ dialog_visible: false });\r\n        sessionStorage.clear();\r\n        this.setState({ logged_out: true });\r\n        window.location.reload();\r\n        <Redirect to=\"/\" ></Redirect>\r\n    };\r\n\r\n    confirm_logout = () => {\r\n        this.setState({ dialog_visible: true })\r\n\r\n    };\r\n\r\n    toggleSidebar = () => {\r\n        this.setState({ sideNav: !this.state.sideNav });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"App-background\">\r\n\r\n                <Router>\r\n\r\n                    {!this.state.logged_out ? <Redirect to=\"/\" ></Redirect> : null}\r\n\r\n                    <nav className=\"mainNav navbar navbar-expand-md navbar-dark ftco_navbar bg-dark ftco-navbar-light\" id=\"ftco-navbar\">\r\n                        {this.state.logged_userId != null ? (\r\n                            <button className=\"menu-bars\" onClick={this.toggleSidebar}><ImIcons.ImMenu /></button>\r\n                        ) : null}\r\n\r\n                        <div className=\"container-fluid\">\r\n\r\n                            <a className=\"navbar-brand\" href=\"/\" style={{ marginLeft: \"80px\" }}><b>e</b>-xult</a>\r\n\r\n                            <div className=\"collapse navbar-collapse\" id=\"ftco-nav\">\r\n                                <ul className=\"navbar-nav ml-auto col-auto\" style={{ padding: \"0.2\" }} >\r\n                                    <li className=\"nav-item active cta \"><Link className=\"nav-link\" to=\"/\">Home</Link></li>\r\n                                    <li className=\"nav-item cta \"><Link  className=\"nav-link\" to=\"/\">About</Link></li>\r\n                                    <li className=\"nav-item cta \"><Link className=\"nav-link\" to=\"/services/\">Services</Link></li>\r\n                                    <li className=\"nav-item cta \"><Link  className=\"nav-link\" to=\"/\">Doctors</Link></li>\r\n                                    <li className=\"nav-item cta \"><Link  className=\"nav-link\" to=\"/\">Blog</Link></li>\r\n                                    <li className=\"nav-item cta \"><Link className=\"nav-link\" to=\"/contactus/\">Contact</Link></li>\r\n                                    {this.state.logged_userId > 10 ?\r\n                                        <li className=\"nav-item cta \"><Link className=\"nav-link\" to=\"/appointment/\">Book Appointment</Link></li>\r\n                                        : null}\r\n\r\n\r\n                                    {!this.state.logged_userId ? (\r\n                                        <li className=\"nav-item cta\"><Link className=\"nav-link\" to=\"/Login\"><b>Log In</b></Link></li>\r\n                                    ) : null}\r\n\r\n                                    {this.state.logged_userId ? (\r\n                                        <li className=\"nav-item cta\"><Link className=\"nav-link\" onClick={this.logout} to=\"/\"><b >Log out</b></Link></li>\r\n                                    ) : null}\r\n\r\n                                    {this.state.logged_userId ? (\r\n\r\n                                        <li className=\"nav-item cta\">\r\n\r\n                                            <button className=\"menu-bars\" style={{ marginTop: \"0.5rem\" }} onClick={this.logout}><ImIcons.ImUser /></button>\r\n                                        </li>\r\n\r\n\r\n                                    ) : null}\r\n\r\n\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </nav>\r\n\r\n                    {this.state.sideNav && this.state.logged_userId > 10 ?\r\n                        <div>\r\n\r\n\r\n                            <nav className={this.state.sideNav ? 'nav-menu active' : 'nav-menu navbar-m'} style={{ position: \"relative\", float: 'left', height: \"100%\" }}>\r\n\r\n                                <ul className='nav-item form-control'>\r\n\r\n                                    {MenuData.map((item, index) => {\r\n                                        return (\r\n                                            <li key={index} className={item.cName}>\r\n                                                <Link to={item.path} onClick={this.toggleSidebar} className={item.cName}>\r\n                                                    {item.icon}\r\n                                                    <span>{item.title}</span>\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    })}\r\n                                </ul>\r\n\r\n                            </nav>\r\n                        </div>\r\n                        : null}\r\n\r\n\r\n                    {this.state.sideNav && this.state.logged_userId < 10 && this.state.logged_userId > 1 ?\r\n                        <div>\r\n\r\n                            <nav className={this.state.sideNav ? 'nav-menu active' : 'nav-menu navbar-m'} style={{ position: \"relative\", float: 'left' }}>\r\n\r\n                                <ul className='nav-item form-control'>\r\n\r\n                                    {MenuDataDoc.map((item, index) => {\r\n                                        return (\r\n                                            <li key={index} onClick={this.toggleSidebar} className={item.cName}>\r\n                                                <Link to={item.path} className=\"\">\r\n                                                    {item.icon}<span>{item.title}</span>\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    })}\r\n                                </ul>\r\n\r\n                            </nav>\r\n                        </div>\r\n                        : null}\r\n\r\n                    {this.state.sideNav && (this.state.logged_userId === \"1\") ?\r\n                        <div>\r\n\r\n                            <nav className={this.state.sideNav ? 'nav-menu active ' : 'nav-menu navbar-m'} style={{ position: \"relative\", float: 'left' }}>\r\n\r\n                                <ul className='nav-item form-control'>\r\n\r\n                                    {MenuDataAdmin.map((item, index) => {\r\n                                        return (\r\n                                            <li key={index} className={item.cName}>\r\n                                                <Link to={item.path} onClick={this.toggleSidebar} className={item.cName}>\r\n                                                    {item.icon}{item.title}\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    })}\r\n                                </ul>\r\n\r\n                            </nav>\r\n                        </div>\r\n                        : null}\r\n\r\n                    <div>\r\n\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Home}></Route>\r\n                            <Route exact path=\"/Login\" component={Login}></Route>\r\n                            <Route path=\"/register\" component={Register}></Route>\r\n                            <Route path=\"/appointment/:patientId\" component={Appointment}></Route>\r\n                            <Route exact path=\"/details/:patientId\" component={PatientDetails}></Route>\r\n                            <Route path=\"/patientPageEdit\" component={AdminPatientDetailsEdit}></Route>\r\n                            <Route path=\"/addPatDetails\" component={DocUpdatePatData}></Route>\r\n                            <Route path=\"/getApt/:userId\" component={ViewAppointments}></Route>\r\n                            <Route path=\"/addDoc\" component={AdminAddDoctor}></Route>\r\n                            <Route path=\"/addPats\" component={AdminAddPatsBulk}></Route>\r\n                            <Route path=\"/cal\" component={Calendar}></Route>\r\n                            <Route path=\"/contactus\" component={ContactUs}></Route>\r\n                            <Route path=\"/services\" component={Services}></Route>\r\n                        </Switch>\r\n\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default NavBar;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport NavBar from './Components/Navbar';\r\nimport \"./css/open-iconic-bootstrap.min.css\";\r\nimport \"./css/animate.css\";\r\n// import \"./css/owl.carousel.min.css\";\r\nimport \"./css/owl.theme.default.min.css\";\r\nimport \"./css/magnific-popup.css\";\r\nimport \"./css/aos.css\";\r\nimport \"./css/ionicons.min.css\";\r\nimport \"./css/bootstrap-datepicker.css\";\r\nimport \"./css/flaticon.css\";\r\nimport \"./css/icomoon.css\";\r\nimport \"./css/style.css\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <NavBar />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// document.addEventListener( 'DOMContentLoaded', function() {\r\n//   var element = document.getElementById( 'wprk-admin-app' );\r\n//   if( typeof element !== 'undefined' && element !== null ) {\r\n//       ReactDOM.render( <NavBar />, document.getElementById( 'wprk-admin-app' ) );\r\n//   }\r\n// } )\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}