{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","Components/models/User.js","utils/URL.js","Components/Login.js","Components/Register.js","utils/ImagesData.js","utils/home/1.jpg","utils/home/2.jpg","utils/home/3.jpg","utils/home/4.jpg","utils/home/5.jpg","Components/GDrive.js","Components/Drive.js","Components/Home.js","Components/SMSnootificationManager.js","utils/MenuData.js","Components/Calendar.js","Components/Appointment.js","Components/models/FieldDetails.js","Components/AdminPatientPageEdit.js","Components/PatientDetails.js","Components/DocUpdatePatData.js","Components/ContactUs.js","utils/services/hair.jpg","utils/services/face.jpg","utils/services/skin.jpg","utils/services/body.jpg","utils/services/laser.jpg","Components/Services.js","utils/services/surgeries.jpg","Components/CreateEvent.js","Components/ViewAppointments.js","Components/UpdateEvent.js","Components/AdminAddDoctor.js","Components/AdminAddPatsBulk.js","Components/AdminPatientDetailsEdit.js","Components/Navbar.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","User","patSampEdit_URL","patTempEdit_URL","patPatientId_URL","getApt_URL","getAllApts_URL","confirmApt_URL","Login","props","loginSubmit","user","contactNumber","state","formvalue","password","LoginForm","axios","post","response","setState","register","login","successMessage","data","name","sessionStorage","setItem","userName","userId","emailId","window","location","reload","catch","error","console","log","errorMessage","message","cancel","handleSubmit","event","preventDefault","handleChange","value","target","validate","fieldName","validationerrorMessage","formerrorMessage","formvalid","match","buttonActive","this","to","className","style","marginTop","id","required","type","min","max","onChange","placeholder","contactErrorMessage","passwordErrorMessage","severity","text","onClick","Component","Register","submitRegister","userData","patientName","fname","lname","email","firstname","document","getElementById","lastname","confirmPassword","usersData","handeChange","length","disabled","images","url","Upload","clientId","developerKey","DISCOVERY_DOCS","Drive","parentFolder","parentCallback","useDrivePicker","openPicker","authRes","useState","setUrl","authButtonRef","useRef","signoutButtonRef","listFilesButtonRef","initClient","gapi","client","init","apiKey","discoveryDocs","scope","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","current","onclick","handleSignoutClick","listFileClick","err","display","useEffect","load","upload","docs","a","doc","drive","files","fileId","fields","res","JSON","parse","body","webViewLink","openUrl","urls","map","signOut","access_token","headers","Authorization","fetch","list","result","i","file","kind","webContentLink","Button","viewId","MimeTypes","supportDrives","multiselect","customScopes","showUploadView","showUploadFolders","width","height","paddingBlock","size","Home","sms","fileObj","smsData","mobileNo","accessToken","showBullets","showNavs","MenuData","title","path","getItem","icon","cName","MenuDataAdmin","MenuDataDoc","Calendar","slotsAvailability","newDate","moment","add","date","getEvents","handleNewSlots","availableTimeslots","docMail","format","that","request","startOf","toISOString","endOf","count","events","items","sortedEvents","sort","b","start","dateTime","setSlots","isBusy","isEmpty","isLoading","freeDay","slots","okSlots","reason","busyhours","e","eventItem","push","end","Set","t","j","t1","split","k","t2","diff","Date","setDate","getDate","setHours","parseInt","CreateEvent","time","getTime","setTime","onTrigger","tick","setStatus","now","isBetween","timeCallback","checkDayAvailability","day","patMail","pat","stateDoc","dayAvailability","startTime","endTime","doctorMail","newValue","borderRadius","primaryColor","eventDurationInMinutes","onStartTimeSelect","startTimeEventEmit","nextProps","prevState","undefined","Appointment","getDetails","docDetails_URL","doctorsData","urlP","params","patientId","patient","SubmitAppointment","aptDate","toString","aptTime","aptData","aptPatient","aptDoctor","aptDoctorId","aptStatus","doctor","key","doctorId","handleCallback","calendar","patientMail","aptPatientId","role","onSubmit","selected","defaultValue","doctorName","Type","PatientDetails","callbackImages","newList","item","updatedItem","fieldValue","concat","callbackPrescriptions","callbackBills","writePermission","hide","readPermission","submitDetails","put","patData","index","fieldId","togglePrescriptions","togglePrescription","toggleImages","toggleBills","ImageGallery","gallery","src","pageValue","PatName","showFieldEdit","backgroundColor","textAlign","alignItems","Color","fontWeight","marginLeft","class","action","method","source","padding","for","fieldType","pres_data_id","viewer","minHeight","color","Collapse","in","float","href","img_data_id","bills_data_id","justifyContent","DocUpdatePatData","patDataCopy","handleSearch","word","filtered","filter","entry","Object","values","some","val","toLocaleLowerCase","includes","marginRight","ButtonToolbar","Details","frameborder","border","allowfullscreen","tabindex","loading","referrerpolicy","hairServiceImage","alt","faceServiceImage","skinServiceImage","CreateGoogleEvent","Id","urlApt","addEvent","signIn","insert","execute","aptId","htmlLink","setAptConfirm","open","ViewAppointments","UpdateAppointment","showAptEdit","handleShowAptEdit","handleCloseAptEdit","handleAptUpdate","patch","UpdateGoogleEvent","handleAptCancel","handleAddApointment","handleAptConfirm","appointmentEventId","handleSort","alertshow","alert","background","Modal","dialogClassName","show","onHide","Header","closeButton","Title","Body","Fragment","mail","AdminAddDoctor","AdminAddPatsBulk","handleSave","row","newData","rows","findIndex","splice","fileHandler","checkFile","ExcelRenderer","resp","newRows","slice","phone","cols","FormData","append","warn","handleDelete","handleAdd","columns","dataIndex","editable","render","record","onConfirm","theme","fontSize","components","EditableFormRow","cell","EditableCell","col","onCell","span","marginBottom","rel","download","beforeUpload","onRemove","multiple","rowClassName","dataSource","AdminPatientDetailsEdit","handleShowAddField","handleCloseAddField","field","submitTemplate","handleAddField","FieldName","FieldType","FieldValue","patdata","position","NavBar","dialog_visible","logout","clear","logged_out","confirm_logout","toggleSidebar","sideNav","logged_userId","logged_userName","exact","component","ContactUs","Services","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c40db164.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export class User{\r\n    userId;\r\n    name;\r\n    emailId;\r\n    contactNumber;\r\n    password;\r\n}","export const docRegister_URL = 'http://localhost:8080/exult/adminAPI/docRegister';\r\nexport const excelupload_URL = 'http://localhost:8080/exult/adminAPI/uploadFile';\r\nexport const patSampEdit_URL = 'http://localhost:8080/exult/adminAPI/sampPatTempEdt';\r\nexport const patTempEdit_URL = 'http://localhost:8080/exult/adminAPI/patTempEdt';\r\nexport const docDetails_URL = 'http://localhost:8080/exult/docAPI/details';\r\nexport const patPatientId_URL = 'http://localhost:8080/exult/patientAPI/patient/';\r\nexport const aptbook_URL = 'http://localhost:8080/exult/aptAPI/bookApt';\r\nexport const getApt_URL = 'http://localhost:8080/exult/aptAPI/fetchApt/';\r\nexport const docpatData_URL = 'http://localhost:8080/exult/docAPI/patdata/1';\r\nexport const login_URL = 'http://localhost:8080/exult/loginAPI/login';\r\nexport const patDataUpdate_URL = 'http://localhost:8080/exult/docAPI/dataUpdate/';\r\nexport const patPatData_URL = 'http://localhost:8080/exult/patientAPI/patientData/';\r\nexport const patFolders_URL = 'http://localhost:8080/exult/patientAPI/patientFolders/';\r\nexport const patRegister_URL = 'http://localhost:8080/exult/patientAPI/patientRegister';\r\nexport const getAllApts_URL = 'http://localhost:8080/exult/aptAPI/getApts/';\r\nexport const editApt_URL = 'http://localhost:8080/exult/aptAPI/editApt/';\r\nexport const cancelApt_URL = 'http://localhost:8080/exult/aptAPI/cancelApt/';\r\nexport const confirmApt_URL = 'http://localhost:8080/exult/aptAPI/confirmApt/';\r\n","import {User} from \"./models/User\";\r\nimport React, {Component} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../index.css\";\r\nimport \"../App.css\";\r\nimport {login_URL} from \"../utils/URL\";\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            successMessage: \"\",\r\n            register: false,\r\n            login: false,\r\n            cancel:false,\r\n           \r\n            formvalue: {\r\n                contactNumber: \"\",\r\n                password: \"\"\r\n            },\r\n            formerrorMessage: {\r\n                contactNumber: \"\",\r\n                password: \"\"\r\n            },\r\n            formvalid: {\r\n                contactNumber: false,\r\n                password: false,\r\n                buttonActive: false\r\n            },\r\n            successMessage:\"\",\r\n            errorMessage:\"\"\r\n        };\r\n    }\r\n    \r\n\r\n    loginSubmit = () => {\r\n        const user = new User();\r\n        user.contactNumber = this.state.formvalue.contactNumber;\r\n        user.password = this.state.formvalue.password;\r\n        \r\n        let LoginForm = {\r\n            contactNumber : this.state.formvalue.contactNumber,\r\n            password : this.state.formvalue.password\r\n        }\r\n        axios.post(login_URL,LoginForm)\r\n        .then(response => { this.setState({\r\n \r\n            register: false,\r\n            login: true,\r\n            successMessage: \"Welcome\"+response.data.name\r\n            \r\n        })\r\n        sessionStorage.setItem(\"userName\",response.data.userName);\r\n        sessionStorage.setItem(\"userId\",response.data.userId);\r\n        sessionStorage.setItem(\"contactNumber\",response.data.contactNumber);\r\n        sessionStorage.setItem(\"emailId\",response.data.emailId);\r\n        window.location.reload();\r\n       \r\n    }).catch(error=>{\r\n            if(error.response) {\r\n                console.log(error.response)\r\n                this.setState({ errorMessage : error.response.data.message ,successMessage : \"\" });\r\n            }else {\r\n                this.setState({ errorMessage : \"Server is down\", successMessage : \"\"});\r\n            }\r\n        });\r\n\r\n       \r\n        };\r\n\r\n    cancel=()=>{\r\n        this.setState({cancel:true})\r\n    }\r\n\r\n    register= () =>{\r\n        this.setState({register:true})\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.loginSubmit();\r\n      }\r\n\r\n    handleChange = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n        this.setState({ formvalue: { ...formvalue, [name]: value } });\r\n        this.validate(event);\r\n      }\r\n    \r\n    validate = event => {\r\n        var fieldName = event.target.name;\r\n        var value = event.target.value;\r\n        var validationerrorMessage = this.state.formerrorMessage;\r\n        var formvalid = this.state.formvalid;\r\n        \r\n        switch (fieldName) {\r\n            case \"contactNumber\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.contactNumber = \"Enter the field\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else if (!value.match(/^[6-9][0-9]{9}$/)) {\r\n                    validationerrorMessage.contactNumber = \"Please enter valid Indian Number\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.contactNumber = \"\";\r\n                    formvalid.contactNumber = true;\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.register == true) return <Redirect to={\"/Register\"} />;\r\n        else if (this.state.login == true || this.state.cancel == true) return <Redirect to={\"/\"} />;\r\n        return (\r\n            <div>\r\n                <div className=\"App-header\" >\r\n                    <section className='card container-fluid' style={{ marginTop: \"70px\" }}>\r\n                        <form className=\"form-control card-body\" >\r\n                        <div className=\"text-center card-header\">\r\n                                    <h2><b>LOGIN</b></h2>\r\n                                </div>\r\n                            <div className=\"card-group\">\r\n                                <span className=\"form-control-sm\">\r\n                                    <input\r\n                                        id=\"contactNumber\"\r\n                                        required\r\n                                        type=\"tel\"\r\n                                        min=\"6000000000\"\r\n                                        max=\"9999999999\"\r\n                                        name=\"contactNumber\"\r\n                                        onChange={this.handleChange}\r\n                                        className=\"form-group\"\r\n                                        placeholder=\"Contact Number\"\r\n                                        value={this.state.formvalue.contactNumber}\r\n                                    />\r\n                                   \r\n                                </span>\r\n                                {this.state.contactErrorMessage ? (\r\n                                    <span className=\"text-center alert-warning\">{this.state.contactErrorMessage}</span>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"card-group\">\r\n                                <span className=\"form-control-sm\">\r\n                                    <input\r\n                                        id=\"password\"\r\n                                        value={this.state.formvalue.password}\r\n                                        required\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        className=\"\"\r\n                                        placeholder=\"Password\"\r\n                                        onChange={this.handleChange}\r\n                                       \r\n                                    />              \r\n                                </span>\r\n                                {this.state.passwordErrorMessage ? (\r\n                                    <span\r\n                                        severity=\"error\"\r\n                                        className=\"alert-warning\"\r\n                                        text={this.state.passwordErrorMessage}\r\n                                    />\r\n                                ) : null}\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"form-control-sm\">\r\n                                <div className=\"col\" >\r\n                                    <div className=\"form-inline row\">\r\n                                        <button\r\n                                            type=\"submit\" \r\n                                            name=\"login\"\r\n                                            className=\" btn  btn-success\"\r\n                                            onClick={this.handleSubmit}\r\n                                        >\r\n                                          <b>Login</b>\r\n                                        </button>\r\n                                        <br></br>\r\n                                        \r\n                                        <button\r\n                                            type=\"submit\" value=\"cancel\"\r\n                                            className=\" btn btn-secondary\"\r\n                                            onClick={this.cancel}\r\n                                        >\r\n                                           <b>Cancel</b> \r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <br></br>\r\n                                <button\r\n                                    type=\"submit\" name=\"register\"\r\n                                    className=\"btn btn-primary \"\r\n                                    onClick={this.register}\r\n                                >\r\n                                    <b>Register</b>\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                        <span className=\"text-center alert-success\"><b>{this.state.successMessage}</b></span>\r\n                        <span className=\"text-center alert-danger\"><b>{this.state.errorMessage}</b></span>\r\n                    </section>\r\n                    <section className=\"col\"></section>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Login;","import { toBeVisible } from \"@testing-library/jest-dom/dist/matchers\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { User } from \"./models/User\";\r\nimport {patRegister_URL} from \"../utils/URL\";\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            formvalue: {\r\n                usersData: [],\r\n                fname: \"\",\r\n                lname: \"\",\r\n                contactNumber: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                confirmPassword: \"\"\r\n            },\r\n            formerrorMessage: {\r\n                name: \"\",\r\n                email: \"\",\r\n                contactNumber: \"\",\r\n                password: \"\"\r\n            },\r\n            formvalid: {\r\n                name: false,\r\n                email: false,\r\n                contactNumber: false,\r\n                password: false,\r\n                buttonActive: false\r\n            },\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false,\r\n            register : false\r\n        };\r\n    }\r\n\r\n\r\n    submitRegister = () => {\r\n\r\n        let userData = {\r\n            patientName: this.state.formvalue.fname + ' ' + this.state.formvalue.lname,\r\n            emailId: this.state.formvalue.email,\r\n            contactNumber: this.state.formvalue.contactNumber,\r\n            password: this.state.formvalue.password\r\n        }\r\n\r\n        var firstname = document.getElementById(\"firstname\").value;\r\n        var lastname = document.getElementById(\"lastname\")\r\n        var emailId = document.getElementById(\"email\").value;\r\n        var contactNumber = document.getElementById(\"contactNumber\").value;\r\n        var password = document.getElementById(\"password\").value;\r\n\r\n        var user = new User();\r\n\r\n        user.name = firstname + ' ' + lastname ;\r\n        user.contactNumber = contactNumber;\r\n        user.emailId = emailId;\r\n        user.password = password;\r\n\r\n        this.setState({ errorMessage: \"\", successMessage: \"\" });\r\n\r\n        console.log(this.state.formvalue.password);\r\n        console.log(this.state.formvalue.confirmPassword);\r\n        if (this.state.formvalue.password === this.state.formvalue.confirmPassword) {\r\n\r\n            axios.post(patRegister_URL, userData)\r\n                .then(response => this.setState({\r\n\r\n                    usersData: response.data,\r\n                    successMessage: \"Registration Successfull !!\",\r\n                    errorMessage: \"\",\r\n                    buttonActive: false,\r\n                    login: true\r\n                })).catch(error => {\r\n                    if (error.response) {\r\n                        this.setState({ errorMessage: error.response.data.message, buttonActive: false, successMessage: \"\" });\r\n                    } else {\r\n                        this.setState({ errorMessage: \"Server is down\", buttonActive: false, successMessage: \"\" });\r\n                    }\r\n                });\r\n        } else {\r\n            this.setState({ errorMessage: \"Password didn't match\",buttonActive: false, })\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.submitRegister();\r\n\r\n    }\r\n\r\n    handeChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n        this.setState({ formvalue: { ...formvalue, [name]: value } });\r\n        this.validate(event);\r\n       \r\n    }\r\n\r\n    validate = event => {\r\n        var fieldName = event.target.name;\r\n        var value = event.target.value;\r\n        var validationerrorMessage = this.state.formerrorMessage;\r\n        var formvalid = this.state.formvalid;\r\n        switch (fieldName) {\r\n            case \"fname\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.name = \"Enter the field\";\r\n                    formvalid.name = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z]+$/)) {\r\n                    validationerrorMessage.name = \"Please enter your name in valid format\";\r\n                    formvalid.name = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.name = \"\";\r\n                    formvalid.name = true;\r\n                }\r\n                break;\r\n\r\n            case \"lname\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.name = \"Enter the field\";\r\n                    formvalid.name = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z]+$/)) {\r\n                    validationerrorMessage.name = \"Please enter your name in valid format\";\r\n                    formvalid.name = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.name = \"\";\r\n                    formvalid.name = true;\r\n                }\r\n                break;\r\n\r\n            case \"email\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.email = \"Enter the field\";\r\n                    formvalid.email = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z0-9]+[@][A-Za-z0-9]+[.][c][o][m]$/)) {\r\n                    validationerrorMessage.email = \"Please enter valid email\";\r\n                    formvalid.email = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.email = \"\";\r\n                    formvalid.email = true;\r\n                }\r\n                break;\r\n\r\n            case \"contactNumber\":\r\n\r\n                if (value === \"\") {\r\n                    validationerrorMessage.contactNumber = \"Enter the field\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else if (!value.match(/^[6-9][0-9]{9}$/)) {\r\n                    validationerrorMessage.contactNumber = \"Please enter valid Indian Number\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.contactNumber = \"\";\r\n                    formvalid.contactNumber = true;\r\n                }\r\n                break;\r\n            case \"password\":\r\n\r\n                if (value === \"\") {\r\n                    validationerrorMessage.password = \"Enter the field\";\r\n                    formvalid.password = false;\r\n                }\r\n                else if (!value.match(/^[A-Z]+$/) && !value.match(/^.[a-z].$/) && !value.match(/^.[0-9].$/) && value.length < 8) {\r\n\r\n                    // var regexCap = new RegExp(/^.[A-Z].$/);\r\n                    // var regexLow = new RegExp(/^.[a-z].$/);\r\n                    // var regexNum = new RegExp(/^.[0-9].$/);\r\n\r\n                    // if(!value.match(/^.[A-Z].$/)){\r\n                    //     validationerrorMessage.password = \"Password Should contain 1 upper case letter\";\r\n                    //     formvalid.password = false;\r\n                    // }else if(!value.match(regexLow)){\r\n                    //     validationerrorMessage.password = \"Password Should contain 1 lower case letter\";\r\n                    //     formvalid.password = false;\r\n                    // }else if(!value.match(regexNum)){\r\n                    //     validationerrorMessage.password = \"Password Should contain atleast 1 number\";\r\n                    //     formvalid.password = false;\r\n                    // }else if(value.length<8){\r\n                    //     validationerrorMessage.password = \"Password Should contain atleast 8 characters\";\r\n                    //     formvalid.password = false;\r\n                    // }\r\n                    validationerrorMessage.password = `*Password Should contain atleast 1 upper case, 1 lower case,1 number and minimum 8 characters`;\r\n                    formvalid.password = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.password = \"\";\r\n                    formvalid.password = true;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        console.log(formvalid)\r\n        formvalid.buttonActive = formvalid.name && formvalid.email && formvalid.contactNumber && formvalid.password ;\r\n        this.setState({ formerrorMessage: validationerrorMessage, formvalid: formvalid, successMessage: \"\" });\r\n    }\r\n\r\n    render() {\r\n        // if(this.state.register)  return <Redirect to={\"/login\"} />\r\n        return (\r\n            <div className=\"App-header\"  >\r\n                \r\n                <div >\r\n                    <br></br>\r\n                    <div className='card container-fluid'>\r\n                        <form className=\"form-control\">\r\n                        \r\n                                    <h1 className=\"text-center card-header\"><h3><b>Patient Registration</b></h3></h1>\r\n                                \r\n                            <div className=\"card-body\">\r\n                                \r\n                                <div className=\"form-group form-col\">\r\n\r\n                                    <input id=\"firstname\" className=\" input-name\" onChange={this.handeChange} placeholder=\"First Name\" name=\"fname\" value={this.state.formvalue.fname}>\r\n                                    </input>\r\n                                    <input id=\"lastname\" className=\"input-name\" onChange={this.handeChange} name=\"lname\" placeholder=\"Last Name\" value={this.state.formvalue.lname}>\r\n                                    </input>\r\n\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    {this.state.formerrorMessage.name ? (\r\n                                        <span className=\"text alert-warning\">{this.state.formerrorMessage.name}</span>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"\">\r\n\r\n                                      <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"contactNumber\" type=\"tel\" onChange={this.handeChange} placeholder=\"Enter your contact number\" name=\"contactNumber\" value={this.state.formvalue.contactNumber}>\r\n                                        </input>\r\n                                    </div>\r\n                                    {this.state.formerrorMessage.contactNumber ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.contactNumber}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"email\" type=\"email\" onChange={this.handeChange} placeholder=\"Email\" name=\"email\" value={this.state.formvalue.email}>\r\n                                        </input>\r\n                                    </div>\r\n\r\n                                    {this.state.formerrorMessage.email ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.email}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"password\" type=\"password\" onChange={this.handeChange} placeholder=\"Password\" name=\"password\" value={this.state.formvalue.password}>\r\n                                        </input>\r\n                                    </div>\r\n\r\n                                    {this.state.formerrorMessage.password ? (\r\n                                        <span className=\"text-center alert-warning-small\">{this.state.formerrorMessage.password}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"confirmPassword\" type=\"password\" onChange={this.handeChange} placeholder=\"Confirm Password\" name=\"confirmPassword\" value={this.state.formvalue.confirmPassword}>\r\n                                        </input>\r\n                                    </div>\r\n                                        {console.log(this.state.formvalid.buttonActive)}\r\n                                    <button\r\n                                        type=\r\n                                        \"submit\"\r\n                                        className=\"btn btn-success\"\r\n                                        onClick={this.handleSubmit}\r\n                                        disabled={!this.state.formvalid.buttonActive}>\r\n                                        <b>Register</b>\r\n                                    </button>\r\n                                </div>\r\n                                <span type=\"text\" className=\"alert-info\" >{this.state.errorMessage}</span>\r\n                                <span type=\"text\" className=\"alert-success\" >{this.state.successMessage}</span>\r\n                            </div>\r\n                            <div className=\"text text-center small\">\r\n                                Already have an account?<Link className=\"text-center\" to=\"/Login\">\r\n                                    <b>Sign in</b>\r\n                                </Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Register;","import image1 from './home/1.jpg'\r\nimport image2 from './home/2.jpg'\r\nimport image3 from './home/3.jpg'\r\nimport image4 from './home/4.jpg'\r\nimport image5 from './home/5.jpg'\r\n\r\nexport const MyCollection = [\r\n    {\r\n      label: \"First Picture\",\r\n      imgPath:\r\n  \"https://media.geeksforgeeks.org/wp-content/uploads/20210208000010/1.png\",\r\n    },\r\n    {\r\n      label: \"Second Picture\",\r\n      imgPath:\r\n  \"https://media.geeksforgeeks.org/wp-content/uploads/20210208000009/2.png\",\r\n    },\r\n    {\r\n      label: \"Third Picture\",\r\n      imgPath:\r\n  \"https://media.geeksforgeeks.org/wp-content/uploads/20210208000008/3.png\",\r\n    },\r\n  ];\r\n\r\n export const images = [\r\n    { url: image1 },\r\n    { url: image2 },\r\n    { url: image3 },\r\n    { url: image4 },\r\n    { url: image5 },\r\n    { url: \"\"\r\n  },\r\n    { url: \"./images/image_7.jpg\" },\r\n  ];","export default __webpack_public_path__ + \"static/media/1.7202ad83.jpg\";","export default __webpack_public_path__ + \"static/media/2.89b0491b.jpg\";","export default __webpack_public_path__ + \"static/media/3.f841c949.jpg\";","export default __webpack_public_path__ + \"static/media/4.2b1e9d92.jpg\";","export default __webpack_public_path__ + \"static/media/5.572c6d8d.jpg\";","import { gapi } from \"gapi-script\";\r\nimport { useEffect } from \"react\";\r\nimport useDrivePicker from \"react-google-drive-picker\";\r\nimport * as FcIcons from \"react-icons/fc\"\r\n\r\nconst clientId =\r\n    \"229521899518-v2nb1anhnuj8n1rkqsi0qrpjojkl3l7r.apps.googleusercontent.com\";\r\nconst developerKey = \"AIzaSyDrVkS-ZRFRmTsJvLQTNpshIfEGyr2XhhI\";\r\nvar DISCOVERY_DOCS = [\r\n    \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"\r\n];\r\nvar SCOPES = \"https://www.googleapis.com/auth/drive.folder\";\r\n\r\nfunction Upload(parentFolder) {\r\n    const [openPicker, data, authResponse] = useDrivePicker();\r\n    // const customViewsArray = [new goog.picker.DocsView()]; // custom view\r\n    const handleOpenPicker = () => {\r\n        openPicker({\r\n            clientId: clientId,\r\n            developerKey: developerKey,\r\n            viewId: \"DOCS\",\r\n            setSelectFolderEnabled:false,\r\n            // token:\"##youraccesstoken##\", // pass oauth token in case you already have one\r\n            showUploadView: true,\r\n            showUploadFolders: true,\r\n            supportDrives: true,\r\n            setParentFolder:parentFolder,\r\n            multiselect: true,\r\n            // customViews: [\"FOLDERS\",\"DOCS_IMAGES\"], // custom view\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // do anything with the selected/uploaded files\r\n        if (data) {\r\n            data.docs.map((i) => console.log(i));\r\n        }\r\n    }, [data]);\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"btn\" onClick={() => handleOpenPicker()} style={{color:\"#000\"}}><FcIcons.FcGoogle/><b> Upload</b></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Upload;","import { useEffect, useRef, useState } from \"react\";\r\n\r\nimport useDrivePicker from \"react-google-drive-picker\";\r\nimport axios from \"axios\";\r\nimport * as FcIcons from \"react-icons/fc\";\r\nimport { Button, Collapse } from 'react-bootstrap'\r\n\r\nconst clientId =\r\n  \"229521899518-v2nb1anhnuj8n1rkqsi0qrpjojkl3l7r.apps.googleusercontent.com\";\r\nconst developerKey = \"AIzaSyDrVkS-ZRFRmTsJvLQTNpshIfEGyr2XhhI\";\r\nvar DISCOVERY_DOCS = [\r\n  \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"\r\n];\r\nvar SCOPES = \"https://www.googleapis.com/auth/drive.file\";\r\n\r\n\r\n\r\nexport default function Drive({ parentFolder,parentCallback }) {\r\n  const [openPicker, data, authRes] = useDrivePicker();\r\n  // const [loaded, error] = useInjectScript();\r\n  const [url, setUrl] = useState(\"\");\r\n  const authButtonRef = useRef();\r\n  const signoutButtonRef = useRef();\r\n  const listFilesButtonRef = useRef();\r\n  const openLinkButtonRef = useRef();\r\n\r\n  const initClient = () => {\r\n    console.log(\"init client\");\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: developerKey,\r\n        clientId: clientId,\r\n        discoveryDocs: DISCOVERY_DOCS,\r\n        scope: SCOPES\r\n      })\r\n      .then(\r\n        () => {\r\n          window.gapi.auth2\r\n            .getAuthInstance()\r\n            .isSignedIn.listen(updateSigninStatus);\r\n\r\n          // Handle the initial sign-in state.\r\n          updateSigninStatus(\r\n            window.gapi.auth2.getAuthInstance().isSignedIn.get()\r\n          );\r\n          // authButtonRef.current.onclick = handleAuthClick;\r\n          signoutButtonRef.current.onclick = handleSignoutClick;\r\n          listFilesButtonRef.current.onclick = listFileClick;\r\n          console.log(\"client inited\");\r\n        },\r\n        (err) => {\r\n          console.log(\"client error\", err);\r\n        }\r\n      );\r\n  };\r\n\r\n  function updateSigninStatus(isSignedIn) {\r\n    if (isSignedIn) {\r\n      authButtonRef.current.style.display = \"none\";\r\n      signoutButtonRef.current.style.display = \"block\";\r\n      listFilesButtonRef.current.style.display = \"block\";\r\n      // listFiles();\r\n    } else {\r\n      authButtonRef.current.style.display = \"block\";\r\n      signoutButtonRef.current.style.display = \"none\";\r\n      listFilesButtonRef.current.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (authRes) {\r\n      if (window.gapi) {\r\n        console.log(window.gapi);\r\n        window.gapi.load(\"client\", initClient);\r\n      }\r\n    }\r\n  }, [authRes]);\r\n  // console.log(\"api picker\", window.gapi.client);\r\n  const open = () => {\r\n    console.log(parentFolder)\r\n    openPicker({\r\n      clientId,\r\n      developerKey,\r\n      viewId: \"FOLDERS\",\r\n      MimeTypes: \"video/mp4 ,image/jpeg\",\r\n      supportDrives: true,\r\n      multiselect: true,\r\n      customScopes: [\"https://www.googleapis.com/auth/drive.file\"],\r\n      showUploadView: true,\r\n      showUploadFolders: true,\r\n      supportDrives: true,\r\n      multiselect: true,\r\n      setParentFolder:parentFolder\r\n    });\r\n  };\r\n\r\n  const upload = async (docs) => {\r\n    //Do we only upload one file even if the user selected more than 1 file?\r\n    //Should we keep allowing the user to select more than 1 file?\r\n    const doc = docs[0];\r\n    //get the name and the link from the file.\r\n    const { name, url, id } = doc;\r\n    console.log({ name, url, id });\r\n\r\n    window.gapi.client.drive.files\r\n      .get({ fileId: id, fields: \"*\" })\r\n      .then((res) => {\r\n        console.log(JSON.parse(res.body));\r\n        const url = JSON.parse(res.body).webViewLink;\r\n        setUrl(url);\r\n        openUrl(url);\r\n        console.log(\"is ress\", JSON.parse(res.body));\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"is error\", err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n       const urls = data.docs.map((doc) => doc.url)\r\n       console.log(data.docs);\r\n      upload(urls);\r\n      parentCallback(data.docs);\r\n    }\r\n  }, [data]);\r\n  const handleAuthClick = (event) => {\r\n    window.gapi.auth2.getAuthInstance().signIn();\r\n  };\r\n  const handleSignoutClick = (event) => {\r\n    window.gapi.auth2.getAuthInstance().signOut();\r\n  };\r\n\r\n  const openUrl = (url) => {\r\n    console.log(url, authRes.access_token);\r\n    // window.open(url);\r\n    const headers = {\r\n      Authorization: \"Bearer \" + authRes.access_token,\r\n      // \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Content-Type\": \"application/json; charset=UTF-8\"\r\n    };\r\n    console.log(headers);\r\n    fetch(url)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log({ err });\r\n      });\r\n    // axios\r\n    //   .post(url, null, { headers })\r\n    //   .then((res) => {\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err.response);\r\n    //   });\r\n  };\r\n\r\n  //when button is clicked open the url gotten for the file.\r\n  function listFiles() {\r\n    window.gapi.client.drive.files.list().then(\r\n      function (response) {\r\n        console.log(\"getting files\");\r\n        var files = response.result.files;\r\n        if (files && files.length > 0) {\r\n          for (var i = 0; i < files.length; i++) {\r\n            var file = files[i];\r\n            if (file.kind === \"drive#file\") {\r\n              window.gapi.client.drive.files\r\n                .get({ fileId: file.id, fields: \"*\" })\r\n                .then((res) => {\r\n                  console.log(JSON.parse(res.body));\r\n                  const url = JSON.parse(res.body).webContentLink;\r\n                  setUrl(url);\r\n                  openUrl(url);\r\n                  // console.log(\"is ress\", JSON.parse(res.body));\r\n                })\r\n                .catch((err) => {\r\n                  console.log(\"is error\", err);\r\n                });\r\n            }\r\n          }\r\n        } else {\r\n          console.log(\"no files found\");\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  const listFileClick = (event) => {\r\n    listFiles();\r\n  };\r\n  // const handleOpenLink = (event) => {\r\n  //   console.log(url, \" to open\");\r\n  //   window.open(url);\r\n  // };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"\">\r\n      \r\n\r\n      <Button className=\"btn\"  onClick={open} style={{ width:'120px',height: '30px',paddingBlock:'3px'}}><FcIcons.FcGoogle size={\"20px\"}/><b> UPLOAD</b></Button>\r\n      \r\n      {/* <button className=\"btn col-auto\" onClick={handleSignoutClick}><FcIcons.FcGoogle/>    <b>Sign out</b></button> */}\r\n      \r\n      {/* <button onClick={listFileClick}>list files</button>\r\n      <br /> */}\r\n      {/* <button onClick={handleOpenLink} ref={openLinkButtonRef}>\r\n        open link\r\n      </button> */}\r\n\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React, { Component, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from \"react-router-dom\";\r\n\r\nimport SimpleImageSlider from \"react-simple-image-slider\"\r\nimport { gapi } from 'gapi-script'\r\n\r\n\r\nimport { images } from \"../utils/ImagesData\";\r\nimport axios from \"axios\";\r\nimport \"../utils/URL\";\r\nimport GDrive from \"./GDrive\";\r\n\r\nimport Drive from \"./Drive\";\r\nimport SMS from \"./SMSnootificationManager\";\r\nimport { css } from \"styled-components\";\r\n\r\n\r\nclass Home extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileObj: {\r\n                mobileNo: \"\"\r\n            },\r\n            accessToken: '',\r\n\r\n\r\n        };\r\n    }\r\n\r\n    sms = () => {\r\n        SMS(this.state.fileObj);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            \r\n\r\n            <div className=\"App-header\">\r\n\r\n                <div className=\"card container-fluid\" style={{ marginTop: \"75px\", width: \"100%\" }}>\r\n                    <SimpleImageSlider\r\n                        className=\"container-fluid\"\r\n                        width=\"98%\"\r\n                        height=\"85%\"\r\n                        images={images}\r\n                        showBullets={true}\r\n                        showNavs={true}\r\n\r\n                    />\r\n\r\n                </div>\r\n                \r\n               \r\n                <div>\r\n                    {/* <DriveLogin /> <DriveLogOut/> */}\r\n                    {/* <GDrive /> */}\r\n                    {/* <Drive /> */}\r\n                    {/* <img src=\"https://drive.google.com/uc?export=view&id=1eG9rA3T74NG69AoZkNXSyfnoXvMpD9_K\" alt=\"emo\"></img> */}\r\n                    {/* <button className=\"btn\" onClick={this.sms} >Send</button> */}\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Home;","import { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nexport default function SMS ({ smsData }) {\r\n\r\nconst data = smsData;\r\n\r\nvar body = {\r\n    \"flow_id\": \"61701531163abd49a820db42\",\r\n    \"sender\": \"exults\",\r\n    \"mobiles\": \"919515050278\",\r\n    \"VAR1\": \"Akhil\",\r\n    \"VAR2\": \"Akki\"\r\n  }\r\n\r\naxios.post(\"https://api.msg91.com/api/v5/flow/\", body ,{ \r\n    headers: {\r\n        \"Authkey\" : \"312379AYnyiHzkHSVm6161ac34P1\",\r\n        \"Content-Type\" : \"application/JSON\",\r\n        \"Host\" : \"api.msg91.com\",\r\n        \"Content-Length\" : 130,\r\n    }\r\n}).then(\r\n    (response) => {\r\n        console.log(response.data)\r\n    }\r\n).catch((error) => {\r\n    console.log(error)\r\n})\r\n\r\n\r\n}\r\n","import React from 'react'\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as MdIcons from \"react-icons/md\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\n\r\nexport const MenuData = [\r\n    {\r\n        title: 'Details',\r\n        path: '/details/'+ sessionStorage.getItem(\"userId\"),\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Appointments',\r\n        path: '/getApt/'+ sessionStorage.getItem(\"userId\"),\r\n        icon:<AiIcons.AiOutlineCalendar/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Consultations',\r\n        path: '/',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Procedures',\r\n        path: '/',\r\n        icon:<FaIcons.FaHandHoldingMedical/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Surgey',\r\n        path: '/',\r\n        icon:<FaIcons.FaProcedures/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Gallery',\r\n        path: '/',\r\n        icon:<MdIcons.MdOutlinePhotoSizeSelectActual/>,\r\n        cName: \"nav-text\",\r\n    },\r\n]\r\n\r\nexport const MenuDataAdmin = [\r\n    {\r\n        title: 'Appointments',\r\n        path: '/getApt/'+ sessionStorage.getItem(\"userId\"),\r\n        icon:<AiIcons.AiOutlineCalendar/>,\r\n        cName: \"nav-text\",\r\n    },\r\n\r\n    {\r\n        title: 'Edit Patient Details Page',\r\n        path: '/patientPageEdit',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text \",\r\n    },\r\n    {\r\n        title: 'Add Patient Details',\r\n        path: '/addPatDetails',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Upload Patient Bulk',\r\n        path: '/addPats',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Add Doctor',\r\n        path: '/addDoc',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text \",\r\n    },\r\n    {\r\n        title: 'Add Patient',\r\n        path: '/register',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text \",\r\n    },\r\n    {\r\n        title: 'Calendar',\r\n        path: '/cal',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text \",\r\n    },\r\n    \r\n]\r\n\r\nexport const MenuDataDoc = [\r\n    {\r\n        title: 'Add Patient Details',\r\n        path: '/addPatDetails',\r\n        icon:<AiIcons.AiOutlineReconciliation/>,\r\n        cName: \"nav-text\",\r\n    },\r\n    {\r\n        title: 'Appointments',\r\n        path: '/getApt/'+ sessionStorage.getItem(\"userId\"),\r\n        icon:<AiIcons.AiOutlineCalendar/>,\r\n        cName: \"nav-text\",\r\n    }\r\n]","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport { gapi } from 'gapi-script';\r\nimport { ScheduleMeeting } from 'react-schedule-meeting';\r\n\r\n\r\n\r\nexport default class Calendar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: moment().format(\"ddd, Do MMMM, h:mm A\"),\r\n            events: [],\r\n            isBusy: false,\r\n            isEmpty: false,\r\n            docMail: this.props.doc,\r\n            patMail: this.props.pat,\r\n            date: \"\",\r\n            start: \"\",\r\n            end: \"\",\r\n            count: 0,\r\n            stateDoc:true,\r\n            dayAvailability: true,\r\n\r\n            okSlots: [],\r\n\r\n            availableTimeslots: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((id) => {\r\n                return {\r\n                    id,\r\n                    startTime: new Date(new Date(new Date().setDate(new Date().getDate() + id)).setHours(9, 0, 0, 0)),\r\n                    endTime: new Date(new Date(new Date().setDate(new Date().getDate() + id)).setHours(17, 0, 0, 0)),\r\n                };\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    slotsAvailability = () => {\r\n\r\n        for (let id = 0; id <= 9; id++) {\r\n\r\n            var newDate = moment().add(id, 'days')\r\n            // console.log(newDate)\r\n\r\n            this.setState({ date: newDate })\r\n\r\n            this.getEvents(newDate, id)\r\n\r\n            this.handleNewSlots()\r\n        }\r\n        return this.state.availableTimeslots\r\n\r\n    }\r\n    handleNewSlots  ()  {\r\n        this.setState({ availableTimeslots: this.state.okSlots });\r\n        this.setState({ okSlots: [],stateDoc : true });\r\n    }\r\n\r\n    getEvents = (date, id) => {\r\n        // console.log(this.state.docMail)\r\n        var doc = this.state.docMail\r\n\r\n        date = moment(date).format(\"YYYY-MM-DD\")\r\n        // console.log(date)\r\n        let that = this;\r\n        function start() {\r\n            gapi.client\r\n                .init({\r\n                    apiKey: \"AIzaSyDrVkS-ZRFRmTsJvLQTNpshIfEGyr2XhhI\"\r\n                })\r\n                .then(function () {\r\n                    return gapi.client.request({\r\n                        path: `https://www.googleapis.com/calendar/v3/calendars/${doc}/events?maxResults=11&orderBy=updated&timeMin=${moment(date).startOf('day').toISOString()}&timeMax=${moment(date).endOf('day').toISOString()}`\r\n                    });\r\n                })\r\n                .then(\r\n                    response => {\r\n                        // console.log(response);\r\n                        that.setState({ count: that.state.count + 1 })\r\n\r\n                        let events = response.result.items;\r\n                        // console.log(events)\r\n                        let sortedEvents = events.sort(function (a, b) {\r\n                            return (\r\n                                moment(b.start.dateTime).format(\"YYYYMMDD\") -\r\n                                moment(a.start.dateTime).format(\"YYYYMMDD\")\r\n                            );\r\n                        });\r\n                        // console.log(sortedEvents);\r\n\r\n                        if (events.length > 0) {\r\n                            that.setState(\r\n                                {\r\n                                    events: sortedEvents,\r\n\r\n                                }, (count) => {\r\n\r\n                                    that.setSlots(id)\r\n                                }\r\n\r\n                                // that.setStatus();   \r\n                            );\r\n\r\n                        } else {\r\n                            that.setState({\r\n                                isBusy: false,\r\n                                isEmpty: true,\r\n                                isLoading: false\r\n                            }, (count) => {\r\n                                that.freeDay(id)\r\n                            }\r\n                            )\r\n\r\n                        }\r\n                    },\r\n                    function () {\r\n                        let slots = this.state.okSlots\r\n                        this.setState({ okSlots: [] })\r\n                        \r\n                        this.setState({ availableTimeslots: slots })\r\n                        // console.log(slots)\r\n                    },\r\n                    function (reason) {\r\n                        console.log(reason)\r\n                    }\r\n                );\r\n        }\r\n        gapi.load(\"client\", start);\r\n    }\r\n\r\n\r\n    setSlots = (id) => {\r\n\r\n        let slots = this.state.okSlots\r\n\r\n        var events = this.state.events;\r\n        // console.log(events);\r\n\r\n        let busyhours = ['09:00', '21:00']              //bussiness hours 9:00 to 21:00\r\n        // id = moment(this.state.date, 'YYYY-MM-DD').diff(moment().format(\"YYYY-MM-DD\"), 'days')\r\n\r\n        for (var e = 0; e < events.length; e++) {\r\n            var eventItem = events[e];\r\n            // console.log(moment(eventItem.start.dateTime).format(\"hh\"))\r\n            busyhours.push(moment(eventItem.start.dateTime).format(\"HH:mm\"));\r\n            busyhours.push(moment(eventItem.end.dateTime).format(\"HH:mm\"));\r\n        }\r\n\r\n        busyhours = [...new Set(busyhours)];        //remove duplicates\r\n        busyhours.sort();\r\n\r\n        //  \r\n\r\n\r\n        for (let t = 0; t < busyhours.length; t += 2) {\r\n            // console.log(busyhours[t])\r\n            let j = busyhours[t];\r\n            let t1 = j.split(\":\");\r\n            let k = busyhours[t + 1];\r\n            let t2 = k.split(\":\");\r\n\r\n            while (moment(k, \"HH:mm\").diff(moment(j, \"HH:mm\"), 'minutes') == 15) {\r\n                t = t + 1\r\n                j = busyhours[t]\r\n                t1 = j.split(\":\");\r\n\r\n                k = busyhours[t + 1]\r\n                t2 = k.split(\":\");\r\n                // console.log(busyhours[t])\r\n\r\n            }\r\n\r\n            slots.push({\r\n                \"id\": id,\r\n                \"startTime\": new Date(new Date(new Date().setDate(new Date().getDate() + id)).setHours(parseInt(t1[0]), parseInt(t1[1]), 0, 0)),\r\n                \"endTime\": new Date(new Date(new Date().setDate(new Date().getDate() + id)).setHours(parseInt(t2[0]), parseInt(t2[1]), 0, 0)),\r\n            })\r\n\r\n        }\r\n\r\n        // console.log(slots)\r\n        slots.sort(function (a, b) { return a.id - b.id })\r\n\r\n        this.setState({ okSlots: slots })\r\n        // console.log(slots)\r\n\r\n        if (this.state.count == 10) {\r\n            this.setState({ okSlots: [] })\r\n            // console.log(slots)\r\n            this.setState({ availableTimeslots: slots ,count : 0})\r\n\r\n        }\r\n\r\n    }\r\n\r\n    freeDay = (id) => {\r\n\r\n        let slots = this.state.okSlots\r\n\r\n        slots.push({\r\n            \"id\": id,\r\n            \"startTime\": new Date(new Date(new Date().setDate(new Date().getDate() + id)).setHours(9, 0, 0, 0)),\r\n            \"endTime\": new Date(new Date(new Date().setDate(new Date().getDate() + id)).setHours(21, 0, 0, 0)),\r\n        })\r\n\r\n        slots.sort(function (a, b) { return (a.id - b.id) })\r\n\r\n        this.setState({ okSlots: slots })\r\n        // console.log(this.state.count)\r\n        if (this.state.count == 10) {\r\n            this.setState({ okSlots: [] })\r\n            // console.log(slots)\r\n            this.setState({ availableTimeslots: slots , count : 0})\r\n\r\n        }\r\n\r\n    }\r\n\r\n    CreateEvent = (time) => {\r\n        \r\n        console.log(time)\r\n        let start = new Date(time.getTime())\r\n        let end = new Date();\r\n        end.setTime(start.getTime() + (15 * 60000))\r\n        // console.log(start)\r\n        this.onTrigger(start)\r\n        \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.setState({ date: moment().format(\"YYYY-MM-DD\") })\r\n        this.setState({ docMail: this.props.doc })\r\n        // this.slotsAvailability();\r\n\r\n        \r\n        // console.log(this.props.doc)\r\n        // console.log(this.props.pat)\r\n\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        // console.log(nextProps)\r\n        // console.log(prevState)\r\n        if(nextProps.doc != prevState.docMail && nextProps.doc != undefined) {\r\n          return {stateDoc : false, docMail : nextProps.doc};\r\n        }\r\n      }\r\n\r\n    handleChange(e){\r\n        console.log(\"change\")\r\n        var {doctorMail} = e.target;\r\n        this.setState({\r\n          docMail : doctorMail\r\n        },() => this.props.newValue(doctorMail));\r\n      }\r\n\r\n    tick = () => {\r\n        let time = moment().format(\"dddd, Do MMMM, h:mm A\");\r\n        this.setState({\r\n            time: time\r\n        });\r\n    };\r\n\r\n    setStatus = () => {\r\n        let now = moment();\r\n        let events = this.state.events;\r\n        for (var e = 0; e < events.length; e++) {\r\n            var eventItem = events[e];\r\n            if (\r\n                moment(now).isBetween(\r\n                    moment(eventItem.start.dateTime),\r\n                    moment(eventItem.end.dateTime)\r\n                )\r\n            ) {\r\n                this.setState({\r\n                    isBusy: true\r\n                });\r\n                return false;\r\n            } else {\r\n                this.setState({\r\n                    isBusy: false\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onTrigger = (start) => {\r\n        console.log(moment(start,\"dddd, Do MMMM, h:mm A\"))\r\n\r\n        this.props.timeCallback(start);\r\n\r\n    }\r\n\r\n    checkDayAvailability = (day) => {\r\n\r\n        this.setState({ date: moment(day, 'YYYY-MM-DD') })\r\n\r\n        this.slotsAvailability()\r\n    }\r\n\r\n    render() {\r\n\r\n        if(!this.state.stateDoc){\r\n            {this.slotsAvailability()}\r\n        }\r\n        \r\n        // const { time, events } = this.state;\r\n\r\n\r\n        // let eventsList = events.map(function (event) {\r\n        //     return (\r\n        //         <label\r\n        //             className=\"list-group-item\"\r\n        //             // href={event.htmlLink\r\n        //             target=\"_blank\"\r\n        //             key={event.id}\r\n        //         >\r\n        //             {event.summary}{\" \"}\r\n        //             <span className=\"badge\">\r\n        //                 {moment(event.start.dateTime).format(\"h:mm a\")},{\" \"}\r\n        //                 {moment(event.end.dateTime).diff(\r\n        //                     moment(event.start.dateTime),\r\n        //                     \"minutes\"\r\n        //                 )}{\" \"}\r\n        //                 minutes, {moment(event.start.dateTime).format(\"MMMM Do\")}{\" \"}\r\n        //             </span>\r\n        //         </label>\r\n        //     );\r\n        // });\r\n\r\n        // let emptyState = (\r\n        //     <div className=\"empty\">\r\n        //         {/* <img src=\"./image\" alt=\"Welcome\" /> */}\r\n        //         <h6>\r\n        //             No meetings are scheduled for the day. Create one by clicking the\r\n        //             button below.\r\n        //         </h6>\r\n        //     </div>\r\n        // );\r\n\r\n\r\n\r\n        return (\r\n            <div className='form-control container-fluid ' style={{ marginTop: \"70px\", width: \"98%\" }}>\r\n\r\n                <ScheduleMeeting\r\n\r\n                    borderRadius={10}\r\n                    primaryColor=\"green\"\r\n                    eventDurationInMinutes={15}\r\n                    availableTimeslots={this.state.availableTimeslots}\r\n                    \r\n                    onStartTimeSelect={\r\n                        // console.log\r\n                        (startTimeEventEmit) => {\r\n                        // this.handeChange(startTimeEventEmit)\r\n                        // this.handleNewEvent(startTimeEventEmit)\r\n                        // startTimeEventEmit.preventDefault()\r\n                        this.onTrigger(startTimeEventEmit.startTime)\r\n                            \r\n                        // console.log(startTimeEventEmit)\r\n                    }\r\n                }\r\n                // onStartTimeSelect={console.log}\r\n                />\r\n\r\n                {/* <div className=\"form-group\">\r\n                    <h4 style={this.state.isBusy ? { color: \"red\" } : { color: \"green\" }} ><b>{this.state.isBusy ? \"BUSY\" : \"OPEN\"}</b></h4>\r\n                </div>\r\n                <div className=\"upcoming-meetings\">\r\n                    <div className=\"current-time\">{time}</div>\r\n                    <label>Available Slots</label>\r\n                    <div className=\"list-group\">\r\n                        {events.length > 0 && eventsList}\r\n                        {this.state.isEmpty && emptyState}\r\n                    </div>\r\n                    <a\r\n                        className=\"primary-cta\"\r\n                        href=\"https://calendar.google.com/calendar/u/0?cid=c2luZ2FtcGFsbGlha2hpbEBnbWFpbC5jb20\"\r\n                        target=\"_blank\"\r\n                    >\r\n                        +\r\n                    </a>\r\n                </div> */}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Dropdown from 'react-dropdown';\r\nimport moment from \"moment\";\r\nimport 'react-dropdown/style.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Calendar from './Calendar';\r\nimport { docDetails_URL,patPatientId_URL,aptbook_URL} from \"../utils/URL\";\r\n\r\n\r\n\r\n\r\nexport default class Appointment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            doctorsData: [],\r\n\r\n            patient: {},\r\n\r\n            aptData: [],\r\n            availableTimeslots: [],\r\n\r\n            formvalue: {\r\n                aptPatientId: \"\",\r\n                aptDoctorId: \"\",\r\n                aptTime: \"\",\r\n                aptDate: \"\",\r\n                aptStatus: \"Pending\",\r\n            },\r\n            formerrorMessage: {\r\n                name: \"\",\r\n                email: \"\",\r\n                contactNumber: \"\",\r\n                password: \"\"\r\n            },\r\n            formvalid: {\r\n                name: false,\r\n                email: false,\r\n                contactNumber: false,\r\n                password: false,\r\n                buttonActive: false\r\n            },\r\n\r\n            doctorMail: \"\",\r\n            patientMail: sessionStorage.getItem(\"emailId\"),\r\n\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDetails();\r\n    }\r\n\r\n    getDetails = () => {\r\n        let urlD = docDetails_URL;\r\n        axios.get(urlD)\r\n            .then(response => this.setState({ doctorsData: response.data }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n        var urlP = patPatientId_URL + this.props.match.params.patientId;\r\n        console.log(urlP)\r\n\r\n        axios.get(urlP)\r\n            .then(response => this.setState({ patient: response.data }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n    }\r\n\r\n    SubmitAppointment = () => {\r\n        console.log((this.state.formvalue.aptDate).toString())\r\n        if(this.state.formvalue.aptDate != '' && this.state.formvalue.aptTime != ''){\r\n\r\n            let aptData = {\r\n                aptPatient: this.props.match.params.patientId,\r\n                aptDoctor: this.state.formvalue.aptDoctorId,\r\n                aptTime: this.state.formvalue.aptTime,\r\n                aptDate: this.state.formvalue.aptDate,\r\n                aptStatus: \"Pending\"\r\n            }\r\n    \r\n            this.setState({ errorMessage: \"\", successMessage: \"\" });\r\n    \r\n            console.log(aptData);\r\n    \r\n            axios.post(aptbook_URL, aptData)\r\n                .then(response => this.setState({\r\n    \r\n                    aptData: response.data,\r\n                    successMessage: \"Appointment Request Submitted Successfull !!\",\r\n                    errorMessage: \"\",\r\n                    login: true\r\n                })).catch(error => {\r\n                    if (error.response) {\r\n                        this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                    } else {\r\n                        this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                    }\r\n                });\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.SubmitAppointment();\r\n\r\n    }\r\n\r\n    handeChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n        this.setState({ formvalue: { ...formvalue, [name]: value } },\r\n            () => {\r\n                if (event.target.id == \"doc\") {\r\n\r\n                    this.state.doctorsData.map((doctor, key) => {\r\n\r\n                        if (doctor.doctorId == value) {\r\n\r\n                            this.setState({ doctorMail: doctor.emailId })\r\n                        }\r\n\r\n                    })\r\n\r\n                }\r\n            }\r\n        );\r\n        this.validate(event);\r\n\r\n    }\r\n\r\n    handleCallback = (startTime) => {\r\n        console.log(startTime)\r\n        const { formvalue } = this.state;\r\n\r\n        this.setState({ formvalue: { ...formvalue, aptTime: moment(startTime).format('HH:mm'), \r\n                                                    aptDate: moment(startTime).format(\"DD-MM-YYYY\") } },\r\n                                                    ()=>{\r\n                                                        console.log(this.state.formvalue)\r\n                                                        this.SubmitAppointment();\r\n                                                    })\r\n        }\r\n\r\n    calendar = (event) => {\r\n    //     console.log(this.state.doctorMail)\r\n    //  var {doctorMail} = this.state\r\n    //   this.setState({ doctorMail : event.target.value})\r\n\r\n      return (\r\n          <div>\r\n              <Calendar timeCallback={this.handleCallback}  doc={this.state.doctorMail} pat={this.state.patientMail} />\r\n          </div>\r\n      )\r\n  \r\n    }\r\n    \r\n\r\n    validate = event => {\r\n        var fieldName = event.target.name;\r\n        var value = event.target.value;\r\n        var validationerrorMessage = this.state.formerrorMessage;\r\n        var formvalid = this.state.formvalid;\r\n        switch (fieldName) {\r\n            case \"fullName\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.name = \"Enter the field\";\r\n                    formvalid.name = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z]+$/)) {\r\n                    validationerrorMessage.name = \"Please enter your name in valid format\";\r\n                    formvalid.name = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.name = \"\";\r\n                    formvalid.name = true;\r\n                }\r\n                break;\r\n\r\n            case \"email\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.email = \"Enter the field\";\r\n                    formvalid.email = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z0-9]+[@][A-Za-z0-9]+[.][c][o][m]$/)) {\r\n                    validationerrorMessage.email = \"Please enter valid email\";\r\n                    formvalid.email = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.email = \"\";\r\n                    formvalid.email = true;\r\n                }\r\n                break;\r\n\r\n            case \"contactNumber\":\r\n\r\n                if (value === \"\") {\r\n                    validationerrorMessage.contactNumber = \"Enter the field\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else if (!value.match(/^[6-9][0-9]{9}$/)) {\r\n                    validationerrorMessage.contactNumber = \"Please enter valid Indian Number\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.contactNumber = \"\";\r\n                    formvalid.contactNumber = true;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        formvalid.buttonActive = formvalid.name && formvalid.email && formvalid.contactNumber && formvalid.password;\r\n        this.setState({ formerrorMessage: validationerrorMessage, formvalid: formvalid, successMessage: \"\" });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"App-header\">\r\n                {this.props.match.params.patientId ? null : <Redirect to={\"/Register\"} ></Redirect>}\r\n                <div className='card container-fluid' style={{ marginTop: \"70px\" , width:\"70%\"}}>\r\n                    <div className=\"modal-body\" role=\"document\">\r\n                        <h3 className=\"modal-title text-center card-header\" id=\"modalRequestLabel\" style={{ width: \"100%\" }}><b>Make an Appointment</b></h3>\r\n                        <div className=\"modal-content modal-body\">\r\n\r\n                            <div className=\"modal-body\">\r\n                                <form className='form' onSubmit={this.handleSubmit} >\r\n                                    <div className=\"form-group\">\r\n\r\n                                        <input type=\"text\" className=\"form-control hidden\" id=\"appointment_name\" placeholder={this.state.patient.patientName} name=\"aptPatientId\" onChange={this.handeChange} value={this.state.formvalue.aptPatientId} />\r\n                                    </div>\r\n                                    {this.state.formerrorMessage.name ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.name}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group\">\r\n\r\n                                        <input type=\"text\" className=\"form-control\" id=\"appointment_email\" placeholder={this.state.patient.emailId} onChange={this.handeChange} name=\"email\" value={this.state.formvalue.email} />\r\n                                    </div>\r\n                                    {this.state.formerrorMessage.email ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.email}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group \">\r\n                                        <input id=\"contactNumber\" className=\"form-control required\" type=\"tel\" onChange={this.handeChange} placeholder={this.state.patient.contactNumber} name=\"contactNumber\" value={this.state.formvalue.contactNumber}>\r\n                                        </input>\r\n                                    </div>\r\n\r\n                                    {this.state.formerrorMessage.contactNumber ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.contactNumber}</span>\r\n                                    ) : null}\r\n\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"select-wrap \">\r\n                                            <div className='row'>\r\n                                        {/* <label className='form-item' style={{ padding: '0.5rem' }}><h6><b>Choose Doctor : </b></h6></label> */}\r\n                                            <select name=\"aptDoctorId\" id=\"doc\" className=\"form-control col\" onClick={this.handeChange}  placeholder=\"Select Doctor\">\r\n                                            <option disabled selected defaultValue={\"\"} value> ----- Choose Doctor -----  </option>\r\n                                                {this.state.doctorsData.map((doctor, key) => {\r\n                                                        \r\n                                                    return (\r\n                                                        \r\n                                                        <option id={key} value={doctor.doctorId} >{doctor.doctorName}</option>\r\n                                                        \r\n                                                    )\r\n\r\n                                                })}\r\n                                            </select>\r\n                                            </div>\r\n                                            \r\n                                    </div>\r\n\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"form-group\">\r\n                                        <textarea name=\"\" id=\"appointment_message\" className=\"form-control\" cols=\"30\" rows=\"5\" placeholder=\"Message\" name=\"message\" value={this.state.formvalue.message} ></textarea>\r\n                                    </div> */}\r\n                                </form>\r\n                                {this.calendar()}\r\n                                \r\n                                <div className=\"form-group\">\r\n                                        {/* <button type=\"submit\" value=\"\" className=\"btn btn-primary\" onClick={this.handleSubmit}><b>Book Appointment</b></button> */}\r\n\r\n                                        <h6 type=\"text\" className=\"alert-info\" >{this.state.errorMessage}</h6>\r\n                                        <h6 type=\"text\" className=\"alert-success\" >{this.state.successMessage}</h6>\r\n                                    </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","export class Field {\r\n    FieldId;\r\n    FieldType ;\r\n    FieldValue;\r\n    FieldName;\r\n}\r\n\r\nexport const Type = [\r\n    \r\n    \"Text\",\"Number\", \".pdf\", \"Message\", \".jpeg\"\r\n   \r\n]","import React, { Component } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { Modal, ModalDialog } from 'react-bootstrap';\r\n\r\nimport { Type, Field } from './models/FieldDetails';\r\nimport { patSampEdit_URL,patTempEdit_URL,docDetails_URL} from \"../utils/URL\";\r\n\r\n\r\n\r\n\r\nexport default class AdminPatientPageEdit extends Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.data = []\r\n        this.state = {\r\n            field: {\r\n                FieldType: \"\",\r\n                FieldName: \"\",\r\n                FieldValue: \"\"\r\n            },\r\n            patData: []\r\n\r\n        };\r\n\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        // this.state.patdata=PatientData;\r\n\r\n\r\n        // var urlP = \"https://exapp-server.herokuapp.com/adminAPI/sampPatTempEdt\";\r\n\r\n        axios.get(patSampEdit_URL)\r\n            .then(response => this.setState({ patData: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n        this.data = this.state.patData\r\n        console.log(this.state.patdata)\r\n        console.log(this.data)\r\n\r\n        let urlD = docDetails_URL;\r\n        axios.get(urlD)\r\n            .then(response => this.setState({ doctorsData: response.data }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n    }\r\n\r\n\r\n    submitTemplate = () => {\r\n        axios.post(patTempEdit_URL, this.state.patdata)\r\n            .then(response => this.setState({\r\n\r\n                usersData: response.data,\r\n                successMessage: \"Submit Successfull !!\",\r\n                errorMessage: \"\",\r\n                login: true\r\n            })).catch(error => {\r\n                if (error.response) {\r\n                    this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                } else {\r\n                    this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    handleDelete = key => {\r\n        const rows = [...this.state.rows];\r\n        this.setState({ rows: rows.filter(item => item.key !== key) });\r\n    };\r\n\r\n\r\n    handleChange = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { field } = this.state;\r\n        this.setState({ field: { ...field, [name]: value } });\r\n\r\n        console.log(this.state.field)\r\n    }\r\n\r\n    handleShowAddField = () => {\r\n        this.setState({ showFieldEdit: true })\r\n    }\r\n\r\n    handleCloseAddField = () => {\r\n        this.setState({ showFieldEdit: false })\r\n    }\r\n    handleAddField = () => {\r\n\r\n        const { patdata } = this.state;\r\n        const newData = {\r\n            fieldId: \"1\",\r\n            fieldName: \"Name\",\r\n            fieldType: \"9999999999\",\r\n            fieldValue: \"@gmail.com\"\r\n        };\r\n\r\n        this.data.push(newData);\r\n\r\n        this.setState({\r\n            patData: [newData, ...patdata],\r\n            \r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"App-header\"  >\r\n                {/* {sessionStorage.getItem(\"userId\") ? null : <Redirect to={\"/\"} ></Redirect> } */}\r\n                <div >\r\n                    <div className='card container-fluid' style={{ marginTop: \"70px\" }}>\r\n                        <div className='' style={{ width: \"100%\" }}>\r\n                            <label className='card-header text-center' style={{ width: \"100%\" }}><b>Patients Details Page</b></label>\r\n                        </div>\r\n\r\n                        <div >\r\n\r\n                            <ul className='card-body '>\r\n\r\n\r\n                            {this.state.patData.map((item, index) => {\r\n                                        return (\r\n                                            <div className='' key={index}>\r\n                                               \r\n                                            <div key={index} className=\"form-control-sm row\" style={{position:\"left\"}} >\r\n\r\n                                                <label className='col' style={{padding : '0.5rem'}}>{item.fieldName}</label>\r\n                                                <input id={item.fieldId}  \r\n                                                type={item.fieldType} \r\n                                                onChange={this.handeChange} \r\n                                                placeholder={item.fieldName} \r\n                                                name={item.fieldName} \r\n                                                value={item.fieldValue}\r\n                                                \r\n                                                disabled = {sessionStorage.getItem(\"userId\") < 10 ? false : true }\r\n                                                >\r\n                                                </input>\r\n                                            </div>\r\n                                            </div>\r\n                                            \r\n                                        )\r\n                                    })}\r\n\r\n                                <button\r\n                                    type=\"\"\r\n                                    className=\"btn btn-info form-group\"\r\n                                    onClick={this.handleShowAddField}>\r\n                                    <b>Add Field</b>\r\n                                </button>\r\n\r\n                                <button\r\n                                    type=\"\"\r\n                                    className=\"btn btn-success form-group\"\r\n                                    onClick={this.submitTemplate}\r\n                                    style={{ width: \"100%\" }}>\r\n                                    <b>Submit</b>\r\n                                </button>\r\n                            </ul>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className='ft-modal' >\r\n                            <Modal show={this.state.showFieldEdit} onHide={this.handleCloseAddField}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title className='text-center'>\r\n                                        <b>Field Details</b>\r\n                                    </Modal.Title>\r\n                                </Modal.Header>\r\n\r\n                                <Modal.Body >\r\n\r\n                                    <div className='' style={{ backgroundColor: \"#0000 \", padding: \"0.5rem\" }}>\r\n\r\n                                        <React.Fragment>\r\n                                            <form>\r\n                                                <div className=\"form-control\" >\r\n\r\n\r\n                                                    <label ><span><h6>Field Name</h6></span></label>\r\n                                                    <input type=\"text\"\r\n                                                        className=\"form-control form-item\"\r\n                                                        style={{ padding: \"1rem\" }}\r\n                                                        id=\"FieldName\"\r\n                                                        placeholder=\"Field Name\"\r\n                                                        name=\"FieldName\" onChange={this.handleChange}\r\n                                                        value={this.state.field.FieldName} />\r\n\r\n                                                    <label ><span><h6>Field Value</h6></span></label>\r\n                                                    <input type=\"text\"\r\n                                                        className=\"form-control form-item\"\r\n                                                        style={{ padding: \"1rem\" }}\r\n                                                        id=\"FieldValue\"\r\n                                                        placeholder=\"Field Value\"\r\n                                                        name=\"FieldValue\" onChange={this.handleChange}\r\n                                                        value={this.state.field.FieldValue} />\r\n\r\n                                                    <div className=\"\">\r\n                                                        <div className=\"select-wrap\">\r\n                                                            <label ><span><h6>Choose Field Type</h6></span></label>\r\n                                                            <select name=\"FieldType\" id=\"\" className=\"form-control\" onClick={this.handleChange} placeholder=\"Select Type\">\r\n                                                                {Type.map((type, key) => {\r\n                                                                    return (\r\n                                                                        <option value={type}>{type}</option>\r\n                                                                    )\r\n\r\n                                                                })}\r\n                                                            </select>\r\n                                                        </div>\r\n\r\n\r\n                                                    </div>\r\n                                                    <button\r\n                                                        type=\"submit\"\r\n                                                        className=\"btn btn-success col\"\r\n                                                        onClick={this.handleAddField}>\r\n                                                        <b>Add</b>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </form>\r\n\r\n                                        </React.Fragment>\r\n\r\n                                    </div>\r\n\r\n                                </Modal.Body>\r\n                            </Modal>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Button } from 'react-bootstrap'\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { FaSortDown } from 'react-icons/fa';\r\nimport { IoIosArrowDropdownCircle } from 'react-icons/io';\r\nimport { DiGoogleDrive } from 'react-icons/di';\r\nimport Drive from './Drive';\r\nimport * as FcIcons from \"react-icons/fc\"\r\nimport { images } from '../utils/ImagesData';\r\nimport Upload from './GDrive';\r\nimport GoogleDocsViewer from 'react-google-docs-viewer';\r\nimport DocViewer, { DocViewerRenderers } from \"react-doc-viewer\";\r\nimport { DocumentViewer } from 'react-documents';\r\nimport {patDataUpdate_URL,patPatientId_URL,patPatData_URL,patFolders_URL} from \"../utils/URL\";\r\nconst docs = [\r\n    { uri: \"https://docs.google.com/document/d/1cCUPT72X_GmpU40kxxuQ79B-4rxgnSPWXtnpu00q1Ns/edit?usp=sharing\" }\r\n    // Local File\r\n];\r\n// import { Upload } from 'antd';\r\n\r\n\r\n\r\nexport default class PatientDetails extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            pageValue: {\r\n                patData: []\r\n            },\r\n            pat: \"\",\r\n            data: [],\r\n\r\n            hide: true,\r\n            images: [],\r\n            PatName: \"\",\r\n            patData: \"\",\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false,\r\n            showFieldEdit: false,\r\n\r\n            togglePrescription: false,\r\n            toggleImages: false,\r\n            toggleBills: false,\r\n\r\n            doctorsData: [],\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false\r\n        };\r\n    }\r\n\r\n    callbackImages = (docs) => {\r\n\r\n        console.log(docs)\r\n        const { data } = this.state;\r\n\r\n        let newList = this.state.data.map((item) => {\r\n\r\n            if (item.fieldName == \"IMAGES\") {\r\n                const updatedItem = {\r\n                    ...item,\r\n                    fieldValue: docs.map((doc) => item.fieldValue.concat(',', doc.url)).toString()\r\n                };\r\n                console.log('here')\r\n\r\n                return updatedItem;\r\n            }\r\n\r\n            return item;\r\n        });\r\n\r\n        this.setState({ data: newList });\r\n\r\n        console.log(this.state.data)\r\n\r\n    }\r\n\r\n    callbackPrescriptions = (docs) => {\r\n\r\n        console.log(docs)\r\n        const { data } = this.state;\r\n\r\n        let newList = this.state.data.map((item) => {\r\n\r\n            if (item.fieldName == \"PRESCRIPTIONS\") {\r\n                const updatedItem = {\r\n                    ...item,\r\n                    fieldValue: docs.map((doc) => item.fieldValue.concat(',', doc.url)).toString()\r\n                };\r\n                console.log('here')\r\n\r\n                return updatedItem;\r\n            }\r\n\r\n            return item;\r\n        });\r\n\r\n        this.setState({ data: newList });\r\n\r\n        console.log(this.state.data)\r\n\r\n    }\r\n\r\n    callbackBills = (docs) => {\r\n\r\n        console.log(docs)\r\n        const { data } = this.state;\r\n\r\n        let newList = this.state.data.map((item) => {\r\n\r\n            if (item.fieldName == \"BILLS\") {\r\n                const updatedItem = {\r\n                    ...item,\r\n                    fieldValue: docs.map((doc) => item.fieldValue.concat(',', doc.url)).toString()\r\n                };\r\n                console.log('here')\r\n\r\n                return updatedItem;\r\n            }\r\n\r\n            return item;\r\n        });\r\n\r\n        this.setState({ data: newList });\r\n\r\n        console.log(this.state.data)\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getDetails();\r\n        { (sessionStorage.getItem(\"userId\") <= 10) ? this.writePermission() : this.readPermission() }\r\n\r\n\r\n    }\r\n\r\n    writePermission = () => {\r\n        this.setState({ hide: false })\r\n    }\r\n\r\n    readPermission = () => {\r\n        this.setState({ hide: true })\r\n    }\r\n\r\n    submitDetails = () => {\r\n        const { data } = this.state;\r\n\r\n        const url = patDataUpdate_URL + this.props.match.params.patientId;\r\n        axios.put(url, data)\r\n            .then(response => this.setState({\r\n                successMessage: \"Submit Successfull !!\",\r\n                errorMessage: \"\"\r\n            })).catch(error => {\r\n                if (error.response) {\r\n                    this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                } else {\r\n                    this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n\r\n    getDetails = () => {\r\n        var url = patPatientId_URL + this.props.match.params.patientId;\r\n\r\n        axios.get(url)\r\n            .then(response => this.setState({ pat: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"Invalid Patient ID\" }) })\r\n\r\n        var url = patPatData_URL + this.props.match.params.patientId;\r\n\r\n        axios.get(url)\r\n            .then(response => this.setState({ data: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"Invalid Patient ID\" }) })\r\n\r\n        var url = patFolders_URL + this.props.match.params.patientId;\r\n\r\n        axios.get(url)\r\n            .then(response => this.setState({ patData: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"Invalid Patient ID\" }) })\r\n        console.log(this.state.patData)\r\n\r\n\r\n    }\r\n\r\n\r\n    handeChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const id = event.target.id;\r\n        const { data } = this.state;\r\n        //  this.setState({ data: { ...formvalue, [name]: value } });\r\n\r\n\r\n        let newList = this.state.data.map((item, index) => {\r\n\r\n            if (item.fieldId == id) {\r\n                const updatedItem = {\r\n                    ...item,\r\n                    fieldValue: value,\r\n                };\r\n                // console.log('here')\r\n\r\n                return updatedItem;\r\n            }\r\n\r\n            return item;\r\n        });\r\n\r\n        this.setState({ data: newList });\r\n\r\n\r\n    }\r\n\r\n    togglePrescriptions = () => {\r\n        this.setState({ togglePrescription: !this.state.togglePrescription })\r\n    }\r\n\r\n    toggleImages = () => {\r\n        this.setState({ toggleImages: !this.state.toggleImages })\r\n    }\r\n\r\n    toggleBills = () => {\r\n        this.setState({ toggleBills: !this.state.toggleBills })\r\n    }\r\n\r\n\r\n    ImageGallery = (item) => {\r\n        let gallery = []\r\n\r\n        item.fieldValue.split(',').map((urls, index) => {\r\n\r\n            gallery.push(\r\n                {\r\n                    src: \"https://drive.google.com/uc?export=view&id=\" + urls.match(/[-\\w]{25,}/),\r\n                    width: 10,\r\n                    height: 7\r\n                }\r\n            )\r\n            console.log(gallery);\r\n\r\n        })\r\n\r\n        // // return gallery;\r\n        // // this.setState({images{...images, images : gallery}}\r\n        // return (\r\n        //     <div >\r\n        //         {/* <img src={\"https://drive.google.com/uc?export=view&id=\" + urls.match(/[-\\w]{25,}/)} width=\"200px\" height=\"200px\" alt=\"cannot\" /> */}\r\n        //         <Gallery photos={gallery} />\r\n        //     </ div>\r\n        // )\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-header\"  >\r\n\r\n                <div className='container-fluid' style={{ marginTop: \"70px\", width: \"100%\", backgroundColor: \"rgba(255, 255, 255,0.8)\" }}>\r\n                    <label className='text-center card-header' style={{ width: \"100%\" }}><b>{this.state.pat.patientName} Details </b></label>\r\n                    <div className='card' style={{ width: \"100%\", marginTop: \"5px\", textAlign: \"left\", alignItems: \"baseline\", Color: \"rgba(255, 255, 255,1)\" }}>\r\n                        <div className='form-control'>\r\n                            <h6 ><span style={{ fontWeight: 400, marginLeft: \"5px\" }}><b>Personal Information : </b></span></h6>\r\n                            <div class=\"u-expanded-width u-form u-form-1\">\r\n                                <form action=\"#\" method=\"POST\" class=\"u-clearfix u-form-spacing-17 u-form-vertical u-inner-form\" source=\"email\" name=\"form\" style={{ padding: \"0px\" }}>\r\n                                    <div class=\"u-form-group u-form-name u-label-left\">\r\n                                        <label for=\"name-4c18\" class=\"u-label\">e-xult ID :</label>\r\n                                        <label type=\"text\" placeholder=\"Enter your Name\" id=\"name-4c18\" name=\"name\" required=\"\">{this.state.pat.patientId}</label>\r\n                                    </div>\r\n                                    <div class=\"u-form-group u-form-name u-label-left\">\r\n                                        <label for=\"name-4c18\" class=\"u-label\">Name  :</label>\r\n                                        <label type=\"text\" placeholder=\"Enter your Name\" id=\"name-4c18\" name=\"name\" required=\"\">{this.state.pat.patientName}</label>\r\n                                    </div>\r\n                                    <div class=\"u-form-email u-form-group u-label-left\">\r\n                                        <label for=\"email-4c18\" class=\"u-label\">Email  :</label>\r\n                                        <label type=\"email\" placeholder=\"Enter a valid email address\" id=\"email-4c18\" name=\"email\"  >{this.state.pat.emailId}</label>\r\n                                    </div>\r\n                                    <div class=\"u-form-group u-label-left u-form-group-3\">\r\n                                        <label for=\"text-717e\" class=\"u-label\">Age :</label>\r\n                                        <label type=\"text\" placeholder=\"\" id=\"text-717e\" name=\"age\" ></label>\r\n                                    </div>\r\n                                    <div class=\"u-form-group u-label-left u-form-group-4\">\r\n                                        <label for=\"text-f906\" class=\"u-label\">Sex :</label>\r\n                                        <label type=\"text\" placeholder=\"\" id=\"text-f906\" name=\"sex\" ></label>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='card' style={{ width: \"100%\", marginTop: \"5px\", textAlign: \"left\", alignItems: \"baseline\", Color: \"rgba(255, 255, 255,1)\" }}>\r\n                        <div className='form-control' style={{ width: \"100%\" }}>\r\n                            <h6 ><span style={{ fontWeight: 400, marginLeft: \"5px\" }}><b>Case Details : </b></span></h6>\r\n                            <div style={{ width: \"50%\", marginLeft: \"5px\", textAlign: \"left\" }}>\r\n                                <form  >\r\n                                    {this.state.data.map((item, index) => {\r\n                                        return (\r\n                                            <div className='' key={index}>\r\n\r\n                                                <div>\r\n                                                    {item.fieldType == \"text\" || \"Number\" || \"Message\" ?\r\n\r\n                                                        <div key={index} className=\"col-auto\" style={{ alignItems: \"flex-start\" }} >\r\n                                                            <label className='' style={{ padding: '0.5rem' }}><b>{item.fieldName}</b></label>\r\n                                                            <input id={item.fieldId}\r\n                                                                className=\"\"\r\n                                                                type={item.fieldType}\r\n                                                                onChange={this.handeChange}\r\n                                                                placeholder={item.fieldValue}\r\n                                                                name={item.fieldName}\r\n                                                                value={item.fieldValue}\r\n\r\n                                                                disabled={this.state.hide}\r\n                                                                style={{ padding: \"5px 20px\" }}\r\n                                                            >\r\n                                                            </input>\r\n                                                        </div>\r\n\r\n                                                        : null}\r\n\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n\r\n                                    })}\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='card container-fluid' style={{ width: \"100%\", height: \"800px\", marginTop: \"3px\" }}>\r\n\r\n                        <h4 ><span style={{ fontWeight: 400, marginLeft: \"0px\" }}><b>Case Sheet  </b></span></h4>\r\n                        <DocumentViewer\r\n                            url={this.state.patData.pres_data_id}\r\n                            viewer=\"url\"\r\n                            style={{ width: \"70%\", height: \"800px\", borderRadius: \"10px\" }}\r\n                        >\r\n                        </DocumentViewer>\r\n                    </div>\r\n                    <br></br>\r\n\r\n                    <div className='container-fluid card' style={{ width: \"100%\", marginTop: '3px', minHeight: \"40px\", backgroundColor: '#000', textAlign: \"left\" }}>\r\n                        \r\n                                <Button className=\"row\" type=\"button\" name=\"prescription\" onClick={this.togglePrescriptions} style={{ width: '100%', height: '40px', padding: '3px' ,backgroundColor:'black'}}>\r\n                                    <div className='row'>\r\n                                    <h6 className='col'><span style={{ fontWeight: 400, color: \"white\" }}><b>Prescriptions</b> </span></h6>\r\n                                    <IoIosArrowDropdownCircle className='col-auto' size={\"30px\"}></IoIosArrowDropdownCircle>\r\n                                        </div>\r\n                                    \r\n                                    </Button>\r\n                           \r\n                        <Collapse in={this.state.togglePrescription}>\r\n\r\n\r\n                            <div className='container-fluid' style={{ backgroundColor: 'white', width: '100%', borderRadius: \"5px\" }}>\r\n                                <Drive className=\"col\" parentFolder={this.state.patData.pres_data_id} parentCallback={this.callbackPrescriptions} style={{ float: 'right' }} />\r\n                                {this.state.data.map((item, index) => {\r\n                                        return (\r\n                                            <div className='' key={index}>\r\n                                                \r\n                                                    {item.fieldName == \"PRESCRIPTIONS\" ?\r\n\r\n                                                            <ul className='' style={{alignItems:'flex-start',float:'left'}}>\r\n                                                                {item.fieldValue.split(',').map((urls, index) => {\r\n                                                                    return (\r\n                                                                        <li className=\"\">\r\n                                                                            <a href={urls} className=\"\"><h6>{urls}</h6></a>\r\n                                                                        </li>\r\n\r\n                                                                    )\r\n\r\n                                                                })}\r\n                                                            </ul>\r\n                                                        : null}\r\n                                                \r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                            </div>\r\n\r\n                        </Collapse>\r\n\r\n                    </div>\r\n\r\n                    \r\n\r\n                    <div className='container-fluid card' style={{ width: \"100%\", marginTop: '3px', minHeight: \"40px\", backgroundColor: '#000', textAlign: \"left\" }}>\r\n\r\n                    <Button className=\"row\" type=\"button\" name=\"prescription\" onClick={this.toggleImages} style={{ width: '100%', height: '40px', padding: '3px' ,backgroundColor:'black'}}>\r\n                                    <div className='row'>\r\n                                    <h6 className='col'><span style={{ fontWeight: 400, color: \"white\" }}><b>Images</b> </span></h6>\r\n                                    <IoIosArrowDropdownCircle className='col-auto' size={\"30px\"}></IoIosArrowDropdownCircle>\r\n                                        </div>\r\n                                    \r\n                                    </Button> \r\n                        \r\n                          \r\n                            \r\n                            <Collapse in={this.state.toggleImages}>\r\n                                <div className='container-fluid' style={{ backgroundColor: 'white', width: '100%', borderRadius: \"5px\" }}>\r\n                                <Drive className=\"\" parentFolder={this.state.patData.img_data_id} parentCallback={this.callbackImages} />\r\n                                    {this.state.data.map((item, index) => {\r\n                                        return (\r\n                                            <div className='' key={index}>\r\n                                                \r\n                                                    {item.fieldType == \"IMAGES\" ?\r\n\r\n                                                            <ul className='' style={{alignItems:'flex-start',float:'left'}}>\r\n                                                                {item.fieldValue.split(',').map((urls, index) => {\r\n                                                                    return (\r\n                                                                        <li className=\"\">\r\n                                                                            <a href={urls} className=\"\"><h6>{urls}</h6></a>\r\n                                                                        </li>\r\n\r\n                                                                    )\r\n\r\n                                                                })}\r\n                                                            </ul>\r\n                                                        : null}\r\n                                                \r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </Collapse>\r\n                        \r\n\r\n                    </div>\r\n\r\n                    <div className='container-fluid card' style={{ width: \"100%\", marginTop: '3px', minHeight: \"40px\", backgroundColor: '#000', textAlign: \"left\" }}>\r\n                        \r\n                                <Button className=\"row\" type=\"button\" name=\"prescription\" onClick={this.toggleBills} style={{ width: '100%', height: '40px', padding: '3px' ,backgroundColor:'black'}}>\r\n                                    <div className='row'>\r\n                                    <h6 className='col'><span style={{ fontWeight: 400, color: \"white\" }}><b>Bills</b> </span></h6>\r\n                                    <IoIosArrowDropdownCircle className='col-auto' size={\"30px\"}></IoIosArrowDropdownCircle>\r\n                                        </div>\r\n                                    \r\n                                    </Button>\r\n                           \r\n                        <Collapse in={this.state.toggleBills}>\r\n\r\n\r\n                            <div className='container-fluid' style={{ backgroundColor: 'white', width: '100%', borderRadius: \"5px\" }}>\r\n                                <Drive className=\"col\" parentFolder={this.state.patData.bills_data_id} parentCallback={this.callbackBills} style={{ float: 'right' }} />\r\n                                {this.state.data.map((item, index) => {\r\n                                        return (\r\n                                            <div className='' key={index}>\r\n                                                \r\n                                                    {item.fieldType == \"BILLS\" ?\r\n\r\n                                                            <ul className='' style={{alignItems:'flex-start',float:'left'}}>\r\n                                                                {item.fieldValue.split(',').map((urls, index) => {\r\n                                                                    return (\r\n                                                                        <li className=\"\">\r\n                                                                            <a href={urls} className=\"link\"><h6>{urls}</h6></a>\r\n                                                                        </li>\r\n\r\n                                                                    )\r\n\r\n                                                                })}\r\n                                                            </ul>\r\n                                                        : null}\r\n                                                \r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                            </div>\r\n\r\n                        </Collapse>\r\n\r\n                    </div>\r\n\r\n                   <br></br>\r\n\r\n\r\n                    <button\r\n                        type=\"\"\r\n                        className=\"btn btn-success form-group\"\r\n                        onClick={this.submitDetails}\r\n                        style={{ width: \"100%\", justifyContent: \"center\" }}>\r\n                        <b>Submit</b>\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\n\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\nimport { FaArrowAltCircleDown, FaArrowDown, FaCartArrowDown, FaDocker, FaSearch, FaSortDown } from 'react-icons/fa';\r\n\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { docpatData_URL} from \"../utils/URL\";\r\n\r\n\r\n\r\nclass DocUpdatePatData extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            patData: [],\r\n            entry: \"\",\r\n            patDataCopy: [],\r\n\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false,\r\n            showFieldEdit: false,\r\n\r\n            doctorsData: [],\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDetails();\r\n        console.log(\"here\");\r\n    }\r\n\r\n    getDetails = () => {\r\n        const url = docpatData_URL;\r\n        axios.get(url)\r\n            .then(response => this.setState({ patData: response.data, patDataCopy: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n        console.log(this.state.patData)\r\n    }\r\n\r\n\r\n\r\n    handeChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n        this.setState({ formvalue: { ...formvalue, [name]: value } });\r\n        this.validate(event);\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        const word = event.target.value;\r\n        console.log(word)\r\n        if (word != '') {\r\n            const filtered = this.state.patDataCopy.filter(entry => Object.values(entry).some(val => typeof val === \"string\" && val.toLocaleLowerCase().includes(word.toLocaleLowerCase())));\r\n\r\n            console.log(filtered)\r\n            this.setState({ patData: filtered })\r\n        } else {\r\n            this.setState({ patData: this.state.patDataCopy })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className='App-header' >\r\n\r\n\r\n                <div className='card container-fluid' style={{ marginTop: \"75px\", width: \"100%\" }}>\r\n                    <label className='text-center card-header' style={{ width: \"100%\" }}><b>Patients Details</b></label>\r\n                    <div className='right form-control col-auto' style={{}}>\r\n\r\n\r\n                        <input className='search' style={{ padding: '0.5px', float: \"right\" }} placeholder='   Search   ' name=\"search\" onChange={this.handleSearch}></input>\r\n                        <FaSearch className='' style={{ padding: '1px', float: \"right\", marginTop: \"5px\", marginRight: \"5px\" }}></FaSearch>\r\n                    </div>\r\n\r\n                    <Table className='table form-control ' style={{ width: \"100%\" }}>\r\n                        <Tr>\r\n                            <Th className='thead th column-collapse'>#ID</Th>\r\n                            <Th className='thead th  col-3'>Patient Name</Th>\r\n                            <Th className='thead th col-3'>Contact Number</Th>\r\n                            <Th className='thead th col-4'>Email id</Th>\r\n                            <Th className='thead th col-2'>Details</Th>\r\n                            {sessionStorage.getItem(\"userId\") == 1 ?\r\n                                <Th className='thead th col-2'>Appointment</Th>\r\n                                : null}\r\n\r\n                        </Tr>\r\n                        {this.state.patData.map((val, key) => {\r\n                            return (\r\n                                <Tbody>\r\n                                    {val.patientId >100 ? \r\n                                     <Tr key={key}>\r\n                                     {/* <Td>\r\n                                             <button className=\"btn br-button btn-info\" type=\"button\" data-toggle=\"collapse\" data-target=\"collapse-1-4-4527\"><FaSortDown></FaSortDown>\r\n                                             </button>\r\n                                         </Td> */}\r\n\r\n                                     <Td className='tdata td col-xl-auto'><Link>{val.patientId}</Link></Td>\r\n                                     <Td className='tdata td col-xl-auto'>{val.patientName}</Td>\r\n                                     <Td className='tdata  td'>{val.contactNumber}</Td>\r\n                                     <Td className='tdata  td'>{val.emailId}</Td>\r\n                                     <Td className='tdata  td'>\r\n                                         <ButtonToolbar className='tdata  td'>\r\n                                             <Link to={\"/details/\" + val.patientId } >\r\n                                                 <button type=\"submit\" className='btn btn-primary tdata td'>Details ... </button>\r\n\r\n                                             </Link>\r\n                                         </ButtonToolbar>\r\n\r\n                                     </Td>\r\n                                     {(sessionStorage.getItem(\"userId\") == 1) ?\r\n                                         <Td className='tdata  td'>\r\n                                             <ButtonToolbar className='tdata  td'>\r\n                                                 <Link to={\"/appointment/\" + val.patientId} >\r\n\r\n                                                     <button type=\"success\" className='btn btn-warning tdata td' >Book Appointment </button>\r\n                                                 </Link>\r\n                                             </ButtonToolbar>\r\n\r\n                                         </Td>   \r\n                                         : null}\r\n                                 </Tr>\r\n                                    : null}\r\n                                   \r\n                                </Tbody>\r\n\r\n                            )\r\n                        })}\r\n                        <tr>\r\n\r\n                        </tr>\r\n                    </Table>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default DocUpdatePatData;\r\n","import React, { Component } from 'react';\r\nimport \"../css/Contact_page/contact.css\"\r\n\r\n\r\n\r\nexport default class Details extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-header\"  >\r\n\r\n\r\n\r\n                <div className='card container-fluid' style={{ marginTop: \"70px\"}}>\r\n\r\n\r\n                    <section className=\"contact_us\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-10 offset-md-1\">\r\n                                    <div className=\"contact_inner\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-10\">\r\n                                                <div className=\"contact_form_inner\">\r\n                                                    <div className=\"contact_field\">\r\n                                                        <h3>Contatc Us</h3>\r\n                                                        <p>Feel Free to contact us any time. We will get back to you as soon as we can!.</p>\r\n                                                        <input type=\"text\" className=\"form-control form-group\" placeholder=\"Name\" />\r\n                                                        <input type=\"text\" className=\"form-control form-group\" placeholder=\"Email\" />\r\n                                                        <textarea className=\"form-control form-group\" placeholder=\"Message\"></textarea>\r\n                                                        <button className=\"contact_form_submit\">Send</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <div className=\"right_conatct_social_icon d-flex align-items-end\">\r\n                                                    <div className=\"socil_item_inner d-flex\">\r\n                                                        <li><a href=\"#\"><i className=\"fab fa-facebook-square\"></i></a></li>\r\n                                                        <li><a href=\"#\"><i className=\"fab fa-instagram\"></i></a></li>\r\n                                                        <li><a href=\"#\"><i className=\"fab fa-twitter\"></i></a></li>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"contact_info_sec\">\r\n                                            <h4 style={{ color: \"#fff\" }}>Contact Info</h4>\r\n                                            <div className=\"d-flex info_single align-items-center\">\r\n                                                <i className=\"fas fa-headset\"></i>\r\n                                                <span style={{ color: \"#fff\" }}>+91 70956 78678</span>\r\n                                            </div>\r\n                                            <div className=\"d-flex info_single align-items-center\">\r\n                                                <i className=\"fas fa-envelope-open-text\"></i>\r\n                                                <span style={{ color: \"#fff\" }}>exultclinic@gmail.com</span>\r\n                                            </div>\r\n                                            <div className=\"d-flex info_single align-items-center\">\r\n                                                <i className=\"fas fa-map-marked-alt\"></i>\r\n                                                <span style={{ color: \"#fff\" }}>Dr Jaya’s Exult Aesthetic Clinic 10-2-B2 Siripuram opp Dutt Island building lane besides Eleven Restaurant</span>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <section className=\"map_sec\" style={{ width: \"100%\" }}>\r\n                            <div className=\"container\" >\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-10 offset-md-1\">\r\n                                        <div className=\"map_inner\">\r\n                                            <h4><b>Find Us on Google Map</b></h4>\r\n                                            <div className=\"map_bind\" >\r\n                                                <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3800.4412291774997!2d83.3154841148811!3d17.723837387877783!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3a394341a885adb3%3A0x20c0678c58fa9b72!2sDr%20Jaya&#39;s%20Exult%20Aesthetic%20Clinic!5e0!3m2!1sen!2sin!4v1655569630315!5m2!1sen!2sin\" width=\"100%\" height=\"450\" frameborder=\"0\" style={{ border: \"0\" }} allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </section>\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/hair.2f33fd67.jpg\";","export default __webpack_public_path__ + \"static/media/face.fa85b3b5.jpg\";","export default __webpack_public_path__ + \"static/media/skin.aa0d3bfb.jpg\";","export default __webpack_public_path__ + \"static/media/body.309285e5.jpg\";","export default __webpack_public_path__ + \"static/media/laser.4fce08cd.jpg\";","import React, { Component } from 'react';\r\nimport \"../css/Services_page/services.css\"\r\nimport hairServiceImage from \"../utils/services/hair.jpg\"\r\nimport faceServiceImage from \"../utils/services/face.jpg\"\r\nimport bodyServiceImage from \"../utils/services/body.jpg\"\r\nimport laserServiceImage from \"../utils/services/laser.jpg\"\r\nimport skinServiceImage from \"../utils/services/skin.jpg\"\r\nimport surgeriesServiceImage from \"../utils/services/surgeries.jpg\"\r\n\r\n\r\n\r\n\r\nexport default class Details extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-header\"  >\r\n\r\n                <div className=\"container-fluid services-container\" style={{ marginTop: \"70px\", width: \"100%\" }}    >\r\n\r\n                    <div className='' id=\"services-top-row\">\r\n\r\n                        <div className=\"services-glass-card\">\r\n\r\n                            <div class=\"service-card-info\">\r\n\r\n                                <i class=\"bi bi-key-fill\"></i>\r\n\r\n                                <h3>\r\n                                    <b>Hair</b>\r\n                                </h3>\r\n                                <img src={hairServiceImage} alt=\"img09\" class=\"img-fluid\" />\r\n                                <figure class=\"effect-ming\">\r\n                                    <p>\r\n                                        <ul>\r\n                                            <li>Hair Transplantation</li>\r\n                                            <li>FUT</li>\r\n                                            <li>Hair Loss Management</li>\r\n                                            <li>Hair Vitamins</li>\r\n                                            <li>Hair Mesotherapy & PRP</li>\r\n                                            <li>Scalp Micro Pigme</li>\r\n                                        </ul>\r\n                                    </p>\r\n                                    <figcaption>\r\n                                        {/* <p>VIEW PAGE</p>\r\n                                                <a href=\"/security/access-control\" rel=\"noopener\">View more</a> */}\r\n                                    </figcaption>\r\n                                </figure>\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"services-glass-card\">\r\n\r\n                            <div class=\"service-card-info\">\r\n\r\n                                <i class=\"bi bi-key-fill\"></i>\r\n\r\n                                <h3>\r\n                                    <b>Face</b>\r\n                                </h3>\r\n                                <img src={faceServiceImage} alt=\"img09\" class=\"img-fluid\" />\r\n\r\n                                <figure class=\"effect-ming\">\r\n\r\n                                    <p>\r\n                                        <ul>\r\n                                            <li>Face lift</li>\r\n                                            <li>Dark Circles Management</li>\r\n                                            <li>Nose Reshaping</li>\r\n                                            <li>Dimple Creation</li>\r\n                                            <li>Lip Fillers</li>\r\n                                            <li>Neck Lift, Folds Correction</li>\r\n                                        </ul>\r\n                                    </p>\r\n                                    <figcaption>\r\n                                        {/* <p>VIEW PAGE</p>\r\n                                                <a href=\"/security/access-control\" rel=\"noopener\">View more</a> */}\r\n                                    </figcaption>\r\n                                </figure>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"services-glass-card\">\r\n\r\n                            <div class=\"service-card-info\">\r\n\r\n                                <i class=\"bi bi-key-fill\"></i>\r\n\r\n                                <h3>\r\n                                    <b>Skin Rejuvenation</b>\r\n                                </h3>\r\n                                <img src={skinServiceImage} alt=\"img09\" class=\"img-fluid\" />\r\n\r\n                                <figure class=\"effect-ming\">\r\n\r\n                                    <p>\r\n                                        <ul>\r\n                                            <li>Chemical peels</li>\r\n                                            <li>Medi facials</li>\r\n                                            <li>Face lift</li>\r\n                                            <li>Laser facials</li>\r\n                                            <li>Acne and Acne Scars</li>\r\n                                            <li>Pigmentation Management</li>\r\n                                        </ul>\r\n                                    </p>\r\n                                    <figcaption>\r\n                                        {/* <p>VIEW PAGE</p>\r\n                                                <a href=\"/security/access-control\" rel=\"noopener\">View more</a> */}\r\n\r\n                                    </figcaption>\r\n\r\n                                </figure>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div id=\"services-bottom-row\">\r\n                        <div className=\"services-glass-card\">\r\n\r\n                            <div class=\"service-card-info\">\r\n\r\n                                <i class=\"bi bi-key-fill\"></i>\r\n\r\n                                <h3>\r\n                                    <b>Hair</b>\r\n                                </h3>\r\n\r\n                                <figure class=\"effect-ming\">\r\n                                    <img src={hairServiceImage} alt=\"img09\" class=\"img-fluid\" />\r\n                                    <figcaption>\r\n                                        {/* <p>VIEW PAGE</p>\r\n                <a href=\"/security/access-control\" rel=\"noopener\">View more</a> */}\r\n                                    </figcaption>\r\n                                </figure>\r\n\r\n                                <p>\r\n                                    <ul>\r\n                                        <li>Hair Transplantation</li>\r\n                                        <li>FUT</li>\r\n                                        <li>Hair Loss Management</li>\r\n                                        <li>Hair Vitamins</li>\r\n                                        <li>Hair Mesotherapy & PRP</li>\r\n                                        <li>Scalp Micro Pigme</li>\r\n                                    </ul>\r\n                                </p>\r\n\r\n                            </div>\r\n\r\n                            {/* <div class=\"service-card-video\">\r\n\r\n    <div class=\"tool-tip-container\">\r\n\r\n        <p class=\"d-none d-lg-block\">\r\n            CLICK PREVIEW BELOW TO VIEW PAGE.\r\n        </p>\r\n\r\n        <p class=\"d-block d-lg-none\">\r\n            TAP PREVIEW BELOW TO VIEW PAGE.\r\n        </p>\r\n\r\n    </div>\r\n\r\n   \r\n</div> */}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"services-glass-card\">\r\n\r\n                            {/* <div class=\"camera-container\">\r\n    <div class=\"circle\">\r\n        <div class=\"camera-eye\">\r\n            <div class=\"inner-eye\">\r\n                <div class=\"blinking\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> */}\r\n\r\n                            <div class=\"service-card-info\">\r\n\r\n                                <i class=\"bi bi-key-fill\"></i>\r\n\r\n                                <h3>\r\n                                    <b>Hair</b>\r\n                                </h3>\r\n\r\n                                <figure class=\"effect-ming\">\r\n                                    <img src={hairServiceImage} alt=\"img09\" class=\"img-fluid\" />\r\n                                    <figcaption>\r\n                                        {/* <p>VIEW PAGE</p>\r\n                <a href=\"/security/access-control\" rel=\"noopener\">View more</a> */}\r\n                                    </figcaption>\r\n                                </figure>\r\n\r\n                                <p>\r\n                                    <ul>\r\n                                        <li>Hair Transplantation</li>\r\n                                        <li>FUT</li>\r\n                                        <li>Hair Loss Management</li>\r\n                                        <li>Hair Vitamins</li>\r\n                                        <li>Hair Mesotherapy & PRP</li>\r\n                                        <li>Scalp Micro Pigme</li>\r\n                                    </ul>\r\n                                </p>\r\n\r\n                            </div>\r\n\r\n                            {/* <div class=\"service-card-video\">\r\n\r\n    <div class=\"tool-tip-container\">\r\n\r\n        <p class=\"d-none d-lg-block\">\r\n            CLICK PREVIEW BELOW TO VIEW PAGE.\r\n        </p>\r\n\r\n        <p class=\"d-block d-lg-none\">\r\n            TAP PREVIEW BELOW TO VIEW PAGE.\r\n        </p>\r\n\r\n    </div>\r\n\r\n   \r\n</div> */}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"services-glass-card\">\r\n\r\n                            {/* <div class=\"camera-container\">\r\n    <div class=\"circle\">\r\n        <div class=\"camera-eye\">\r\n            <div class=\"inner-eye\">\r\n                <div class=\"blinking\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> */}\r\n\r\n                            <div class=\"service-card-info\">\r\n\r\n                                <i class=\"bi bi-key-fill\"></i>\r\n\r\n                                <h3>\r\n                                    <b>Hair</b>\r\n                                </h3>\r\n\r\n                                <figure class=\"effect-ming\">\r\n                                    <img src={hairServiceImage} alt=\"img09\" class=\"img-fluid\" />\r\n                                    <figcaption>\r\n                                        {/* <p>VIEW PAGE</p>\r\n                <a href=\"/security/access-control\" rel=\"noopener\">View more</a> */}\r\n                                    </figcaption>\r\n                                </figure>\r\n\r\n                                <p>\r\n                                    <ul>\r\n                                        <li>Hair Transplantation</li>\r\n                                        <li>FUT</li>\r\n                                        <li>Hair Loss Management</li>\r\n                                        <li>Hair Vitamins</li>\r\n                                        <li>Hair Mesotherapy & PRP</li>\r\n                                        <li>Scalp Micro Pigme</li>\r\n                                    </ul>\r\n                                </p>\r\n\r\n                            </div>\r\n\r\n                            {/* <div class=\"service-card-video\">\r\n\r\n    <div class=\"tool-tip-container\">\r\n\r\n        <p class=\"d-none d-lg-block\">\r\n            CLICK PREVIEW BELOW TO VIEW PAGE.\r\n        </p>\r\n\r\n        <p class=\"d-block d-lg-none\">\r\n            TAP PREVIEW BELOW TO VIEW PAGE.\r\n        </p>\r\n\r\n    </div>\r\n\r\n   \r\n</div> */}\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/surgeries.827fb8ac.jpg\";","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport moment from \"moment\";\r\nimport { gapi } from 'gapi-script';\r\nimport { getApt_URL,confirmApt_URL} from \"../utils/URL\";\r\n\r\nexport default function CreateGoogleEvent (Id) {\r\n    \r\n        \r\n      const setAptConfirm = (event,data) => {\r\n\r\n         let url = confirmApt_URL + Id\r\n                            console.log(data)\r\n                            // console.log(event.htmlLink.toString())\r\n                            // // \"https://www.google.com/calendar/event?eid=b2FiYmRrdDZ2bmNuYWdkOW1kOW5rY204ZGsgc2luZ2FtcGFsbGlha2hpbEBt\"\r\n                            // var eid= event.htmlLink.toString().match('\\/d\\/(eid=.+)\\/')\r\n                            // console.log(eid)\r\n                            let aptData = {\r\n                                aptId: data.aptId,\r\n                                aptPatient: data.aptPatient,\r\n                                aptDoctor: data.aptDoctor,\r\n                                aptTime: data.aptTime,\r\n                                aptDate: data.aptDate,\r\n                                aptStatus: event.htmlLink\r\n                            }\r\n\r\n                            axios.post(url,aptData)\r\n                                .then(response =>console.log(response)).catch(error => {\r\n                                    if (error.response) {\r\n                                        console.log(\"Fail\")\r\n                                    } else {\r\n                                        console.log(\"server down\")\r\n                                    }\r\n                                });\r\n      }\r\n\r\n        let urlApt = getApt_URL + Id;\r\n\r\n        axios.get(urlApt)\r\n            .then(response =>   addEvent(response.data) )\r\n            .catch(error => { if (error.response) console.log(\"error\") })\r\n    \r\n\r\n    let addEvent = (data) => {\r\n\r\n        gapi.load('client:auth2', () => {\r\n            console.log('loaded client')\r\n\r\n\r\n            gapi.client.load('client', () => console.log('bam!'))\r\n\r\n            gapi.client.init({\r\n                apiKey: \"AIzaSyCr3hrrjQvtvj9Z5-slKS3XwSl55o9B17g\",\r\n                clientId: \"693143304041-757ag2eaqnk82dl7l5fstcda62b9838j.apps.googleusercontent.com\",\r\n                discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"],\r\n                scope: \"https://www.googleapis.com/auth/calendar.events\"\r\n            }).then(\r\n                gapi.client.load('calendar', 'v3', () => console.log('bam!')),\r\n\r\n                gapi.auth2.getAuthInstance().signIn()\r\n\r\n            ).then(() => {\r\n\r\n                    console.log(data.aptDate)\r\n                    let time = moment(moment(data.aptDate,\"MM-DD-YYYY\").format(\"DD-MM-YYYY\") + ' ' + data.aptTime)\r\n                    // let start = moment(data.aptDate + ' ' + data.aptTime)\r\n                    \r\n                    let start = new Date(moment(data.aptDate,\"MM-DD-YYYY\").format(\"DD-MM-YYYY\") + ' ' + data.aptTime)\r\n                    \r\n                    console.log(start)\r\n                    let end = new Date();\r\n                    end.setTime(start.getTime() + (15 * 60000))\r\n                    console.log(end)\r\n                    // this.setState({start: start , end : end})  \r\n                    // console.log(this.state.start)          \r\n\r\n                    var event = {\r\n                        'summary': 'Appointment Request',\r\n                        'location': 'Exult Clinic,Siripuram',\r\n                        'description': 'Regular Visit',\r\n                        'start': {\r\n                            'dateTime': start,\r\n                            'timeZone': 'IST'\r\n                        },\r\n                        'end': {\r\n                            'dateTime': end,\r\n                            'timeZone': 'IST'\r\n                        },\r\n                        'attendees': [\r\n                            { 'email': data.aptPatient },\r\n                            { 'email': data.aptDoctor }\r\n                        ],\r\n                        'reminders': {\r\n                            'useDefault': false,\r\n                            'overrides': [\r\n                                { 'method': 'email', 'minutes': 24 * 60 },\r\n                                { 'method': 'popup', 'minutes': 10 }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    var request = gapi.client.calendar.events.insert({\r\n                        'calendarId': data.aptDoctor,\r\n                        'resource': event,\r\n                    })\r\n\r\n                    request.execute(event => {\r\n                        \r\n                        \r\n                            // let url = confirmApt_URL + Id\r\n                            // console.log(event.htmlLink.toString())\r\n                            // axios.put(url,null ,{params: { googleEvent : event.htmlLink.toString()}})\r\n                            //     .then(response =>console.log(response)).catch(error => {\r\n                            //         if (error.response) {\r\n                            //             console.log(\"Fail\")\r\n                            //         } else {\r\n                            //             console.log(\"server down\")\r\n                            //         }\r\n                            //     });\r\n                            console.log(event)\r\n                            if(event === 200){\r\n                                setAptConfirm(event,data)\r\n                                window.open(event.htmlLink)\r\n                            }                        \r\n                        // return event.htmlLink.toString()\r\n                        \r\n                        \r\n                    })\r\n\r\n                })\r\n\r\n        })\r\n    }\r\n}","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\n\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\n\r\nimport { Modal, ModalDialog } from 'react-bootstrap';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\nimport { PatDetails } from './PatientData';\r\n\r\nimport Calendar from './Calendar';\r\nimport moment from \"moment\";\r\nimport CreateGoogleEvent from './CreateEvent';\r\nimport {getAllApts_URL,docDetails_URL,editApt_URL,cancelApt_URL, confirmApt_URL} from \"../utils/URL\";\r\nimport UpdateGoogleEvent from './UpdateEvent';\r\n\r\n\r\nexport default class ViewAppointments extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            aptData: [],\r\n\r\n            doctorsData: [],\r\n\r\n            formvalue: {\r\n                aptId: \"\",\r\n                aptPatientId: \"\",\r\n                aptDoctorId: \"\",\r\n                aptTime: \"\",\r\n                aptDate: \"\",\r\n                aptStatus: \"Pending\",\r\n            },\r\n            doctorMail: \"\",\r\n\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false,\r\n            showFieldEdit: false,\r\n            showAptEdit: false,\r\n            doctorsData: [],\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDetails();\r\n\r\n        console.log(\"here\");\r\n    }\r\n\r\n    getDetails = () => {\r\n        let url = getAllApts_URL + this.props.match.params.userId\r\n        axios.get(url)\r\n            .then(response => this.setState({ aptData: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n        let urlDoctor = docDetails_URL;\r\n\r\n        axios.get(urlDoctor)\r\n            .then(response => this.setState({ doctorsData: response.data }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n\r\n\r\n        if (sessionStorage.getItem(\"userId\") == 1) {\r\n            let url = getAllApts_URL\r\n            axios.get(url)\r\n                .then(response => this.setState({ aptData: response.data, errorMessage: \"\", successMessage: \"success\" }))\r\n                .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n        }\r\n    }\r\n\r\n    UpdateAppointment = () => {\r\n        console.log((this.state.formvalue.aptDate).toString())\r\n        if (this.state.formvalue.aptDate != '' && this.state.formvalue.aptTime != '') {\r\n\r\n            let aptData = {\r\n                aptId: this.state.formvalue.aptId,\r\n                aptPatient: sessionStorage.getItem(\"userId\"),\r\n                aptDoctor: this.state.formvalue.aptDoctorId,\r\n                aptTime: this.state.formvalue.aptTime,\r\n                aptDate: this.state.formvalue.aptDate,\r\n                aptStatus: this.state.formvalue.aptStatus\r\n            }\r\n\r\n            this.setState({ errorMessage: \"\", successMessage: \"\" });\r\n\r\n            console.log(aptData);\r\n\r\n            axios.put( editApt_URL + this.state.formvalue.aptId, aptData)\r\n                .then(response => this.setState({\r\n\r\n                    successMessage: \"Appointment Request Submitted Successfull !!\",\r\n                    errorMessage: \"\",\r\n                    showAptEdit: false\r\n                })).catch(error => {\r\n                    if (error.response) {\r\n                        this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                    } else {\r\n                        this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                    }\r\n                });\r\n        }\r\n        // window.location.reload(true)\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.UpdateAppointment();\r\n\r\n    }\r\n\r\n\r\n    handeChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n        this.setState({ formvalue: { ...formvalue, [name]: value } },\r\n            () => {\r\n                if (event.target.id == \"doc\") {\r\n\r\n                    this.state.doctorsData.map((doctor, key) => {\r\n\r\n                        if (doctor.doctorId == value) {\r\n\r\n                            this.setState({ doctorMail: doctor.emailId })\r\n                        }\r\n\r\n                    })\r\n\r\n                }\r\n            }\r\n        );\r\n\r\n        console.log(this.state.aptData);\r\n        console.log(this.state.doctorMail)\r\n    }\r\n\r\n    handleCallback = (startTime) => {\r\n        console.log(startTime)\r\n        const { formvalue } = this.state;\r\n\r\n        this.setState({ formvalue: { ...formvalue, aptTime: moment(startTime).format('HH:mm'), aptDate: moment(startTime).format(\"DD-MM-YYYY\") } })\r\n    }\r\n\r\n    handleShowAptEdit = () => {\r\n        this.setState({ showAptEdit: true })\r\n\r\n    }\r\n\r\n    handleCloseAptEdit = () => {\r\n        this.setState({ showAptEdit: false })\r\n    }\r\n\r\n    handleAptUpdate = (event) => {\r\n\r\n        \r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n\r\n        {\r\n            this.state.aptData.map((val, key) => {\r\n                if (val.aptId == event.target.value) {\r\n                    console.log(val)\r\n                    this.setState({ formvalue: { ...formvalue, aptId: val.aptId, aptPatient: val.aptPatient, aptStatus: val.aptStatus } })\r\n                }\r\n            })\r\n        }\r\n\r\n        console.log(this.state.formvalue)\r\n        \r\n        UpdateGoogleEvent(this.state.aptData)\r\n        this.handleCloseAptEdit()\r\n    }\r\n    handleAptCancel = (event) => {\r\n        console.log(event.target.value)\r\n        let url = cancelApt_URL + event.target.value\r\n        axios.put(url)\r\n            .then(response => this.setState({\r\n\r\n                successMessage: \"Canceled Successfully !!\",\r\n                errorMessage: \"\",\r\n            }, () => {\r\n                this.getDetails()\r\n            })).catch(error => {\r\n                if (error.response) {\r\n                    this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                } else {\r\n                    this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                }\r\n            });\r\n        // window.location.reload(true)\r\n    }\r\n\r\n\r\n\r\n    handleAddApointment = (event) => {\r\n        console.log(event.target.value)\r\n        CreateGoogleEvent(event.target.value);\r\n    }\r\n\r\n    handleAptConfirm = (event,appointmentEventId) => {\r\n        console.log(event.target.value)\r\n        let url = confirmApt_URL + event.target.value\r\n        axios.put(url)\r\n            .then(response => this.setState({\r\n                successMessage: \"Confirmed Successfully !!\",\r\n                errorMessage: \"\",\r\n            }, () => {\r\n                this.getDetails()\r\n            })).catch(error => {\r\n                if (error.response) {\r\n                    this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                } else {\r\n                    this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                }\r\n            });\r\n        // window.location.reload(true)\r\n    }\r\n\r\n    handleSort = () => {\r\n        this.state.aptData.sort((a, b) =>{ return new Date(b.aptDate,'DD-MM-YYYY') - new Date(a.aptDate,'DD-MM-YYYY') });\r\n    }\r\n\r\n    alertshow = () => {\r\n        alert(\"button clicked\");\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className='App-header'>\r\n\r\n                <div className='card container-fluid ' style={{ marginTop: \"70px\", width: \"100%\" }} >\r\n\r\n                    <label className='text-center card-header row' style={{ width: \"100%\" }}>\r\n                        <b className='text-center col'>Appointments</b> \r\n                         \r\n                    </label>\r\n                    <div className='right form-control col-auto'>\r\n                    <button className='btn btn-info col' style={{ padding: '0.5px' ,float : \"right\",width:\"80px\"}} onClick={this.handleSort}>Sort</button>\r\n                    </div>\r\n                    \r\n                    <Table className='table form-control '>\r\n\r\n                        <Tbody>\r\n\r\n                            <Tr className=\"row\">\r\n\r\n                                {this.state.aptData.map((val, key) => {\r\n\r\n                                    return (\r\n\r\n                                        <div className=' col-auto'>\r\n\r\n                                            <Td className='card' style={{}}>\r\n\r\n                                                <label className='text-center card-header' style={{ background: \"rgba(255,200,100,0.8)\", width: \"100%\", marginTop: \"-0\" }}><b>Appointment</b></label>\r\n\r\n                                                <div className='card-body'>\r\n                                                    <div className='form-control'>\r\n\r\n                                                        <div>\r\n                                                            {sessionStorage.getItem(\"userId\") == 1 || sessionStorage.getItem(\"userId\") < 10 ?\r\n                                                                <div className='form form-group text-center'><h6><b>Patient Name : </b>{val.aptPatient}</h6></div>\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n\r\n                                                            {sessionStorage.getItem(\"userId\") == 1 || sessionStorage.getItem(\"userId\") > 10 ?\r\n                                                                <div className='form form-group text-center'><h6><b>Doctor Name : </b>{val.aptDoctor}</h6></div>\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n                                                        </div>\r\n\r\n                                                        <div className='form form-group text-center'><h6><b>Appointment Date : </b>{val.aptDate}</h6></div>\r\n                                                        <div className='form form-group text-center'><h6><b>Appointment Time : </b>{val.aptTime}</h6></div>\r\n                                                        <div className='form form-group text-center'><h6><b>Status : </b> {val.aptStatus}</h6></div>\r\n\r\n\r\n                                                        {val.aptStatus === \"Pending\" ?\r\n\r\n                                                            <>\r\n                                                                {sessionStorage.getItem(\"userId\") < 10 && sessionStorage.getItem(\"userId\") != 1 ?\r\n                                                                    <div className='col'>\r\n                                                                        <button className='btn btn-success col-auto' onClick={this.handleAddApointment} value={val.aptId}>Accept</button>\r\n                                                                        <button className='btn btn-danger col-auto' onClick={this.handleAptCancel} value={val.aptId}>Decline</button>\r\n                                                                    </div>\r\n                                                                    :\r\n                                                                    null\r\n                                                                }\r\n\r\n\r\n\r\n                                                                {sessionStorage.getItem(\"userId\") > 10 ?\r\n                                                                    <div className='row'>\r\n                                                                        <button className='btn btn-danger col-auto' onClick={this.handleAptCancel} value={val.aptId}>Cancel</button>\r\n                                                                        <button className='btn btn-info col' onClick={this.handleAptUpdate} value={val.aptId}>Edit</button>\r\n                                                                    </div>\r\n                                                                    :\r\n                                                                    null\r\n                                                                }\r\n\r\n\r\n                                                                {sessionStorage.getItem('userId') == 1 ?\r\n\r\n                                                                    <div className=\"row\">\r\n                                                                        <button className='btn btn-success col-auto' onClick={this.handleAddApointment} value={val.aptId}>Accept</button>\r\n                                                                        <button className='btn btn-danger col-auto' onClick={this.handleAptCancel} value={val.aptId}>Decline</button>\r\n                                                                        <button className='btn btn-info col' onClick={this.handleAptUpdate} value={val.aptId}>Edit</button>\r\n                                                                    </div>\r\n                                                                    : null\r\n                                                                }\r\n                                                            </>\r\n\r\n                                                            : null}\r\n\r\n\r\n\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </Td>\r\n                                        </div>\r\n\r\n                                    )\r\n                                })\r\n                                }\r\n\r\n                            </Tr>\r\n\r\n                        </Tbody>\r\n                    </Table>\r\n\r\n                </div>\r\n                <div className='ft-modal' >\r\n                    <Modal dialogClassName=\"custom-dialog\" show={this.state.showAptEdit} onHide={this.handleCloseAptEdit} >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title className='text-center'>\r\n                                <b>Edit Appointment</b>\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body  >\r\n\r\n                            <div className='' style={{ backgroundColor: \"#0000 \", padding: \"0.5rem\" }}>\r\n\r\n                                <React.Fragment>\r\n                                    <div className=\"form-control\" >\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"select-wrap \">\r\n                                                <div className='row'>\r\n                                                    {/* <label className='form-item' style={{ padding: '0.5rem' }}><h6><b>Choose Doctor : </b></h6></label> */}\r\n                                                    <select name=\"aptDoctorId\" id=\"doc\" className=\"form-control col\" onClick={this.handeChange} placeholder=\"Select Doctor\">\r\n                                                        <option disabled selected defaultValue={\"\"} value> ----- Choose Doctor -----  </option>\r\n                                                        {this.state.doctorsData.map((doctor, key) => {\r\n\r\n                                                            return (\r\n\r\n                                                                <option id={key} value={doctor.doctorId} mail={doctor.emailId}>{doctor.doctorName}</option>\r\n\r\n                                                            )\r\n\r\n                                                        })}\r\n                                                    </select>\r\n                                                </div>\r\n\r\n                                                <Calendar timeCallback={this.handleCallback} doc={this.state.doctorMail} pat={this.state.patientMail} />\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    {/* <button type=\"submit\" value=\"\" className=\"btn btn-primary\" onClick={this.handleSubmit}><b>Book Appointment</b></button> */}\r\n\r\n                                                    <h6 type=\"text\" className=\"alert-info\" >{this.state.errorMessage}</h6>\r\n                                                    <h6 type=\"text\" className=\"alert-success\" >{this.state.successMessage}</h6>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                </React.Fragment>\r\n\r\n                            </div>\r\n\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport moment from \"moment\";\r\nimport { gapi } from 'gapi-script';\r\nimport { getApt_URL,confirmApt_URL} from \"../utils/URL\";\r\n\r\nexport default function UpdateGoogleEvent (Id) {\r\n    \r\n        \r\n        // this.state = {\r\n            \r\n        //    aptStatusCode:''\r\n\r\n        // }\r\n\r\n        let urlApt = getApt_URL + Id;\r\n\r\n        axios.get(urlApt)\r\n            .then(response =>   addEvent(response.data) )\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n    \r\n\r\n    let addEvent = (data) => {\r\n\r\n        gapi.load('client:auth2', () => {\r\n            console.log('loaded client')\r\n\r\n\r\n            gapi.client.load('client', () => console.log('bam!'))\r\n\r\n            gapi.client.init({\r\n                apiKey: \"AIzaSyDrVkS-ZRFRmTsJvLQTNpshIfEGyr2XhhI\",\r\n                clientId: \"229521899518-v2nb1anhnuj8n1rkqsi0qrpjojkl3l7r.apps.googleusercontent.com\",\r\n                discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"],\r\n                scope: \"https://www.googleapis.com/auth/calendar.events\"\r\n            }).then(\r\n                gapi.client.load('calendar', 'v3', () => console.log('bam!')),\r\n\r\n                gapi.auth2.getAuthInstance().signIn()\r\n\r\n            ).then(() => {\r\n\r\n                    console.log(data.aptDate)\r\n                    let time = moment(moment(data.aptDate,\"MM-DD-YYYY\").format(\"DD-MM-YYYY\") + ' ' + data.aptTime)\r\n                    // let start = moment(data.aptDate + ' ' + data.aptTime)\r\n                    \r\n                    let start = new Date(moment(data.aptDate,\"MM-DD-YYYY\").format(\"DD-MM-YYYY\") + ' ' + data.aptTime)\r\n                    \r\n                    console.log(start)\r\n                    let end = new Date();\r\n                    end.setTime(start.getTime() + (15 * 60000))\r\n                    console.log(end)\r\n                    // this.setState({start: start , end : end})  \r\n                    // console.log(this.state.start)          \r\n\r\n                    var event = {\r\n                        'summary': 'Appointment Request',\r\n                        'location': 'Exult Clinic,Siripuram',\r\n                        'description': 'Regular Visit',\r\n                        'start': {\r\n                            'dateTime': start,\r\n                            'timeZone': 'IST'\r\n                        },\r\n                        'end': {\r\n                            'dateTime': end,\r\n                            'timeZone': 'IST'\r\n                        },\r\n                        'attendees': [\r\n                            { 'email': data.aptPatient },\r\n                            { 'email': data.aptDoctor }\r\n                        ],\r\n                        'reminders': {\r\n                            'useDefault': false,\r\n                            'overrides': [\r\n                                { 'method': 'email', 'minutes': 24 * 60 },\r\n                                { 'method': 'popup', 'minutes': 10 }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    var request = gapi.client.calendar.events.patch({\r\n                        'calendarId': data.aptDoctor,\r\n                        'resource': event,\r\n                    })\r\n\r\n                    request.execute(event => {\r\n                        console.log(event)\r\n                        window.open(event.htmlLink)\r\n                        if(event === 200){\r\n                            let url = confirmApt_URL + event.target.value\r\n                            axios.put(url)\r\n                                .then(response => this.setState({\r\n                    \r\n                                    successMessage: \"Confirmed Successfully !!\",\r\n                                    errorMessage: \"\",\r\n                                })).catch(error => {\r\n                                    if (error.response) {\r\n                                        this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                                    } else {\r\n                                        this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                                    }\r\n                                });\r\n                        }\r\n                        \r\n                    })\r\n\r\n\r\n                })\r\n\r\n\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n}","import {User} from \"./models/User\";\r\nimport React, {Component} from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport \"../index.css\";\r\nimport \"../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {docRegister_URL} from '../utils/URL'\r\n\r\n\r\nclass AdminAddDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            formvalue: {\r\n                usersData: [],\r\n                fname: \"\",\r\n                lname: \"\",\r\n                contactNumber: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                confirmPassword: \"\"\r\n            },\r\n            formerrorMessage: {\r\n                name: \"\",\r\n                email: \"\",\r\n                contactNumber: \"\",\r\n                password: \"\"\r\n            },\r\n            formvalid: {\r\n                name: false,\r\n                email: false,\r\n                contactNumber: false,\r\n                password: false,\r\n                buttonActive: false\r\n            },\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            login: false\r\n        };\r\n    }\r\n\r\n\r\n    submitRegister = () => {\r\n\r\n        let userData = {\r\n            doctorName: \"Dr.\" + this.state.formvalue.fname + '' + this.state.formvalue.lname,\r\n            emailId: this.state.formvalue.email,\r\n            contactNumber: this.state.formvalue.contactNumber,\r\n            password: this.state.formvalue.password\r\n        }\r\n\r\n        this.setState({ errorMessage: \"\", successMessage: \"\" });\r\n\r\n        console.log(this.state.formvalue.password);\r\n        console.log(this.state.formvalue.confirmPassword);\r\n        if (this.state.formvalue.password === this.state.formvalue.confirmPassword) {\r\n\r\n            console.log(userData)\r\n            axios.post(docRegister_URL, userData)\r\n                .then(response => this.setState({\r\n\r\n                    usersData: response.data,\r\n                    successMessage: \"Registration Successfull !!\",\r\n                    errorMessage: \"\",\r\n                    login: true\r\n                })).catch(error => {\r\n                    if (error.response) {\r\n                        this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                    } else {\r\n                        this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                    }\r\n                });\r\n        } else {\r\n            this.setState({ errorMessage: \"Password didn't match\" })\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.submitRegister();\r\n\r\n    }\r\n\r\n    handeChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { formvalue } = this.state;\r\n        this.setState({ formvalue: { ...formvalue, [name]: value } });\r\n        this.validate(event);\r\n    }\r\n\r\n    validate = event => {\r\n        var fieldName = event.target.name;\r\n        var value = event.target.value;\r\n        var validationerrorMessage = this.state.formerrorMessage;\r\n        var formvalid = this.state.formvalid;\r\n        switch (fieldName) {\r\n            case \"fname\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.name = \"Enter the field\";\r\n                    formvalid.name = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z]+$/)) {\r\n                    validationerrorMessage.name = \"Please enter your name in valid format\";\r\n                    formvalid.name = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.name = \"\";\r\n                    formvalid.name = true;\r\n                }\r\n                break;\r\n\r\n            case \"lname\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.name = \"Enter the field\";\r\n                    formvalid.name = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z]+$/)) {\r\n                    validationerrorMessage.name = \"Please enter your name in valid format\";\r\n                    formvalid.name = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.name = \"\";\r\n                    formvalid.name = true;\r\n                }\r\n                break;\r\n\r\n            case \"email\":\r\n                if (value === \"\") {\r\n                    validationerrorMessage.email = \"Enter the field\";\r\n                    formvalid.email = false;\r\n                }\r\n                else if (!value.match(/^[A-Za-z0-9]+[@][A-Za-z0-9]+[.][c][o][m]$/)) {\r\n                    validationerrorMessage.email = \"Please enter valid email\";\r\n                    formvalid.email = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.email = \"\";\r\n                    formvalid.email = true;\r\n                }\r\n                break;\r\n\r\n            case \"contactNumber\":\r\n\r\n                if (value === \"\") {\r\n                    validationerrorMessage.contactNumber = \"Enter the field\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else if (!value.match(/^[6-9][0-9]{9}$/)) {\r\n                    validationerrorMessage.contactNumber = \"Please enter valid Indian Number\";\r\n                    formvalid.contactNumber = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.contactNumber = \"\";\r\n                    formvalid.contactNumber = true;\r\n                }\r\n                break;\r\n            case \"password\":\r\n\r\n                if (value === \"\") {\r\n                    validationerrorMessage.password = \"Enter the field\";\r\n                    formvalid.password = false;\r\n                }\r\n                else if (!value.match(/^[A-Z]+$/) && !value.match(/^.[a-z].$/) && !value.match(/^.[0-9].$/) && value.length < 8) {\r\n\r\n                    // var regexCap = new RegExp(/^.[A-Z].$/);\r\n                    // var regexLow = new RegExp(/^.[a-z].$/);\r\n                    // var regexNum = new RegExp(/^.[0-9].$/);\r\n\r\n                    // if(!value.match(/^.[A-Z].$/)){\r\n                    //     validationerrorMessage.password = \"Password Should contain 1 upper case letter\";\r\n                    //     formvalid.password = false;\r\n                    // }else if(!value.match(regexLow)){\r\n                    //     validationerrorMessage.password = \"Password Should contain 1 lower case letter\";\r\n                    //     formvalid.password = false;\r\n                    // }else if(!value.match(regexNum)){\r\n                    //     validationerrorMessage.password = \"Password Should contain atleast 1 number\";\r\n                    //     formvalid.password = false;\r\n                    // }else if(value.length<8){\r\n                    //     validationerrorMessage.password = \"Password Should contain atleast 8 characters\";\r\n                    //     formvalid.password = false;\r\n                    // }\r\n                    validationerrorMessage.password = `*Password Should contain atleast 1 upper case, 1 lower case,1 number and minimum 8 characters`;\r\n                    formvalid.password = false;\r\n                }\r\n                else {\r\n                    validationerrorMessage.password = \"\";\r\n                    formvalid.password = true;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        formvalid.buttonActive = formvalid.name && formvalid.email && formvalid.contactNumber && formvalid.password;\r\n        this.setState({ formerrorMessage: validationerrorMessage, formvalid: formvalid, successMessage: \"\" });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"App-header\" >\r\n                    <section className='card container-fluid' style={{ marginTop: \"70px\" }} >\r\n                    <form className=\"form-control\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-control text-center card-header\">\r\n                                    <h4><b>Doctor Registration</b></h4>\r\n                                </div>\r\n                                <div className=\"form-group form-col\">\r\n\r\n                                    <input id=\"firstname\" className=\" input-name\" onChange={this.handeChange} placeholder=\"First Name\" name=\"fname\" value={this.state.formvalue.fname}>\r\n                                    </input>\r\n                                    <input id=\"lastname\" className=\"input-name\" onChange={this.handeChange} name=\"lname\" placeholder=\"Last Name\" value={this.state.formvalue.lname}>\r\n                                    </input>\r\n\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    {this.state.formerrorMessage.name ? (\r\n                                        <span className=\"text alert-warning\">{this.state.formerrorMessage.name}</span>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"\">\r\n\r\n                                      <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"contactNumber\" type=\"tel\" onChange={this.handeChange} placeholder=\"Enter your contact number\" name=\"contactNumber\" value={this.state.formvalue.contactNumber}>\r\n                                        </input>\r\n                                    </div>\r\n                                    {this.state.formerrorMessage.contactNumber ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.contactNumber}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"email\" type=\"email\" onChange={this.handeChange} placeholder=\"Email\" name=\"email\" value={this.state.formvalue.email}>\r\n                                        </input>\r\n                                    </div>\r\n\r\n                                    {this.state.formerrorMessage.email ? (\r\n                                        <span className=\"text-center alert-warning\">{this.state.formerrorMessage.email}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"password\" type=\"password\" onChange={this.handeChange} placeholder=\"Password\" name=\"password\" value={this.state.formvalue.password}>\r\n                                        </input>\r\n                                    </div>\r\n\r\n                                    {this.state.formerrorMessage.password ? (\r\n                                        <span className=\"text-center alert-warning-small\">{this.state.formerrorMessage.password}</span>\r\n                                    ) : null}\r\n\r\n                                    <div className=\"form-group form-control-sm\">\r\n                                        <input id=\"confirmPassword\" type=\"password\" onChange={this.handeChange} placeholder=\"Confirm Password\" name=\"confirmPassword\" value={this.state.formvalue.confirmPassword}>\r\n                                        </input>\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        type=\r\n                                        \"submit\"\r\n                                        className=\"btn-register\"\r\n                                        onClick={this.handleSubmit}>\r\n                                        <b>Register</b>\r\n                                    </button>\r\n                                </div>\r\n                                <span type=\"text\" className=\"alert-info\" >{this.state.errorMessage}</span>\r\n                                <span type=\"text\" className=\"alert-success\" >{this.state.successMessage}</span>\r\n                            </div>\r\n                            <div className=\"text text-center small\">\r\n                                Already have an account?<Link className=\"text-center\" to=\"/Login\">\r\n                                    <b>Sign in</b>\r\n                                </Link>\r\n                            </div>\r\n                        </form>\r\n                        <span className=\"text-center alert-success\"><b>{this.state.successMessage}</b></span>\r\n                        <span className=\"text-center alert-danger\"><b>{this.state.errorMessage}</b></span>\r\n                    </section>\r\n                    <section className=\"col\"></section>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AdminAddDoctor;","import React, { Component } from \"react\";\r\nimport { Table, Button, Popconfirm, Row, Col, Upload } from \"antd\";\r\nimport { ExcelRenderer } from \"react-excel-renderer\";\r\nimport { EditableFormRow, EditableCell } from \"../utils/edittable\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\nimport { excelupload_URL} from \"../utils/URL\";\r\n\r\nexport default class AdminAddPatsBulk extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: '',\r\n            cols: [],\r\n            rows: [],\r\n            errorMessage: null,\r\n            columns: [\r\n                {\r\n                    title: \"NAME\",\r\n                    dataIndex: \"name\",\r\n                    editable: true\r\n                },\r\n                {\r\n                    title: \"PHONE NO\",\r\n                    dataIndex: \"phone\",\r\n                    editable: true\r\n                },\r\n                {\r\n                    title: \"Email Id\",\r\n                    dataIndex: \"email\",\r\n                    editable: true\r\n                },\r\n                {\r\n                    title: \"Password\",\r\n                    dataIndex: \"password\",\r\n                    editable: true\r\n                },\r\n                {\r\n                    title: \"Action\",\r\n                    dataIndex: \"action\",\r\n                    render: (text, record) =>\r\n                        this.state.rows.length >= 1 ? (\r\n                            <Popconfirm\r\n                                title=\"Sure to delete?\"\r\n                                onConfirm={() => this.handleDelete(record.key)}\r\n                            >\r\n                                <Button\r\n                                    className=\"btn btn-danger\"\r\n                                    type=\"delete\"\r\n                                    theme=\"filled\"\r\n                                    style={{ color: \"black\", fontSize: \"15px\" }}\r\n                                >\r\n                                    <AiIcons.AiFillDelete /> Delete</Button>\r\n                            </Popconfirm>\r\n                        ) : null\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.rows];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        this.setState({ rows: newData });\r\n    };\r\n\r\n    checkFile(file) {\r\n        let errorMessage = \"\";\r\n        if (!file || !file[0]) {\r\n            return;\r\n        }\r\n        const isExcel =\r\n            file[0].type === \"application/vnd.ms-excel\" ||\r\n            file[0].type ===\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n        if (!isExcel) {\r\n            errorMessage = \"You can only upload Excel file!\";\r\n        }\r\n        console.log(\"file\", file[0].type);\r\n        const isLt2M = file[0].size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            errorMessage = \"File must be smaller than 2MB!\";\r\n        }\r\n        console.log(\"errorMessage\", errorMessage);\r\n        return errorMessage;\r\n    }\r\n\r\n    fileHandler = event => {\r\n        // console.log(\"fileList\", fileList);\r\n        let fileObj = event\r\n\r\n        this.checkFile(fileObj);\r\n\r\n        this.setState({ file: fileObj });\r\n\r\n        if (!fileObj) {\r\n            this.setState({\r\n                errorMessage: \"No file uploaded!\"\r\n            });\r\n            return false;\r\n        }\r\n        console.log(\"fileObj.type:\", fileObj.type);\r\n        if (\r\n            !(\r\n                fileObj.type === \"application/vnd.ms-excel\" ||\r\n                fileObj.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n            )\r\n        ) {\r\n            this.setState({\r\n                errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\r\n            });\r\n            return false;\r\n        }\r\n        //just pass the fileObj as parameter\r\n        ExcelRenderer(fileObj, (err, resp) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                let newRows = [];\r\n                resp.rows.slice(1).map((row, index) => {\r\n                    if (row && row !== \"undefined\") {\r\n                        newRows.push({\r\n                            key: index,\r\n                            name: row[0],\r\n                            phone: row[1],\r\n                            email: row[2],\r\n                            password: row[3]\r\n                        });\r\n                    }\r\n                });\r\n                if (newRows.length === 0) {\r\n                    this.setState({\r\n                        errorMessage: \"No data found in file!\"\r\n                    });\r\n                    return false;\r\n                } else {\r\n                    this.setState({\r\n                        cols: resp.cols,\r\n                        rows: newRows,\r\n                        errorMessage: null\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        return false;\r\n    };\r\n\r\n    handleSubmit = async () => {\r\n        console.log(\"submitting: \", this.state.rows);\r\n        //submit to API\r\n        //if successful, banigate and clear the data\r\n        \r\n        const data = new FormData() \r\n        data.append('file', this.state.file)\r\n        console.warn(this.state.file);\r\n        let url = excelupload_URL;\r\n \r\n        axios.post(url, data, { // receive two parameter endpoint url ,form data \r\n        })\r\n        .then(res => { // then print response status\r\n            console.warn(res);\r\n        }).then(response => this.setState({\r\n\r\n            usersData: response.data,\r\n            successMessage: \"Registration Successfull !!\",\r\n            errorMessage: \"\",\r\n            login: true\r\n        })).catch(error => {\r\n            if (error.response) {\r\n                this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n            } else {\r\n                this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n            }\r\n        });\r\n\r\n        this.setState({ rows: [] })\r\n        };\r\n\r\n        handleDelete = key => {\r\n            const rows = [...this.state.rows];\r\n            this.setState({ rows: rows.filter(item => item.key !== key) });\r\n        };\r\n        handleAdd = () => {\r\n            const { count, rows } = this.state;\r\n            const newData = {\r\n                key: count,\r\n                name: \"Name\",\r\n                phone: \"9999999999\",\r\n                email: \"@gmail.com\",\r\n                password: \"password\"\r\n            };\r\n            this.setState({\r\n                rows: [newData, ...rows],\r\n                count: count + 1\r\n            });\r\n        };\r\n\r\n        render() {\r\n            const components = {\r\n                body: {\r\n                    row: EditableFormRow,\r\n                    cell: EditableCell\r\n                }\r\n            };\r\n            const columns = this.state.columns.map(col => {\r\n                if (!col.editable) {\r\n                    return col;\r\n                }\r\n                return {\r\n                    ...col,\r\n                    onCell: record => ({\r\n                        record,\r\n                        editable: col.editable,\r\n                        dataIndex: col.dataIndex,\r\n                        title: col.title,\r\n                        handleSave: this.handleSave\r\n                    })\r\n                };\r\n            });\r\n            return (\r\n                <div className=\"App-header\">\r\n                    <div className=\"card container-fluid\" style={{ marginTop: \"75px\", width: \"100%\" }}>\r\n                        <form className=\" form-control\">\r\n\r\n                            <h1 className=\"card-header\"><b>Upload Patients Data</b></h1>\r\n                            <Row >\r\n                                <Col\r\n                                    span={10}\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"space-between\",\r\n                                        alignItems: \"center\",\r\n                                        marginBottom: \"5%\"\r\n                                    }}\r\n                                >\r\n\r\n                                </Col>\r\n                                <Col style={{ float: \"right\" }} span={10}>\r\n                                    <a\r\n                                        href=\"/\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        download\r\n                                    >\r\n                                        Sample excel sheet\r\n                                    </a>\r\n                                </Col>\r\n                                <Col\r\n                                    span={10}\r\n\r\n                                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                                >\r\n                                    {this.state.rows.length > 0 && (\r\n                                        <div className=\"form-control col-auto\">\r\n                                            <Button\r\n                                                className=\"btn btn-warning\"\r\n                                                onClick={this.handleAdd}\r\n                                                size=\"large\"\r\n                                                type=\"info\"\r\n                                                style={{ float: \"left\", width: \"auto\" }}\r\n                                            >\r\n                                                {/* <Icon type=\"plus\" /> */}\r\n                                                Add a row\r\n                                            </Button>{\" \"}\r\n                                            <Button\r\n                                                className=\"btn btn-success\"\r\n                                                onClick={this.handleSubmit}\r\n                                                size=\"large\"\r\n                                                type=\"primary\"\r\n                                                style={{ width: \"auto\" }}\r\n                                            >\r\n                                                Submit Data\r\n                                            </Button>\r\n                                        </div>\r\n                                    )}\r\n                                </Col>\r\n                            </Row>\r\n                            <div>\r\n                                <Upload\r\n                                type=\"file\"\r\n                                    name=\"file\"\r\n                                    beforeUpload={this.fileHandler}\r\n                                    onRemove={() => this.setState({ rows: [] })}\r\n                                    multiple={false}\r\n                                >\r\n                                    <Button className=\"form-control\" style={{ width: \"auto\", float: \"left\" }}>\r\n                                        <AiIcons.AiOutlineUpload />\r\n                                        Click to Upload Excel File\r\n                                    </Button>\r\n                                </Upload>\r\n                            </div>\r\n                            <div style={{ marginTop: 10 }}>\r\n                                <Table\r\n                                    className=\"table card container-fluid\"\r\n                                    components={components}\r\n                                    rowClassName={() => \"editable-row\"}\r\n                                    dataSource={this.state.rows}\r\n                                    columns={columns}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\n\r\nimport { Modal, ModalDialog } from 'react-bootstrap';\r\nimport { Type, Field } from './models/FieldDetails';\r\nimport { Table, Button, Popconfirm, Row, Col, Icon, Upload } from \"antd\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport axios from 'axios';\r\nimport {patSampEdit_URL,patTempEdit_URL} from \"../utils/URL\";\r\n\r\nimport { images } from \"../utils/ImagesData\";\r\n\r\n\r\nclass AdminPatientDetailsEdit extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            patData: [],\r\n            field: {\r\n                FieldType: \"\",\r\n                FieldName: \"\",\r\n                FieldValue: \"\"\r\n            },\r\n            showFieldEdit: false\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(patSampEdit_URL)\r\n            .then(response => this.setState({ patData: response.data }))\r\n            .catch(error => { if (error.response) this.setState({ errorMessage: \"No doctor exist\" }) })\r\n\r\n        console.log(this.state.patdata)\r\n    }\r\n\r\n    handleShowAddField = () => {\r\n        this.setState({ showFieldEdit: true })\r\n    }\r\n\r\n    handleCloseAddField = () => {\r\n        this.setState({ showFieldEdit: false })\r\n    }\r\n\r\n    handleChange = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const { field } = this.state;\r\n        this.setState({ field: { ...field, [name]: value } });\r\n\r\n        console.log(this.state.field)\r\n    }\r\n\r\n    submitTemplate = () => {\r\n        axios.post(patTempEdit_URL, this.state.patData)\r\n            .then(response => this.setState({\r\n                successMessage: \"Submit Successfull !!\",\r\n                errorMessage: \"\",\r\n                login: true\r\n            })).catch(error => {\r\n                if (error.response) {\r\n                    this.setState({ errorMessage: error.response.data.message, successMessage: \"\" });\r\n                } else {\r\n                    this.setState({ errorMessage: \"Server is down\", successMessage: \"\" });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    handleDelete = event => {\r\n\r\n        const { patData } = this.state;\r\n        const id = event.target.id;\r\n\r\n\r\n        this.setState({ patData: patData.filter(item => item.fieldId != id) });\r\n\r\n    };\r\n\r\n    handleAddField = () => {\r\n\r\n        const { patData } = this.state;\r\n        const newData = {\r\n            fieldId: \"1\",\r\n            fieldName: this.state.field.FieldName,\r\n            fieldType: this.state.field.FieldType,\r\n            fieldValue: this.state.field.FieldValue\r\n        };\r\n\r\n\r\n        this.setState({\r\n            patData: [newData, ...patData],\r\n\r\n        });\r\n\r\n        this.handleCloseAddField();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-header\"  >\r\n\r\n                <div >\r\n                    <div className='card container-fluid' style={{ marginTop: \"70px\" }}>\r\n                        <div className='' style={{ width: \"100%\" }}>\r\n                            <label className='card-header text-center' style={{ width: \"100%\" }}><b>Patients Details Page</b></label>\r\n                        </div>\r\n\r\n                        <div >\r\n                            <ul className='card-body '>\r\n\r\n                                {this.state.patData.map((item, index) => {\r\n                                    return (\r\n\r\n                                        <div className='form-control' key={index}>\r\n\r\n                                            <div key={index} className=\"form-control-sm row\" style={{ position: \"left\" }} >\r\n                                                <Row >\r\n                                                    <Col span={10} style={{ float : \"left\" }}>\r\n                                                        <label className='form-item text-center' style={{ padding: '0.5rem',marginTop: '0.8rem' }}><b>{item.fieldName}</b></label>\r\n                                                    </Col>\r\n                                                    <Col style={{ float: \"left\",padding:\"0.5rem\" }} span={10}>\r\n                                                        <input id={item.fieldId}\r\n                                                            className=\"form-item\"\r\n                                                            type={item.fieldType}\r\n                                                            onChange={this.handleChange}\r\n                                                            placeholder={item.fieldName}\r\n                                                            name={item.fieldName}\r\n                                                            value={item.fieldValue}\r\n\r\n                                                            disabled={sessionStorage.getItem(\"userId\") < 10 ? true : false}\r\n                                                        >\r\n                                                        </input>\r\n                                                    </Col>\r\n                                                    <Col span={10} style={{ float : \"left\" }} >\r\n                                                        <Button\r\n                                                            id={item.fieldId}\r\n                                                            className=\"btn btn-danger form-item\"\r\n                                                            type=\"delete\"\r\n                                                            theme=\"filled\"\r\n                                                            style={{ padding: '0.5rem',marginTop: '0.8rem'}}\r\n                                                            onClick={this.handleDelete}\r\n                                                        >\r\n                                                            <AiIcons.AiFillDelete /></Button>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n\r\n                                            </div>\r\n\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    )\r\n                                })}\r\n\r\n                                <button\r\n                                    type=\"\"\r\n                                    className=\"btn btn-info form-group\"\r\n                                    onClick={this.handleShowAddField}>\r\n                                    <b>Add Field</b>\r\n                                </button>\r\n\r\n                                <button\r\n                                    type=\"\"\r\n                                    className=\"btn btn-success form-group\"\r\n                                    onClick={this.submitTemplate}\r\n                                    style={{ width: \"100%\" }}>\r\n                                    <b>Submit</b>\r\n                                </button>\r\n                            </ul>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className='ft-modal' >\r\n                            <Modal show={this.state.showFieldEdit} onHide={this.handleCloseAddField}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title className='text-center'>\r\n                                        <b>Field Details</b>\r\n                                    </Modal.Title>\r\n                                </Modal.Header>\r\n\r\n                                <Modal.Body >\r\n\r\n                                    <div className='' style={{ backgroundColor: \"#0000 \", padding: \"0.5rem\" }}>\r\n\r\n                                        <React.Fragment>\r\n                                            <form>\r\n                                                <div className=\"form-control\" >\r\n\r\n\r\n                                                    <label ><span><h6>Field Name</h6></span></label>\r\n                                                    <input type=\"text\"\r\n                                                        className=\"form-control form-item\"\r\n                                                        style={{ padding: \"1rem\" }}\r\n                                                        id=\"FieldName\"\r\n                                                        placeholder=\"Field Name\"\r\n                                                        name=\"FieldName\" onChange={this.handleChange}\r\n                                                        value={this.state.field.FieldName} />\r\n\r\n                                                    <label ><span><h6>Field Value</h6></span></label>\r\n                                                    <input type=\"text\"\r\n                                                        className=\"form-control form-item\"\r\n                                                        style={{ padding: \"1rem\" }}\r\n                                                        id=\"FieldValue\"\r\n                                                        placeholder=\"Field Value\"\r\n                                                        name=\"FieldValue\" onChange={this.handleChange}\r\n                                                        value={this.state.field.FieldValue} />\r\n\r\n                                                    <div className=\"\">\r\n                                                        <div className=\"select-wrap\">\r\n                                                            <label ><span><h6>Choose Field Type</h6></span></label>\r\n                                                            <select name=\"FieldType\" id=\"\" className=\"form-control\" onClick={this.handleChange} placeholder=\"Select Type\">\r\n                                                                {Type.map((type, key) => {\r\n                                                                    return (\r\n                                                                        <option value={type}>{type}</option>\r\n                                                                    )\r\n\r\n                                                                })}\r\n                                                            </select>\r\n                                                        </div>\r\n\r\n\r\n                                                    </div>\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-success col\"\r\n                                                        onClick={this.handleAddField}>\r\n                                                        <b>Add</b>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </form>\r\n\r\n                                        </React.Fragment>\r\n\r\n                                    </div>\r\n\r\n                                </Modal.Body>\r\n                            </Modal>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default AdminPatientDetailsEdit;","import React, { Component } from \"react\";\r\n\r\n\r\n\r\n// import \"../index.css\";\r\n\r\nimport \"../css/css/menu.css\";\r\n\r\n\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as ImIcons from \"react-icons/im\";\r\n\r\nimport Login from \"../Components/Login\"\r\nimport Register from \"../Components/Register\";\r\nimport Home from \"../Components/Home\";\r\nimport { MenuData, MenuDataAdmin, MenuDataDoc } from \"../utils/MenuData\";\r\nimport Appointment from \"./Appointment\";\r\nimport AdminPatientPageEdit from \"./AdminPatientPageEdit\";\r\nimport PatientDetails from \"./PatientDetails\";\r\nimport DocUpdatePatData from \"./DocUpdatePatData\";\r\nimport ContactUs from \"./ContactUs\";\r\nimport Services from \"./Services\";\r\nimport ViewAppointments from \"./ViewAppointments\";\r\nimport AdminAddDoctor from \"./AdminAddDoctor\";\r\nimport AdminAddPatsBulk from \"./AdminAddPatsBulk\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AdminPatientDetailsEdit from \"./AdminPatientDetailsEdit\";\r\nimport Calendar from \"./Calendar\";\r\nimport \"../utils/URL\";\r\n\r\n\r\n\r\n\r\n\r\nclass NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            logged_userId: sessionStorage.getItem(\"userId\"),\r\n            logged_userName: sessionStorage.getItem(\"userName\"),\r\n            dialog_visible: false,\r\n            logged_out: false,\r\n            sideNav: false\r\n        };\r\n    }\r\n\r\n  \r\n\r\n    componentDidMount() {\r\n        this.setState({ sideNav: false });\r\n        \r\n        \r\n    }\r\n    onClick = () => {\r\n        this.setState({ dialog_visible: true });\r\n    }\r\n\r\n    onHide = () => {\r\n        this.setState({ dialog_visible: false });\r\n    }\r\n\r\n    logout = () => {\r\n        this.setState({ dialog_visible: false });\r\n        sessionStorage.clear();\r\n        this.setState({ logged_out: true });\r\n        window.location.reload();\r\n        <Redirect to=\"/\" ></Redirect>\r\n    };\r\n\r\n    confirm_logout = () => {\r\n        this.setState({ dialog_visible: true })\r\n        \r\n    };\r\n\r\n    toggleSidebar = () => {\r\n        this.setState({ sideNav: !this.state.sideNav });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"App-background\">\r\n                \r\n                <Router>\r\n                \r\n                {!this.state.logged_out ? <Redirect to=\"/\" ></Redirect> : null }\r\n\r\n                    <nav className=\"mainNav navbar navbar-expand-md navbar-dark ftco_navbar bg-dark ftco-navbar-light\" id=\"ftco-navbar\">\r\n                        {this.state.logged_userId ? (\r\n                            <button className=\"menu-bars\" onClick={this.toggleSidebar}><ImIcons.ImMenu /></button>\r\n                        ) : null}\r\n\r\n                        <div className=\"container-fluid\">\r\n\r\n                            <a className=\"navbar-brand\" href=\"/\" style={{marginLeft:\"80px\"}}><img src=\"/ExultLogo.png\" width=\"130\" height=\"60\"></img></a>\r\n                           \r\n\r\n                            <div className=\"collapse navbar-collapse\" id=\"ftco-nav\">\r\n                                <ul className=\"navbar-nav ml-auto col-auto\" style={{padding:\"0.2\"}} >\r\n                                    <li className=\"nav-item active cta \"><Link className=\"nav-link\" to=\"/\">Home</Link></li>\r\n                                    <li className=\"nav-item cta \"><a href=\"about.html\" className=\"nav-link\">About</a></li>\r\n                                    <li className=\"nav-item cta \"><Link  className=\"nav-link\" to=\"/services/\">Services</Link></li>\r\n                                    <li className=\"nav-item cta \"><a href=\"doctors.html\" className=\"nav-link\">Doctors</a></li>\r\n                                    <li className=\"nav-item cta \"><a href=\"blog.html\" className=\"nav-link\">Blog</a></li>\r\n                                    <li className=\"nav-item cta \"><Link  className=\"nav-link\" to=\"/contactus/\">Contact</Link></li>\r\n                                    {sessionStorage.getItem(\"userId\") >= 1000 ? \r\n                                    <li className=\"nav-item cta \"><Link  className=\"nav-link\" to=\"/appointment/\">Book Appointment</Link></li>\r\n                                    : null}\r\n                                    \r\n                                    {!this.state.logged_userId ? (\r\n                                        <li className=\"nav-item cta\"><Link className=\"nav-link\" to=\"/Login\"><b>Log In</b></Link></li>\r\n                                    ) : null}\r\n\r\n                                    {this.state.logged_userId ? (\r\n                                        <li className=\"nav-item cta\"><Link className=\"nav-link\" onClick={ this.logout} to=\"/\"><b >Log out</b></Link></li>\r\n                                    ) : null}\r\n\r\n                                    {this.state.logged_userId ? (\r\n\r\n                                        <li className=\"nav-item cta\">\r\n\r\n                                            <button className=\"menu-bars\" style={{ marginTop: \"0.5rem\" }} onClick={this.logout}><ImIcons.ImUser /></button>\r\n                                        </li>\r\n\r\n\r\n                                    ) : null}\r\n\r\n\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </nav>\r\n\r\n                    {this.state.sideNav && this.state.logged_userId > 10 ?\r\n                        <div>\r\n\r\n\r\n                            <nav className={this.state.sideNav ? 'nav-menu active' : 'nav-menu navbar-m'} style={{position:\"relative\" , float : 'left', height: \"100%\"}}>\r\n\r\n                                <ul className='nav-item form-control'>\r\n\r\n                                    {MenuData.map((item, index) => {\r\n                                        return (\r\n                                            <li key={index} className={item.cName}>\r\n                                                <Link to={item.path} onClick={this.toggleSidebar} className={item.cName}>\r\n                                                    {item.icon}\r\n                                                    <span>{item.title}</span>\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    })}\r\n                                </ul>\r\n\r\n                            </nav>\r\n                        </div>\r\n                        : null}\r\n\r\n\r\n                    {this.state.sideNav && this.state.logged_userId < 10 && this.state.logged_userId > 1 ?\r\n                        <div>\r\n\r\n                            <nav className={this.state.sideNav ? 'nav-menu active' : 'nav-menu navbar-m'} style={{position:\"relative\" , float : 'left'}}>\r\n\r\n                                <ul className='nav-item form-control'>\r\n\r\n                                    {MenuDataDoc.map((item, index) => {\r\n                                        return (\r\n                                            <li key={index} onClick={this.toggleSidebar} className={item.cName}>\r\n                                                <Link to={item.path} className=\"\">\r\n                                                    {item.icon}<span>{item.title}</span>\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    })}\r\n                                </ul>\r\n\r\n                            </nav>\r\n                        </div>\r\n                        : null}\r\n\r\n                    {this.state.sideNav && (this.state.logged_userId === \"1\")?\r\n                        <div>\r\n\r\n                            <nav className={this.state.sideNav ? 'nav-menu active ' : 'nav-menu navbar-m'} style={{position:\"relative\" , float : 'left'}}>\r\n\r\n                                <ul className='nav-item form-control'>\r\n\r\n                                    {MenuDataAdmin.map((item, index) => {\r\n                                        return (\r\n                                            <li key={index} className={item.cName}>\r\n                                                <Link to={item.path} onClick={this.toggleSidebar} className={item.cName}>\r\n                                                    {item.icon}{ item.title}\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    })}\r\n                                </ul>\r\n\r\n                            </nav>\r\n                        </div>\r\n                        : null}\r\n\r\n                    <div>\r\n\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Home}></Route>\r\n                            <Route exact path=\"/Login\" component={Login}></Route>\r\n                            <Route path=\"/register\" component={Register}></Route>\r\n                            <Route path=\"/appointment/:patientId\" component={Appointment}></Route>\r\n                            <Route exact path=\"/details/:patientId\" component={PatientDetails}></Route>\r\n                            <Route path=\"/patientPageEdit\" component={AdminPatientDetailsEdit}></Route>\r\n                            <Route path=\"/addPatDetails\" component={DocUpdatePatData}></Route>\r\n                            <Route path=\"/getApt/:userId\" component={ViewAppointments}></Route>\r\n                            <Route path=\"/addDoc\" component={AdminAddDoctor}></Route>\r\n                            <Route path=\"/addPats\" component={AdminAddPatsBulk}></Route>\r\n                            <Route path=\"/cal\" component={Calendar}></Route>\r\n                            <Route path=\"/contactus\" component={ContactUs}></Route>\r\n                            <Route path=\"/services\" component={Services}></Route>\r\n                        </Switch>\r\n\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default NavBar;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport NavBar from './Components/Navbar';\r\nimport \"./css/open-iconic-bootstrap.min.css\";\r\nimport \"./css/animate.css\";\r\n// import \"./css/owl.carousel.min.css\";\r\nimport \"./css/owl.theme.default.min.css\";\r\nimport \"./css/magnific-popup.css\";\r\nimport \"./css/aos.css\";\r\nimport \"./css/ionicons.min.css\";\r\nimport \"./css/bootstrap-datepicker.css\";\r\nimport \"./css/flaticon.css\";\r\nimport \"./css/icomoon.css\";\r\nimport \"./css/style.css\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <NavBar />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// document.addEventListener( 'DOMContentLoaded', function() {\r\n//   var element = document.getElementById( 'wprk-admin-app' );\r\n//   if( typeof element !== 'undefined' && element !== null ) {\r\n//       ReactDOM.render( <NavBar />, document.getElementById( 'wprk-admin-app' ) );\r\n//   }\r\n// } )\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}